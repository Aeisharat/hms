<?xml version="1.0" encoding="utf-8"?>
<project title="HMS - The Hackspace Management System" version="2.5.0-DEV&#10;">
  <partials/>
  <file path="app\Controller\EmailRecordsController.php" generated-path="app.Controller.EmailRecordsController.html" hash="1c1bc5ad51ff96f75c6d63bc6ded8e52" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends>\AppController</extends>
      <name>EmailRecordsController</name>
      <full_name>\EmailRecordsController</full_name>
      <docblock line="22">
        <description>Controller for the EmailRecords functionality, allows authorized users
to view the emails that have been sent to a member.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="28" package="global">
        <name>$helpers</name>
        <full_name>\EmailRecordsController::helpers</full_name>
        <default>array('Html', 'Form')</default>
        <docblock line="28">
          <description>Views rendered from this controller will have access to the following helpers.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="global">
        <name>isAuthorized</name>
        <full_name>\EmailRecordsController::isAuthorized()</full_name>
        <docblock line="38">
          <description>Test to see if a user is authorized to make a request.</description>
          <long-description></long-description>
          <tag name="param" line="38" description="&lt;p&gt;Member record for the user.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="38" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="38" description="True if the user is authorized to make the request, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="38" description="http://api20.cakephp.org/class/cake-request" link="http://api20.cakephp.org/class/cake-request"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="69" package="global">
        <name>__setupEmailListView</name>
        <full_name>\EmailRecordsController::__setupEmailListView()</full_name>
        <docblock line="69">
          <description>Given a list of e-mails, set the memberNames and emails vars
on the view.</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;Array of e-mail record data.&lt;/p&gt;" type="array" variable="$emails">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$emails</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="global">
        <name>index</name>
        <full_name>\EmailRecordsController::index()</full_name>
        <docblock line="78">
          <description>Display a list of all e-mails for all members.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="global">
        <name>view</name>
        <full_name>\EmailRecordsController::view()</full_name>
        <docblock line="86">
          <description>Display a list of all e-mails for a specific member.</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;Show all e-mails sent to this member.&lt;/p&gt;" type="int|null" variable="$id">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJytVltvGjkUfia/4jygMlRcopX6QjbZUpo0SNCNArsvVYXMjAErnrHX9kCzm/z3Pb7MLSTVRhvEw/h2vu9c/B3/+pvcyZPh+/cnYP9wc30DH8L3RMh7xbY7A9GkC9fzBSwpScPijMU00zSBPEuoguWOwny6LKbtjluaMG0UW+eGiUyD2MCGcaohzbUBRQ1hGRg8R9ZiTyEu0TJh0MogAH2sFuyvRgM+ShLfkS0F/yNSDiYiM0pwTpXbwD2dsKFGEKKdMXI0HB4Oh4GQOCVyhaBCbYfhkB6mzPTDYIBh6qLJ4cnJWMrRKMf1qIOfFWCnB53aqHt2EuIK1SxshHI+X6aE8VsaC5Vo2ORZbGNEODP3PSCci4MGkpudUOxvG2NNlbaWjIA9owdngloTGj+JgR3BCK4pzUDTzNhtBFKarqkaONIxJ1o3QGuc6A9DM6TR8Ab+Ken/iYgaE2YTjWQ2SqSIyjSmrNx9YJx7FiSOKWIhBUtyI6wzLNvCjnKJXgxcXvZEAVGK3Dt2LZmvMc7QDnvg3C9GnWuTchvXK6HSIqJgLSypdm5qSoFt0FsbImCNqOFySu6QEXL/K8cDZUlJokjqMaDtTs5dsHCjDU6ZJbs0qJ2YoLlbbwvawagr/eK7OOSYGENTaazvgYk3hZWfqwzWQnBYqtzxb5w79sBUED0QOFIHhjW8IVwHo5xldxBKmkj2y+kgxoNYtK6iXfqHdqYfzDTiXtQfoo9L8MgFplf62cWKaLWqAhmNuCDJXCSURx0fPpehVgv9iTBeWIij0U8tepOtEBCDsTjD8aO10fbVO02wFtq22PoXHqN/saVmmmBB+LE32j2rndF+Re+YHCcpisyRiS9K5FIXIxa+ppmbj6AE74GbGY3ml/NPl7eL6+nNavx5Pv0KTcDfswrSitPbIi4vx/MASFyerom+sfVoLwrTmpqojGn/QvqVLrx7Fxafrn3rSCyHzne3JRZ59sz5Yg/auYDTurPJVC+occirLE+pYnFUrvkCaG+Y0sZRLJLhEokwTx1ABk8M25kXyHw7/Q7n59UB8HD6wEy8g5qfHiWUV0zwqnQYqtePzshOFAUXvVgwDw/wYm49ZrBqxfgtjLrF56LWLW9EsO/uPE4+lvL8he1R9wlw7La2ydK+aww91EYvSB70K0mx95IsKRoHarDrKcJ3YetKXesKeQy7x25Umi+UMiGGDIKYKLYnhlZqslohg1y6rjNDcraPRMHef1QTrCV/j2wdd2qOYFM4loVPmPx5tSfqHlnw4PZwoNGI5GemJUcvq1hiKy7i6ZqCHXsWevCChNo6i7x7Afn5OPi1Wkt2Low5d1OB/Ku4gZY0ZhtkU7X+MpssMw9ZjkfaLIHFThwa54tXg2vr9YfDkX97R57Z62zNBUftbFOtV+jMTGy3NJlmRTFHQR48AIrAFVoY+/fCKxWzRCwF8+qP2Ww1nkwuF4s37QbHSE+bwdv2gp/i2VYQghiTzBYSnFv1qWsxS6yw29myrzRDXReiV4uUzTx6VCa8avkFoyC7/6f4a90dvXHxbVxjltgrzII6AkVJbDwlwl58rTLUKROV4w2+YFXQhUd7vR7/BUKaQtA=</source>
  </file>
  <file path="app\Model\ForgotPassword.php" generated-path="app.Model.ForgotPassword.html" hash="c0c498cce5dc572c88ab1b525fd91b14" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>ForgotPassword</name>
      <full_name>\ForgotPassword</full_name>
      <docblock line="21">
        <description>Model to handle data and requests for the forgot password process.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="26" package="global">
        <name>EXPIRE_TIME</name>
        <full_name>\ForgotPassword::EXPIRE_TIME</full_name>
        <value>7200</value>
        <docblock line="26">
          <description>Time in seconds that it takes for a forgot password request to expire (2 hours).</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="32" package="global">
        <name>$useTable</name>
        <full_name>\ForgotPassword::useTable</full_name>
        <default>'forgotpassword'</default>
        <docblock line="32">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$primaryKey</name>
        <full_name>\ForgotPassword::primaryKey</full_name>
        <default>'request_guid'</default>
        <docblock line="38">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$validate</name>
        <full_name>\ForgotPassword::validate</full_name>
        <default>array('email' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'matchMemberEmail' =&gt; array('rule' =&gt; array('findMemberWithEmail'), 'message' =&gt; 'Cannot find a member with that e-mail')), 'new_password' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'minLen' =&gt; array('rule' =&gt; array('minLength', \Member::MIN_PASSWORD_LENGTH), 'message' =&gt; 'Password too short')), 'new_password_confirm' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'matchNewPassword' =&gt; array('rule' =&gt; array('newPasswordConfirmMatchesNewPassword'), 'message' =&gt; 'Passwords don\'t match'), 'minLen' =&gt; array('rule' =&gt; array('minLength', \Member::MIN_PASSWORD_LENGTH), 'message' =&gt; 'Password too short')))</default>
        <docblock line="44">
          <description>Validation rules.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="global">
        <name>newPasswordConfirmMatchesNewPassword</name>
        <full_name>\ForgotPassword::newPasswordConfirmMatchesNewPassword()</full_name>
        <docblock line="87">
          <description>Test to see if the user-supplied New Password Confirm matches the user-supplied New Password.</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;User-supplied New Password Confirm.&lt;/p&gt;" type="string" variable="$check">
            <type>string</type>
          </tag>
          <tag name="return" line="87" description="True if the passwords match, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="global">
        <name>findMemberWithEmail</name>
        <full_name>\ForgotPassword::findMemberWithEmail()</full_name>
        <docblock line="97">
          <description>Test to see if we have a record of a Member with the e-mail the user is asking for.</description>
          <long-description></long-description>
          <tag name="param" line="97" description="&lt;p&gt;The e-mail address to check.&lt;/p&gt;" type="string" variable="$check">
            <type>string</type>
          </tag>
          <tag name="return" line="97" description="True if we have record of a Member with that e-mail, otherwise false." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="108" package="global">
        <name>createNewEntry</name>
        <full_name>\ForgotPassword::createNewEntry()</full_name>
        <docblock line="108">
          <description>Create a new entry in the forgot password database for a Member.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;Id of the Member to create the forgot password record for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="108" description="The guid for the newly created entry or null if it failed." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="126" package="global">
        <name>isEntryValid</name>
        <full_name>\ForgotPassword::isEntryValid()</full_name>
        <docblock line="126">
          <description>Check to see if there is a valid, non-expired record for a given guid and member id.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="&lt;p&gt;The guid to check.&lt;/p&gt;" type="string" variable="$guid">
            <type>string</type>
          </tag>
          <tag name="param" line="126" description="&lt;p&gt;The member id to check.&lt;/p&gt;" type="string" variable="$memberId">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="True if the entry exists and has not expired, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guid</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="149" package="global">
        <name>expireEntry</name>
        <full_name>\ForgotPassword::expireEntry()</full_name>
        <docblock line="149">
          <description>Mark an entry as expired.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The id of the record to expire.&lt;/p&gt;" type="string" variable="$guid">
            <type>string</type>
          </tag>
          <tag name="return" line="149" description="True if record was updated to be expired, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guid</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="165" package="global">
        <name>isValidGuid</name>
        <full_name>\ForgotPassword::isValidGuid()</full_name>
        <docblock line="165">
          <description>Check to see if a GUID is valid.</description>
          <long-description></long-description>
          <tag name="param" line="165" description="&lt;p&gt;The GUID to check.&lt;/p&gt;" type="string" variable="$guid">
            <type>string</type>
          </tag>
          <tag name="return" line="165" description="True if $guid is a valid v4 GUID, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guid</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="dev\Setup\Common\Utils.php" generated-path="dev.Setup.Common.Utils.html" hash="c0100f33caac15f8dca2adeb73c5a617" package="dev.Setup.Common">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Common"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <function namespace="" line="22" package="dev.Setup.Common">
      <name>makeAbsolutePath</name>
      <full_name>\makeAbsolutePath()</full_name>
      <docblock line="22">
        <description>Given a relative path from this file, get an absolute path.</description>
        <long-description></long-description>
        <tag name="param" line="22" description="&lt;p&gt;The relative path to convert.&lt;/p&gt;" type="string" variable="$path">
          <type>string</type>
        </tag>
        <tag name="return" line="22" description="The absolute path." type="string">
          <type>string</type>
        </tag>
        <tag name="package" line="22" description="dev.Setup.Common"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$path</name>
        <default></default>
        <type>string</type>
      </argument>
    </function>
    <source>eJxdUNFOGzEQfM59xVRC5ILKHS+8tKUNitqCBFIEeStV5Nzt3VnE9sleJ6oq/h37zikplh/sndnZnfnyre/6rDw7yxAvljdLXKb3wvR/rGw7Rr6Y4eb+ESsSKoF3siLtqIbXNVmsOsL97epQjowHqqVjKzeepdEOpkEjt+SgvGNYYiE1OPSJjdkRqn/TtOGgUqRB8zcgnqM1MO9F9Sxawnhq2hWPxL4vFkYpowfKdlwoUY5WRN4x95/Kcr/fF6YPJeNtGGtsW6YmVyrJ5+lThKBmQbLMUlz4KXekIYKVreDwRi+4Q2ONCrakG9x+REsMEWgbZ7aeR1L0huTACoUYk25xMgjEKP+XZBPS0TuyPDTOQ3be6kPXaojwnXqZNV5XMXgo8UzXCV8GOB/GzPA3m8gGeWW85kPtKy4GYHLSSOt40QmLq3GvXxe/PwcgthyBH64wLac4PcW74tPTdFSajK5GXjFqRaGXLN5kpZZWC0X5ev3j9u77ej17Y75kr8R3z4E=</source>
  </file>
  <file path="app\Controller\MembersController.php" generated-path="app.Controller.MembersController.html" hash="274a33893f599ae76f349a63fe8eaa76" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="29" package="global">
      <extends>\AppController</extends>
      <name>MembersController</name>
      <full_name>\MembersController</full_name>
      <docblock line="29">
        <description>Controller to handle Member functionality, allows members to be viewed,
edited, and registered.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="35" package="global">
        <name>$helpers</name>
        <full_name>\MembersController::helpers</full_name>
        <default>array('Html', 'Form', 'Paginator', 'Tinymce', 'Currency', 'Mailinglist')</default>
        <docblock line="35">
          <description>Views rendered from this controller will have access to the following helpers.</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="41" package="global">
        <name>$components</name>
        <full_name>\MembersController::components</full_name>
        <default>array('BankStatement')</default>
        <docblock line="41">
          <description>The list of components this Controller relies on.</description>
          <long-description></long-description>
          <tag name="var" line="41" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="global">
        <name>isAuthorized</name>
        <full_name>\MembersController::isAuthorized()</full_name>
        <docblock line="51">
          <description>Test to see if a user is authorized to make a request.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;Member record for the user.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="51" description="True if the user is authorized to make the request, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="51" description="http://api20.cakephp.org/class/cake-request" link="http://api20.cakephp.org/class/cake-request"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="global">
        <name>beforeFilter</name>
        <full_name>\MembersController::beforeFilter()</full_name>
        <docblock line="103">
          <description>Perform any actions that should be performed before any controller action.</description>
          <long-description></long-description>
          <tag name="link" line="103" description="http://api20.cakephp.org/class/controller#method-ControllerbeforeFilter" link="http://api20.cakephp.org/class/controller#method-ControllerbeforeFilter"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="132" package="global">
        <name>index</name>
        <full_name>\MembersController::index()</full_name>
        <docblock line="132">
          <description>Show a list of all Status and a count of how many members are in each status.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="global">
        <name>listMembers</name>
        <full_name>\MembersController::listMembers()</full_name>
        <docblock line="143">
          <description>Show a list of all members, their e-mail address, status and the groups they're in.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="global">
        <name>listMembersWithStatus</name>
        <full_name>\MembersController::listMembersWithStatus()</full_name>
        <docblock line="161">
          <description>List all members with a particular status.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="&lt;p&gt;The status to list all members for.&lt;/p&gt;" type="int" variable="$statusId">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$statusId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="global">
        <name>search</name>
        <full_name>\MembersController::search()</full_name>
        <docblock line="176">
          <description>List all members who's name, email, username or handle is similar to the search term.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="195" package="global">
        <name>__paginateMemberList</name>
        <full_name>\MembersController::__paginateMemberList()</full_name>
        <docblock line="195">
          <description>Perform all the actions needed to get a paginated member list with actions applied.</description>
          <long-description></long-description>
          <tag name="param" line="195" description="&lt;p&gt;The query to pass to paginate(), usually obtained from a Member::getMemberSummary**** method.&lt;/p&gt;" type="array" variable="$queryResult">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$queryResult</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="208" package="global">
        <name>getMailingList</name>
        <full_name>\MembersController::getMailingList()</full_name>
        <docblock line="208">
          <description>Get a MailingList model.</description>
          <long-description></long-description>
          <tag name="return" line="208" description="The MailingListModel." type="\MailingListModel">
            <type>\MailingListModel</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="216" package="global">
        <name>register</name>
        <full_name>\MembersController::register()</full_name>
        <docblock line="216">
          <description>Grab a users e-mail address and start the membership procedure.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="268" package="global">
        <name>__setFlashFromMailingListInfo</name>
        <full_name>\MembersController::__setFlashFromMailingListInfo()</full_name>
        <docblock line="268">
          <description>Set the session flash message based on the data returned from a function that updates the mailing list settings.</description>
          <long-description></long-description>
          <tag name="param" line="268" description="&lt;p&gt;The message to show at the start of the flash, before any mailing list messages.&lt;/p&gt;" type="string" variable="$initialMessage">
            <type>string</type>
          </tag>
          <tag name="param" line="268" description="&lt;p&gt;The results from the function that updated the mailing list settings.&lt;/p&gt;" type="array" variable="$results">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$initialMessage</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$results</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="301" package="global">
        <name>setupLogin</name>
        <full_name>\MembersController::setupLogin()</full_name>
        <docblock line="301">
          <description>Allow a member to set-up their initial login details.</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;The id of the member whose details we want to set-up.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="340" package="global">
        <name>setupDetails</name>
        <full_name>\MembersController::setupDetails()</full_name>
        <docblock line="340">
          <description>Allow a member who is logged in to set-up their contact details.</description>
          <long-description></long-description>
          <tag name="param" line="340" description="&lt;p&gt;The id of the member whose contact details we want to set-up.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="384" package="global">
        <name>rejectDetails</name>
        <full_name>\MembersController::rejectDetails()</full_name>
        <docblock line="384">
          <description>Reject the contact details a member has supplied, with a message to say why.</description>
          <long-description></long-description>
          <tag name="param" line="384" description="&lt;p&gt;The id of the member whose contact details we're rejecting.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="424" package="global">
        <name>acceptDetails</name>
        <full_name>\MembersController::acceptDetails()</full_name>
        <docblock line="424">
          <description>Accept the contact details a member has supplied.</description>
          <long-description></long-description>
          <tag name="param" line="424" description="&lt;p&gt;The id of the member whose contact details we're accepting.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="468" package="global">
        <name>approveMember</name>
        <full_name>\MembersController::approveMember()</full_name>
        <docblock line="468">
          <description>Approve a membership and report back to the user.</description>
          <long-description></long-description>
          <tag name="param" line="468" description="&lt;p&gt;The id of the member who we are approving.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="487" package="global">
        <name>__approveMember</name>
        <full_name>\MembersController::__approveMember()</full_name>
        <docblock line="487">
          <description>Approve a membership.</description>
          <long-description></long-description>
          <tag name="param" line="487" description="&lt;p&gt;The id of the member who we are approving.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="531" package="global">
        <name>changePassword</name>
        <full_name>\MembersController::changePassword()</full_name>
        <docblock line="531">
          <description>Change a members password.</description>
          <long-description></long-description>
          <tag name="param" line="531" description="&lt;p&gt;The id of the member whose password we are changing.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="563" package="global">
        <name>forgotPassword</name>
        <full_name>\MembersController::forgotPassword()</full_name>
        <docblock line="563">
          <description>Generate or complete a forgot password request.</description>
          <long-description></long-description>
          <tag name="param" line="563" description="&lt;p&gt;The id of the request, may be null.&lt;/p&gt;" type="string" variable="$guid">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guid</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="610" package="global">
        <name>sendMembershipReminder</name>
        <full_name>\MembersController::sendMembershipReminder()</full_name>
        <docblock line="610">
          <description>Send the 'prospective member' email to a member.</description>
          <long-description></long-description>
          <tag name="param" line="610" description="&lt;p&gt;The id of the member to send the message to.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="628" package="global">
        <name>__sendProspectiveMemberEmail</name>
        <full_name>\MembersController::__sendProspectiveMemberEmail()</full_name>
        <docblock line="628">
          <description>Send the 'prospective member' email to a member.</description>
          <long-description></long-description>
          <tag name="param" line="628" description="&lt;p&gt;The id of the member to send the message to.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="628" description="True if e-mail was sent." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="648" package="global">
        <name>sendContactDetailsReminder</name>
        <full_name>\MembersController::sendContactDetailsReminder()</full_name>
        <docblock line="648">
          <description>Send the 'contact details reminder' email to a member.</description>
          <long-description></long-description>
          <tag name="param" line="648" description="&lt;p&gt;The id of the member to contact.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="677" package="global">
        <name>sendSoDetailsReminder</name>
        <full_name>\MembersController::sendSoDetailsReminder()</full_name>
        <docblock line="677">
          <description>Send the 'so details reminder' email to a member.</description>
          <long-description></long-description>
          <tag name="param" line="677" description="&lt;p&gt;The id of the member to contact.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="692" package="global">
        <name>__sendSoDetailsToMember</name>
        <full_name>\MembersController::__sendSoDetailsToMember()</full_name>
        <docblock line="692">
          <description>Send the e-mail containing standing order info to a member.</description>
          <long-description></long-description>
          <tag name="param" line="692" description="&lt;p&gt;The id of the member to send the reminder to.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="692" description="True if mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="717" package="global">
        <name>view</name>
        <full_name>\MembersController::view()</full_name>
        <docblock line="717">
          <description>View the full member profile.</description>
          <long-description></long-description>
          <tag name="param" line="717" description="&lt;p&gt;The id of the member to view.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="777" package="global">
        <name>edit</name>
        <full_name>\MembersController::edit()</full_name>
        <docblock line="777">
          <description>Allow editing of a member profile.</description>
          <long-description></long-description>
          <tag name="param" line="777" description="&lt;p&gt;The id of the member to view.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="827" package="global">
        <name>revokeMembership</name>
        <full_name>\MembersController::revokeMembership()</full_name>
        <docblock line="827">
          <description>Revoke a members membership.</description>
          <long-description></long-description>
          <tag name="param" line="827" description="&lt;p&gt;The id of the member to revoke.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="848" package="global">
        <name>reinstateMembership</name>
        <full_name>\MembersController::reinstateMembership()</full_name>
        <docblock line="848">
          <description>Reinstate an ex-members membership.</description>
          <long-description></long-description>
          <tag name="param" line="848" description="&lt;p&gt;The id of the member to reinstate.&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="873" package="global">
        <name>__getViewPermissions</name>
        <full_name>\MembersController::__getViewPermissions()</full_name>
        <docblock line="873">
          <description>Check to see if certain view/edit params should be shown to the logged in member.</description>
          <long-description></long-description>
          <tag name="param" line="873" description="&lt;p&gt;The id of the member being viewed.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="873" description="&lt;p&gt;(out) If this is set to true then admin features should be shown.&lt;/p&gt;" type="bool" variable="$showAdminFeatures">
            <type>bool</type>
          </tag>
          <tag name="param" line="873" description="&lt;p&gt;(out) If this is set to true then financial information should be shown.&lt;/p&gt;" type="bool" variable="$showFinances">
            <type>bool</type>
          </tag>
          <tag name="param" line="873" description="&lt;p&gt;(out) If this is set to true then the member has joined.&lt;/p&gt;" type="bool" variable="$hasJoined">
            <type>bool</type>
          </tag>
          <tag name="param" line="873" description="&lt;p&gt;(out) If this is set to true then show personal information about the member.&lt;/p&gt;" type="bool" variable="$showPersonalDetails">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$showAdminFeatures</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$showFinances</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$hasJoined</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$showPersonalDetails</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="905" package="global">
        <name>emailMembersWithStatus</name>
        <full_name>\MembersController::emailMembersWithStatus()</full_name>
        <docblock line="905">
          <description>Send an e-mail to every member with a certain status.</description>
          <long-description></long-description>
          <tag name="param" line="905" description="&lt;p&gt;Attempt to e-mail members with this status.&lt;/p&gt;" type="int" variable="$statusId">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$statusId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="957" package="global">
        <name>login</name>
        <full_name>\MembersController::login()</full_name>
        <docblock line="957">
          <description>Attempt to login as a member.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="970" package="global">
        <name>logout</name>
        <full_name>\MembersController::logout()</full_name>
        <docblock line="970">
          <description>Logout.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="980" package="global">
        <name>__addMemberActions</name>
        <full_name>\MembersController::__addMemberActions()</full_name>
        <docblock line="980">
          <description>Adds the appropriate actions to each member in the member list.</description>
          <long-description></long-description>
          <tag name="param" line="980" description="&lt;p&gt;A list of member summaries to add the actions to.&lt;/p&gt;" type="array" variable="$memberList">
            <type>array</type>
          </tag>
          <tag name="return" line="980" description="The original memberList, with the actions added for each member." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberList</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="997" package="global">
        <name>__getActionsForMember</name>
        <full_name>\MembersController::__getActionsForMember()</full_name>
        <docblock line="997">
          <description>Get an array of possible actions for a member</description>
          <long-description></long-description>
          <tag name="param" line="997" description="&lt;p&gt;The id of the member to work with.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="997" description="An array of actions." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1116" package="global">
        <name>isRequestLocal</name>
        <full_name>\MembersController::isRequestLocal()</full_name>
        <docblock line="1116">
          <description>Test to see if a request is coming from within the hackspace.</description>
          <long-description></long-description>
          <tag name="return" line="1116" description="True if the request is coming from with in the hackspace, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1125" package="global">
        <name>getRequestIpAddress</name>
        <full_name>\MembersController::getRequestIpAddress()</full_name>
        <docblock line="1125">
          <description>Get the ip address of the request.</description>
          <long-description></long-description>
          <tag name="return" line="1125" description="The IP address of the request." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1148" package="global">
        <name>uploadCsv</name>
        <full_name>\MembersController::uploadCsv()</full_name>
        <docblock line="1148">
          <description>Upload a .csv file of bank transactions and look for members to approve.</description>
          <long-description></long-description>
          <tag name="param" line="1148" description="&lt;p&gt;If set then look here in the session for a list of account id's to approve.&lt;/p&gt;" type="string" variable="$guid">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guid</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1254" package="global">
        <name>getMemberIdSessionKey</name>
        <full_name>\MembersController::getMemberIdSessionKey()</full_name>
        <docblock line="1254">
          <description>Get the key used to store members ids in the session after uploading a csv.</description>
          <long-description></long-description>
          <tag name="return" line="1254" description="The key to be used in the session." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="1254" description="MemberController::uploadCsv" link="MemberController::uploadCsv"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="plugins\MemberVoice\Controller\MemberVoiceAppController.php" generated-path="plugins.MemberVoice.Controller.MemberVoiceAppController.html" hash="311f33caedae5525a0db6efdaadeb4e2" package="plugins.MemberVoice.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends>\AppController</extends>
      <name>MemberVoiceAppController</name>
      <full_name>\MemberVoiceAppController</full_name>
      <docblock line="22">
        <description>Base controller for all controllers in the MemberVoice plugin.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="" line="28" package="global">
        <name>$_mvFirstName</name>
        <full_name>\MemberVoiceAppController::_mvFirstName</full_name>
        <default>'firstname'</default>
        <docblock line="28">
          <description>The key in the user data that represents the firstname.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="34" package="global">
        <name>$_mvLastName</name>
        <full_name>\MemberVoiceAppController::_mvLastName</full_name>
        <default>'surname'</default>
        <docblock line="34">
          <description>The key in the user data that represens the surname.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="41" package="global">
        <name>_getUserID</name>
        <full_name>\MemberVoiceAppController::_getUserID()</full_name>
        <docblock line="41">
          <description>Returns the userID of the currently logged in user</description>
          <long-description></long-description>
          <tag name="return" line="41" description="The userID as defined by the containing application" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="global">
        <name>isAuthorized</name>
        <full_name>\MemberVoiceAppController::isAuthorized()</full_name>
        <docblock line="51">
          <description>Check to see if a user is authorized to perform an action.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;Array of user data&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;The request the user is attempting to perform.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="51" description="True if the user is authorized to perform the action, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJyVVNtuEzEQfU6+Yh4iJanaXV54SaGkBFWN1KCqBF4rZ3d2Y2XXNra3IaD+O+PLXopQBZEi2XM7Z+aM990HtVfj9OxsDGfg/ve39/CWDu68kuqkebm3MFvN4XbzBbbI6ui84xkKgzk0IkcN2z3CZr1tzS7iAXNurOa7xnIpDMgCCl6hgboxFjRaxgVYymM7+YSQdWhCWqqSRKBl73C/AQ1YKpYdWIkQfqpqSi5MssF6h/qbdEVWUlgtqwq1T6gCvZgwIAyzvbVqkabH4zGRikyy0ZQvdZnGJJPW3F7ES0Jzm1PJdDy+VmqxaMg/m97W5rqhlgQ1wCxOz2HaE0hXslZSkDN1QdP55TA1kHYZG5lj5bytLh+ZceNp60AhNbCqGpgMxFEOWo/jSDzJrGLGDL2E3DMD/GFR5AZeWn91DJy6Bzy1KMRYQ84soxtzUiqNhvoy3ltwbaxgtVcQlk9Mg1sDUXomI6WlxczS5kwe66cbF/yZguE9TLvM6eV/Qgdk0+h/xb1jPWxMG4A+oCWb6RDXn9z2ulvWaE2dVieoZFlSMeLlItr3s9Q+FWr+g5zbPp8ZyLHggqy7UyhFk6YnQASBKVW5jaF38ifZohGZs8NjifarrzWbkzSjUUSa2D03F1fOfecprUXQeZ3PaIlGz11Xqz1mB7ASDCLwAliYJjfAaB+l5j8Jj9wKNa1YDUwA89hJfGya1QBMa3aCiU+99mcaTSfLMHLFDviA3xuk5z7R8eBG0p47QR0Fa7FW1k2jp5AMR7qTsoKtbjz3F6l/Ze+/LJ7+ORSsoickyaSP3GASh9zsaOr9hLl/vKHSzDd43vEOIyfgGTVHC7BYvBodwluJLJEmJZwUo9GkjurQ6kXtgl4XVyThOr+ROtxDUfcdCMB94hW8eQUg2nzPXv/n3/ue7b0=</source>
  </file>
  <file path="app\View\Helper\NavHelper.php" generated-path="app.View.Helper.NavHelper.html" hash="b3c45695917517f9a20c96041a38f80f" package="app.View.Helper">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.View.Helper"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppHelper</extends>
      <name>NavHelper</name>
      <full_name>\NavHelper</full_name>
      <docblock line="21">
        <description>Helper to output a list of links in a div/ul.</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$helpers</name>
        <full_name>\NavHelper::helpers</full_name>
        <default>array('Html')</default>
        <docblock line="27">
          <description>List of helpers this helper uses.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="global">
        <name>output</name>
        <full_name>\NavHelper::output()</full_name>
        <docblock line="33">
          <description>Given an array of link data, print a list of HTML links.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;Array of link data.&lt;/p&gt;" type="array" variable="$links">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$links</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJx1U01v2zAMPSe/guuC2i5ae5dd2iZr18MyIB2KLdhlKAbVVmKhiiToI1kx5L+PsiTHWbcAAWyS7/Hxkb7+oFo1rs7OxnAG/v8wf4D3+OCf76R60WzdWsjvCpjff4MlJZuYXLCaCkMbcKKhGpYthfvPyxT2FV9pw4zV7MlZJoUBuYIV49TAxhkLmlrCBFjEkSe5pVD33YS0yFLGRjeHhP8NZMCNIvUzWVMIP6JU+Z3RXTmnXFHdVfCgJ1YMFELeWqsuq2q325VSYUg6jV2lXlcRZKoNsxfxpUSjCqSsxuNbpS4vHebzDB9Ds+wcMt+7iq/F1TjZGiJgJUhnlbNAgKMx3g/OxLMBtIFAw7aV42XXoebEGPhCthFKf1kqGgN9N/jdsy8iVdslDBrKTHwBr7HsbNgSDURr8tLxj5R7wrFgkkDTkMyzud3wofZPbEtRnQj5JBkaYsk5KM3EcJr58n4RRirjdjTZQIROwqy3r3jKI0krJ2p/LtGrPMAKHHg0YivIa+nEITqDdyE1onUrIbtGF6Fzb3pCOh5zMsuuBgWOp7wg2y7nkyupKalbiMRATNAbyROYswQYvYWPjvGmu1+pwoEHg312kkJTyEL7TjwzhkbxPzKnefZYpA5DyLAggPdAOZ7s69KwNshqKayWnOPlwXSWGAbRR7zP4MiwIEYeobj6N/XPDdVrmqfweQJ2qzWoP+oLpkxaPJ9bawcXVfxn+m4JiIfTUzgOwRtv2sGXnvNQMf0LkkT0q5r4r+Bi5q/5YuZLU1uLn5L3YjBQz1/E1cZlV2Hb/XQp7PjxRVV4cyGCAvbj/R8ZTJSJ</source>
  </file>
  <file path="app\Controller\StatusController.php" generated-path="app.Controller.StatusController.html" hash="971fa691b917fa57e2b3f3560c8e5245" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\AppController</extends>
      <name>StatusController</name>
      <full_name>\StatusController</full_name>
      <docblock line="19">
        <description>Controller to handle Status functionality, currently just shows a list of statuses.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$helpers</name>
        <full_name>\StatusController::helpers</full_name>
        <default>array('Html', 'Form')</default>
        <docblock line="25">
          <description>Views rendered from this controller will have access to the following helpers.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="global">
        <name>isAuthorized</name>
        <full_name>\StatusController::isAuthorized()</full_name>
        <docblock line="35">
          <description>Test to see if a user is authorized to make a request.</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;Member record for the user.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="35" description="True if the user is authorized to make the request, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="35" description="http://api20.cakephp.org/class/cake-request" link="http://api20.cakephp.org/class/cake-request"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="global">
        <name>index</name>
        <full_name>\StatusController::index()</full_name>
        <docblock line="42">
          <description>Show a list of the different statuses</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJx1Ut9r2zAQfk7+insI2CmJPQZ7WbeuJTAyWKE0Ye+Kc461yJJ2kutmo//7TrLipoyZQGydvh939336Yhs7La+uphB+8LB+gA/pfWXsieSh8ZCv5rC+38AWRZuK32WF2uEeOr1Hgm2DcP9tez4ONx5xL50nueu8NNqBqaGWCh20nfNA6IXU4BknduYJoRrVtPHMUiSh29dCeC5swK0V1VEcEIZHWFusjPZklEKKF9RgJ124MAh54739WJZ93xfG8pHpiEUNHcoEcmUr/TJ9FDymOVOW0zQseFUCb6AReq8QNl74zkHd6So0LZT0pwVUHRFqr07wM7TuGtM7EKB4PGEqLoLQFZG/UsK5RHShgc8e9d7BnbUXp39GOz8kMinL8DZ4KzWZlocrHc91vN1LpdgpD1tUFbIKGw8LqLlseqkP0KCySNEJ3D4JAkEkTtHXxHY7HgbM0h34PBTzbO1blS0g+2qozebX0RIEhi1yg6zhEEHW3DF3ScCeROcbQ/I3G+VyK47siL3/6hgw7t0KEu2gAbOIvMd2x3+ElSFu0VB0H0rFBWLFdI8DF8wSaczn+f0Mik68x9b60HtyMlBxPDvSsDNGwZa66P8N7t8O/KvEAgx/US85aLVQLpEqqY+QciesfP+uqBjIyYqxi4svw8ky0byZ+zlTrH43iudxMIuxzzknYjJJ5j37vp5OXsaMbDh4F7kLhveyrjGEc0zhf0Q5V8/5QD8LuVreOPR5dkbx/tPxkNzlTc2QPBNKZfP54OLlL/SEdLc=</source>
  </file>
  <file path="app\Model\GroupsMember.php" generated-path="app.Model.GroupsMember.html" hash="6d1ea1d659dd2a61cb413c390da0ad83" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>GroupsMember</name>
      <full_name>\GroupsMember</full_name>
      <docblock line="21">
        <description>Model for the table that defines the HABTM relationship between Group and Member</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\GroupsMember::useTable</full_name>
        <default>'member_group'</default>
        <docblock line="27">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$belongsTo</name>
        <full_name>\GroupsMember::belongsTo</full_name>
        <default>array('Member' =&gt; array('className' =&gt; 'Member', 'foreignKey' =&gt; 'member_id'), 'Group' =&gt; array('className' =&gt; 'Group', 'foreignKey' =&gt; 'grp_id'))</default>
        <docblock line="33">
          <description>Specify our 'belongs to' associations</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="global">
        <name>isMemberInGroup</name>
        <full_name>\GroupsMember::isMemberInGroup()</full_name>
        <docblock line="51">
          <description>Test to see if a Member is in a Group.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;The primary key of the Member record.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;The primary key of the Group record.&lt;/p&gt;" type="int" variable="$groupId">
            <type>int</type>
          </tag>
          <tag name="return" line="51" description="True if the Member is in the Group, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$groupId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="global">
        <name>getGroupIdsForMember</name>
        <full_name>\GroupsMember::getGroupIdsForMember()</full_name>
        <docblock line="70">
          <description>Get the id of any Group that a Member is in.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;The primary key of the Member record.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="70" description="An array of Group ids that the Member belongs to." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="global">
        <name>getMemberIdsForGroup</name>
        <full_name>\GroupsMember::getMemberIdsForGroup()</full_name>
        <docblock line="81">
          <description>Get the id's of all members who belong to a group.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;The id of the group to get the members of.&lt;/p&gt;" type="int" variable="$groupId">
            <type>int</type>
          </tag>
          <tag name="return" line="81" description="An array of member ids." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$groupId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJytld9v0zAQx5+Tv+IeKqWZupYXXjo2NibYJiiaWN+RkziJtcS2bGelQvvfOf9okrKWIUGlRq7vznf+fu7Sd+9lLePFyUkMJ2C/97f38BYXdn0t5FaxqjYwvU7hdvUAa0raYPzCcso1LaDjBVWwrims7ta7bevxjRZMG8WyzjDBNYgSStZQDW2nDShqCONgMI5k4olC3mfjwuAp85DocjDYz6gMuJQkfyQVBf8hUs5XoqCNszW+kmAb1QbT2hi5XCw2m81cSNwSncJ8QlWLEKQXLTOn4cccJUrxyEUcX0m5XHZonya4dLmSGSR+kZ7FOyXdBpRCufsZkjX4rImBgpaMowR2+/bqw3qFOjTE6VMzCRk1G0o53CjRSSC8gBVtM6pc9rwhWnuT9ttAfxjKCw27YuBnX8KDpDkrt+MCBGDpcyfOE1Fg2fDKHR3JLsPbwgQd1s75HJLW5fhe2YTJ2YuDUTRIMtoIXuF9RAJYnciZv0yfhChFtvs5QsxaYBJnnsZRlPgbJXB+MWxGibvzV9JSZ9g5zZwN5aWs4p/p1htDvaxw9tQ+EqfWK4d6n8NnVkqODxwhXlNsYpRUUwqsBBJIAdOAbU08p76HJVGkRYOBiS/zrnAjIxVridrCI93a+bCwwjmK5kIV89+jHY3jwb5xxrE4Z53ikAnRwFp1rthRGl9uHzqDkjQ4IgJ31Ib5dhnYlR3PLV8M8/F33IVN+1vN+hJTbMYomvCu/cix07Dpz2FiaqZPL3AGimmSi44br7uHgzu8YK5/rPrWEA3YdjRD5vmA25IaCjjkGzA6x1Cec0vj8LBgoyhoNa75At6cxdFzj/2GGqcWK6zkhG+D5G6695vgP8EPRTkh4Gq3QH+fmBXaJx+FD1N5BF9FzY2XQX8SykcNDAO5INQLbqSxL72ArGS0KfRowg4Kn+JLch/uQe8jSNMU8fR0bomul0t88ymSm2nPU2OKn/x5fpB7eoRh4v6V8ELgc2nY1CLIZ4ebQHVsjMeD6JvBHln5ZhBWYbexO1eUr9BsQ+cU+jizMHMOWpi7/WHbKfZPzAYKf4ntwHT9GVlf5iFmoybw2J5/Aaamue4=</source>
  </file>
  <file path="dev\Setup\Common\SqlWriter.php" generated-path="dev.Setup.Common.SqlWriter.html" hash="08a001dfbdee4b08a23df1c25ed022bd" package="dev.Setup.Common">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Common"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="global">
      <extends/>
      <name>SqlWriter</name>
      <full_name>\SqlWriter</full_name>
      <docblock line="20">
        <description>Class that handles writing runtime data to SQL format.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="global">
        <name>write</name>
        <full_name>\SqlWriter::write()</full_name>
        <docblock line="27">
          <description>Given a value, return an SQL version of that value.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;The value to write.&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="27" description="SQL string representation of the value." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="49" package="global">
        <name>writeInsert</name>
        <full_name>\SqlWriter::writeInsert()</full_name>
        <docblock line="49">
          <description>Given an name and an array of data, return the SQL code needed
to insert that data into the named table.</description>
          <long-description></long-description>
          <tag name="param" line="49" description="&lt;p&gt;Name of the table.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="49" description="&lt;p&gt;An associative array of data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="49" description="The SQL code needed to insert data into the table, or null on error." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJyFVdtu2zgQfU6+YtYwILl15PShL5ukmyAINgZc92In+9AWCS2NY6ISqZCU3aDJv3eGpHzbYtcQbIpzO3PmkD79q17Uh4eDV68OgR/4eP0R3sb1pa6fjHxYOEgve3D9fgJTFFU0jmSOymIBjSrQwHSB8H44bbfZ4zMW0jojZ42TWlnQc5jLEi1UjXVg0AmpwFGcmOklQr6uprSjLFksdL4x8GcLBpzXIv8uHhDCp8BlNkHX1NmlriqtvEsZAEWXLYiQLpyr/xwMVqtVpmva0o2hsto8DGKQHVTSHcWXjJjqUcpBSxdclsJa6kA4WAhVcGsrI51UD2Aa5WSFUAgnwGmYfBrBXJtKuMynyH3o5LH8hwKIvp/rpH/LJSoQsBRlg32mqTH0rnyKJRpLXDKVvqx3yiByYUQFUMkfNJSut/iphBVhYGyeVTiPWXk6BJYzx6XB2qBF5YRb14kpAvCDupkRITBvVO5dfNY01OtRHwcHcg6ptHeqqdDIvDUF28GmMm23thOyvBxuQgOYvcjBAMbaYWjcLaQFtLmoGTWtSTNgMW8MRl9SHUiXWFZX43wbMyTdrUhpxGZBfEi3YFOulcKcxxZDiSvhJzcTNPYt1J2kAxljvyOeSpFjSjt96Hzl75aCjN3WHcXIZHwzGiW0+7I/aAVKkFBIP7wWxognpp3Lr6fP4HlIuS4QFGKBBWcgnJKEaVzgxGtNKtplf85aAPVQxplHfcRBd33VMX/FIf/bNYDp+rwXhM1anUsSBh3WHZy/0dSzasrSy28P9xboXby+fB+0AR9KykJjtPkv1Q19ntS30g84Nwr8g3TkUabR8PxMOOhYtu+nZ3C8K0ouvB4c6eDCWtJwKzik28uQgBKjV0lLmu+BBMR3GUmNgPNursumUpaydBco6Hq0cBYou/uOTzYg+HL8jYTPPvaxvN5zq0Sdbrr1J2EXa+ee9+6D0Kj5WGeTkVJ1huPJ1ecpDMfTD3DvabqH1Id4j+wMZFWXNJw06QM9W0h6216dHtxejG6uJix/+oe4u/owCoXokA8dVgx8m1wOpuuOgEuyHJ8A/Z7C2pvfX7+ODYVzwxkCLV35zeem6uXjbWv7P1paXrp8Mxy929xKHounKNTptcljayn3tE9DW9if5l4nhLCqdvuAI3jT1m8TJv0kVAQs6U9mz3gSjdsQ1oTuXhls9hfGyy9JM05f</source>
  </file>
  <file path="app\Controller\Component\CsvComponent.php" generated-path="app.Controller.Component.CsvComponent.html" hash="2c15228e1b71a7876bff3b7107658d8c" package="app.Controller.Component">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller.Component"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="app.Controller.Component">
      <extends>\Component</extends>
      <name>CsvComponent</name>
      <full_name>\CsvComponent</full_name>
      <docblock line="26">
        <description>A wrapper around a CsvReader to make it a Component that can be
used by Controllers or other Components.</description>
        <long-description></long-description>
        <tag name="package" line="26" description="app.Controller.Component"/>
      </docblock>
      <property static="false" visibility="private" namespace="" line="32" package="app.Controller.Component">
        <name>$__csvReader</name>
        <full_name>\CsvComponent::__csvReader</full_name>
        <default></default>
        <docblock line="32">
          <description>Internal CsvReader that actually does all the work.</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="\CsvReader" variable="">
            <type>\CsvReader</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="app.Controller.Component">
        <name>__construct</name>
        <full_name>\CsvComponent::__construct()</full_name>
        <docblock line="40">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="40" description="&lt;p&gt;A ComponentCollection this component can use to lazy load its components.&lt;/p&gt;" type="\ComponentCollection" variable="$collection">
            <type>\ComponentCollection</type>
          </tag>
          <tag name="param" line="40" description="&lt;p&gt;Array of configuration settings.&lt;/p&gt;" type="array" variable="$settings">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$collection</name>
          <default></default>
          <type>\ComponentCollection</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="52" package="app.Controller.Component">
        <name>readFile</name>
        <full_name>\CsvComponent::readFile()</full_name>
        <docblock line="52">
          <description>Attempt to read a .csv file</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;The path to look for the file.&lt;/p&gt;" type="string" variable="$filePath">
            <type>string</type>
          </tag>
          <tag name="return" line="52" description="True if file was opened successfully, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="61" package="app.Controller.Component">
        <name>getNumLines</name>
        <full_name>\CsvComponent::getNumLines()</full_name>
        <docblock line="61">
          <description>Get the number of lines available.</description>
          <long-description></long-description>
          <tag name="return" line="61" description="The number of lines available." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="71" package="app.Controller.Component">
        <name>getLine</name>
        <full_name>\CsvComponent::getLine()</full_name>
        <docblock line="71">
          <description>Get the line at index.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;The index of the line to retrieve.&lt;/p&gt;" type="int" variable="$index">
            <type>int</type>
          </tag>
          <tag name="return" line="71" description="An array of line data if index is valid, otherwise null." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJyNVMFu2zAMPSdfwUOAOEVqn3bJtq5BgK0F2qHYci9oR0mEyJIhUUmzof8+SnZsB0vXGT7IJik+vvekT1+qbTXMrq6GEF54unuCD816YaqjlZstQbKYwN3jT1gKLJvggyyEdmIFXq+EheVWwOP98vQ7ZPwQK+nIytyTNNqBWcNaKuGg9I7ACkKpgbgOc7MXULTdtCHeJW0a3XaB8PRgwG2FxQ43AuoHqypdGE3WKCUsL8vKaKEppqoaWJPagwrJlqiaZdnhcEhNxb+Mt9ze2E3WFLmslHTdfKRM2IS3zIbD4byqZjPPCcm47TaewrhDMZ58rLMkhy0l4weZZwu3/yGQaYu57QenNkrAHA6Wx2Fi0RpmGBDaPCADJe4ESAq/T32ZSiQoUEMe6fdBnPwIHRaWwIJhxm1X5VqaT1z+g8VsWCh0LkDp2ooXEnrlekB+t2PcaxJWo+qDDyixII9KHWFl2A+8ij44GLtLI5Y92q4kNh5UVu6RBIyen4tTpOOLAbPVfEHGdvNYLDtUizBOEZwIo6Jbzy9m0FY6NuRpoEAq0xmIV/jrCMrgitnvpbi01xOtxSOMnCCSeuNgHr/Z/oXRa7nxFmOTUzxtBvQ5OwzWXtcYeM7TUMk7U0x7zT7X7ZPJhHUYDBgRl81m/d0uVwb3DQajMPr1TY9k3lGLQydHwomD186pRKKsKHBjOc6OTLk0nvRzJcJVoDcwCpEnpG28MqqwCLQas4O1sdEHIaPmky8Jb9nQxihYWs+Wr+8QOCCbmc8qW9z5ohDOrT37aQprVCxUNPlBOvEGtwHpV94nadHUbDX9/ibh+uZCyRkP3wRF8NqXOZPGaiupg7n3KBXmqrvPmiaSjbV8r+AC9o2g7758CLnJu6jPki/iDU2Bj6Tka/wlPZcsQBzFQERarxhoWxdFZ13F/lywUr6wMnPdHIVmNlghYZCw3oiP2B6VXE07uZgMpd6eO8yR1ID+Z/J+epz99Q9C6UhW</source>
  </file>
  <file path="plugins\MemberVoice\Model\MemberVoiceCategory.php" generated-path="plugins.MemberVoice.Model.MemberVoiceCategory.html" hash="69215cd287c923127a9f89feb840a525" package="plugins.MemberVoice.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppModel</extends>
      <name>MemberVoiceCategory</name>
      <full_name>\MemberVoiceCategory</full_name>
      <docblock line="19">
        <description>Model for all category data.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$useTable</name>
        <full_name>\MemberVoiceCategory::useTable</full_name>
        <default>'categories'</default>
        <docblock line="25">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$alias</name>
        <full_name>\MemberVoiceCategory::alias</full_name>
        <default>'Category'</default>
        <docblock line="31">
          <description>Specify a nicer alias for this model.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="global">
        <name>$hasAndBelongsToMany</name>
        <full_name>\MemberVoiceCategory::hasAndBelongsToMany</full_name>
        <default>array('Idea' =&gt; array('className' =&gt; 'MemberVoice.MemberVoiceIdea', 'joinTable' =&gt; 'mv_categories_ideas'))</default>
        <docblock line="37">
          <description>Specify 'has and belongs to many (HABTM) associations.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$tablePrefix</name>
        <full_name>\MemberVoiceAppModel::tablePrefix</full_name>
        <default>"mv_"</default>
        <docblock line="25">
          <description>Prefix for the MemberVoice tables.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$mvUserModel</name>
        <full_name>\MemberVoiceAppModel::mvUserModel</full_name>
        <default>'Member'</default>
        <docblock line="31">
          <description>Name of the model in the app that contains user data.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJx9Uk2PmzAQPcOvmEMlQtTCqZdus002l6xUqlUX7XU1wATcGtuyTVJU9b/XNuRLrdYSaPC8ee/54c9fVKfifLmMYQn+edo9wUdX+Hor1ahZ21lYbFPYFc9QEvZz8yurSRhqYBANaSg7guKxPG17xHdqmLGaVYNlUhiQe9gzTgb6wVjQZJEJsG4OK3kgqM9qQlrHks1C60vDrysbsFZY/8SWYFqKDy0TJiuor0i/SE9SyIZ4wPLJ2Yy98gqLzlr1Kc+Px2MmlduSg3ajUrf5PGTyntkP80fmIksdZR6fggsisJcakHOo0VIr9QgNWswCsOZoDFz52p4w9MuSaG56G6Umwt9ngWdFNduPIS2LFXdvCYMJGcH6gBp80KINYpEaKmcV3jlAGcArSGZTjExy9w8tgnC63j1DE85hO+b+k3fxtsQ04fhPB/oPe9I5CIoGKuJStMZ771GMsNhtHsoiBZeNrBmGW3KRQ61xvFVzRBvRPEw0pSw8yWoCLuIoSh4bwiRa3UfnrSgJ0X/DnkIjubkblzpMvg8DPyQTIbZpoD+8XrJ7ZQ5nAjCNo/Qu/vMXoowCgw==</source>
  </file>
  <file path="dev\Setup\Common\MailingListDataGenerator.php" generated-path="dev.Setup.Common.MailingListDataGenerator.html" hash="47f7af2c5c39d6fb4150e32510b16498" package="dev.Setup.Common">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Common"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends/>
      <name>MailingListDataGenerator</name>
      <full_name>\MailingListDataGenerator</full_name>
      <docblock line="19">
        <description>Generate realistic(ish) data for mailing lists.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="25" package="global">
        <name>$__mailingLists</name>
        <full_name>\MailingListDataGenerator::__mailingLists</full_name>
        <default>array()</default>
        <docblock line="25">
          <description>Array of mailing lists.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="31" package="global">
        <name>$__mailingListSubscriptions</name>
        <full_name>\MailingListDataGenerator::__mailingListSubscriptions</full_name>
        <default>array()</default>
        <docblock line="31">
          <description>Array of mailing list subscriptions.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="global">
        <name>__construct</name>
        <full_name>\MailingListDataGenerator::__construct()</full_name>
        <docblock line="36">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="global">
        <name>getMailingListsData</name>
        <full_name>\MailingListDataGenerator::getMailingListsData()</full_name>
        <docblock line="45">
          <description>Get the array of mailing lists data.</description>
          <long-description></long-description>
          <tag name="return" line="45" description="The array of mailing lists data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="global">
        <name>getMailingListSubscriptionsData</name>
        <full_name>\MailingListDataGenerator::getMailingListSubscriptionsData()</full_name>
        <docblock line="54">
          <description>Get the array of mailing list subscriptions data.</description>
          <long-description></long-description>
          <tag name="return" line="54" description="The array of mailing list subscriptions data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="global">
        <name>subscribeEmailToList</name>
        <full_name>\MailingListDataGenerator::subscribeEmailToList()</full_name>
        <docblock line="65">
          <description>Subscribe an e-mail to a mailing list.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The e-mail address to subscribe.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;The id of the list to subscribe them to.&lt;/p&gt;" type="string" variable="$listId">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;The time the subscription happened.&lt;/p&gt;" type="int" variable="$timestamp">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$listId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="88" package="global">
        <name>__populateMailingLists</name>
        <full_name>\MailingListDataGenerator::__populateMailingLists()</full_name>
        <docblock line="88">
          <description>Populate the mailing lists array.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <source>eJzdV21z0zgQ/hx+hT50Lgklju3YeSmEa6/lKDckBWqOCQzjUWwlEbVlnyWn097w328ly4kD7svBHR/otNNUu8/us6vVI/XJr+kqfdB9+PABkt/o1ekr5OrPx0l6ldHlSqDWcRudTs6RR3CsjS9pQBgnIcpZSDLkrQiavPDKZenxhoSUi4zOc0ETxlGyQAsaEY7inAuUEYEpQwJweJ6sCQo22VgiIIqhEx1uDfKrQgMdpji4wEuCiq+QrI1zIvLUOE7iOGHKJSoIaZcKRdRaCZEedLuXl5dGksJSkmeQNsmWXQ3i3ZiKjv7DgEa1IWT3gW4Xek4YybAgUAuOoFQatChftVGIBUaLJEMxphFlSySN3FDYIMKco0lheAnrJ+CsAwHi703woyzDV7JnXwVBh2ucISztKmQjzeha0tjz/XgbmKNx4dRqP749KuL5nAcZTdU+/YsU51VcXbpjWBdZHkBpOk4+h3aiRc4CCUK+H5QurTZU32jsiRXlnae+nyZpHkHOSq+4jN34XNkAUQxQba/UPmymCOYtz5h29e4G1ZBdElElI3dOk9bBN9yr23B/xrv78C30b4hwZy07G3m/unYgOzVqyxw4MkQ6EoNEgvAO001hKc5wjKROgGWPKG9ZnwbiMMwInBgIwMu4Rg1QxnwRKiQNZVtkl1VLqki5GsNKNQJlAgqkMeECx6mKIP9SAartRCucgkqQ8IaObpI8k8S9RDapVRT0qOT3qJJJj3tGgiQLgfoYFDBnALmr2W20jyw4Yxvw5uTBUqOpYTKhT8MmGj/dZFd2xahYLsip1Q0tZYHBIa3mrBN3QnR6QA94c4e5hLQVA5XXT3O+ups3hCj4FtBuFx2Fn+RVIDvN8ngO14icZyI/8W0/w2J6ZA2yZvCc7KrczX3jUi8aUopbexQ8zccIfj9BXwaRy/v7xY406ALVB/uwRz9+aEJPP6LxuGyqBjVuQRQV+Ypm8+P+vuQE50X9bI/NK613qh27mqS6bOwqcUVC65VyV01rLwbJY/up0dTj0sz5cHltrYfZX81HheWSzMthavZMtz8qDQzHpFieJkJAhhUcqVO4ljnczQQdMQZVByQmTPASI6fLD+DSFESHtE3L7pj9jj1E1ujAsg9Ms3RWM+qLq5T4iZqjAmGV9pwTH18SnsRkjjNlXOCIkzIXWeA8Ev4iS2L/drLNOsj2tDQpWySHrAQGF/KlYOQXX8Jgbj+RQBSYI7bTAvQ7xET3SR5htszhaVOEIay0q2MNbwXA690w3NK2OTF+nkU+XyWZZqEfOoSkYDCCJO6yAEesHhclZWgNq5acc9eQFECcGbBTsTbwX/Mxdog7Ik5gj+ahY5JB37FG2OwN5r/QcPz1WM3hIQcnQ4t8kXXmvYmmXhRNn0+uzt79cTE9+S2aXs/MiRetJieT3oya9sy7uJ5cB73356b73nvrvvRe2+/jt+LMe+1Oqemcnby+mnlH12fv/oym9mx8GIBsYbqE143cz2BF41RyL3msKadzOCDiquAA2l6adg6vNJrl4LFt37bWvrYGEcFwV1QsVk1An1OYDJ8TVhyE4U2xv3Q069Lc6KSLr5CxHW1bZkmewu7WFKhMNeuwY0viwwOxGk/b8HopD4Cc0GJ07apFlbW1lR0RGAIKv9YmH+bbVadvWObQckzbdgfDwaYJNLioQHvGqD/oWabrjAaDwkldWbVa57huSGwcuP06res7g+F9tU6+HM5AvDMkVfZWset1TKtj2chyDpzeTyN250AL7hu4tp4Bp/9B62yj9w1ax8MFET9a674eq59P6+zv0rrefbXO+l6t+0FS1/svlc527qF0I+sGpSv+Tf78DxV2dQM=</source>
  </file>
  <file path="app\Model\Pin.php" generated-path="app.Model.Pin.html" hash="930834fe47a6f22f29b7510b883ab43a" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>Pin</name>
      <full_name>\Pin</full_name>
      <docblock line="21">
        <description>Model for all pin data</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="26" package="global">
        <name>STATE_ACTIVE</name>
        <full_name>\Pin::STATE_ACTIVE</full_name>
        <value>10</value>
        <docblock line="26">
          <description>This pin can be used for entry (up until the expiry date), cannot be used to register a card.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>STATE_EXPIRED</name>
        <full_name>\Pin::STATE_EXPIRED</full_name>
        <value>20</value>
        <docblock line="31">
          <description>Pin has expired and can no longer be used for entry.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="36" package="global">
        <name>STATE_CANCELLED</name>
        <full_name>\Pin::STATE_CANCELLED</full_name>
        <value>30</value>
        <docblock line="36">
          <description>This pin cannot be used for entry, and has likely been used to activate an RFID card.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="41" package="global">
        <name>STATE_ENROLL</name>
        <full_name>\Pin::STATE_ENROLL</full_name>
        <value>40</value>
        <docblock line="41">
          <description>This pin may be used to enrol an RFID card.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="47" package="global">
        <name>$useTable</name>
        <full_name>\Pin::useTable</full_name>
        <default>'pins'</default>
        <docblock line="47">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="53" package="global">
        <name>$primaryKey</name>
        <full_name>\Pin::primaryKey</full_name>
        <default>'pin_id'</default>
        <docblock line="53">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="59" package="global">
        <name>$belongsTo</name>
        <full_name>\Pin::belongsTo</full_name>
        <default>array('Member' =&gt; array('className' =&gt; 'Member', 'foreignKey' =&gt; 'member_id', 'type' =&gt; 'inner'))</default>
        <docblock line="59">
          <description>Specify 'belongs to' associations.</description>
          <long-description></long-description>
          <tag name="var" line="59" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="71" package="global">
        <name>$validate</name>
        <full_name>\Pin::validate</full_name>
        <default>array('pin' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 12), 'message' =&gt; 'Pin must be between 1 and 12 characters long')), 'state' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 11), 'message' =&gt; 'State must be between 1 and 11 characters long'), 'content' =&gt; array('rule' =&gt; 'numeric', 'message' =&gt; 'State must be a number')), 'member_id' =&gt; array('length' =&gt; array('rule' =&gt; array('maxLength', 11), 'message' =&gt; 'Member id must be no more than 11 characters long'), 'content' =&gt; array('rule' =&gt; 'numeric', 'message' =&gt; 'Member id must be a number')))</default>
        <docblock line="71">
          <description>Validation rules.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="105" package="global">
        <name>generatePin</name>
        <full_name>\Pin::generatePin()</full_name>
        <docblock line="105">
          <description>Generate a random pin.</description>
          <long-description></long-description>
          <tag name="returnint" line="105" description="A random pin."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>generateUniquePin</name>
        <full_name>\Pin::generateUniquePin()</full_name>
        <docblock line="115">
          <description>Generate a unique (at the time this function was called) pin.</description>
          <long-description></long-description>
          <tag name="returnint" line="115" description="A random pin that was not in the database at the time this function was called."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="global">
        <name>createNewRecord</name>
        <full_name>\Pin::createNewRecord()</full_name>
        <docblock line="131">
          <description>Create a new pin record</description>
          <long-description></long-description>
          <tag name="param" line="131" description="&lt;p&gt;The id of the member to create the pin for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="131" description="True if creation was successful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJy1Vu9T4zYQ/Zz8Fdspc3aYXELo9UNp4WByaS/TQBlIr/3GKLaSaM6WXVkmZDr8731aOY4DgbvptOGX0a7ePr1d7fqn9/kyb/cPD9t0SO7n+uM1fY8H9zzM8rVRi6WlcNihj5e3NJUirYwTFUldyJhKHUtD06Wky/F0s+w8bmSsCmvUrLQq0wVlc5qrRBaUloUlI61Qmiz2iVl2Lymqo+nMAqVXBTrfGtynQYPOcxF9FgtJ/iPyvHeZxTJhW+KZVLYGNwqX1uYn/f5qteplOZay0iBeZhb9alPRT5V9W/3Tg0QdQPbb7Ys8PzkpYQ8DPHKsoEuBf+j82N4oyQs0zwyJJKEc54yFFYwRJaIo6BpL8sFKHRe0QaK/6/3TpSp4WyQ0zSSVTmgHJ7U1awrLHLJblbB88iFXWEQE2em6HdCv3mQzKL1AHpAjAaOJe0yjFSEllm6nF9PR3cVwOv40olMaHG3P4CguReHhgSR0zHR0RkmmF8B7RmwP9OjP6/HN6AOwjxvYzfM12dZIXQ7nwifqs0zW8JC6PpGIrLrHceFENz+PP7x0ruHF1XA0mXD47/aFT8W6qZTUJku+BDq6uvltMgHiuwbibS4jNV9zPqyYJdLBAbbHpXgvDLmboBceLi9nqC06gMOUnU8pAJ0i2A+YG5UKZPizXL+OVzn+KtcV4p2K92AGM+kyWIBjQKjGLFKCr+gWXRgj1rvg1aZpBmw2h+1WK7iU6UyagE7PtoutgIv8SqSSDRunLtuQY6kWGiS9MWWjY+rtdp1X25TW2IXFTrvVuFyfRKJiJkymRD95lfW9d5Y7pKHMU8aJ1Au7fLLaClyAxiKUsytUIi79AN/Hna53S2VRoA952u7icItDZVX+NOB6HhxTtBQG5StNwbfIn5lh+FdQWJD9T8gN9pK7dfgv0Ru8Qg9JzTQaln2ZRqDLVBoVBV8OLAi+dU00zr+thn+nQSoeJt7zRQl8NZKKazZoaSmqEpcNd/9/VeF57BeUaNT7LxLXgLsdGaQpS13r6m0G9jkGaWm00pYunti318BVFf7MSx3xvVlUkCjVsIO502p9S8PSGBwMvVbQ9fiK0CIFvaNYLZStOG7r5ejoiEvmB3yw23Pg8KGzddmAM7Qe9x2j1OqvEnNYWN8wVeq0R8Ca4AqdP8LslHHna07rMmd5k5sm1WuFG7kzgXn/NWF29Xom1O/MeCtXv4/4SZbltFQWfXgn4Hv6Y7l2THq9HnwPHMFTwrRoteKMt2/WAHhyspMM5/RIqyVelCikA0f37dlcQVdC6WHoo6592bn/day4cTeqkftPb9PhOE6Hv87oiFxV1dlytp0MDY30+dFyxaoaGWUmrrXPcStSctof+Gs6jvm9D9WMdzungF92sy/yWDy+gISm32vkj2YZBu3UoAjU3Ptu0lGUUYQbMy+TLs1FgvRlADEr5Yfpnhz5UFdydcN0w5qcTxUChKq4q25l0/rmTeMgkMf5c3K86l6O0GvWOnDZracIq+wU5jve6APb4VKh7KmgbuW57fVcB83Xi43Lbjus2W7MbrLdiTiW3q7LJPGmDjcTz7ySPKwIFeJehnyaDn1z6jX2ZbctDV7k2nj8B/Vuj6k=</source>
  </file>
  <file path="app\Lib\AutomationDriver\HmsAutomationDriverTest.php" generated-path="app.Lib.AutomationDriver.HmsAutomationDriverTest.html" hash="194aeb46ee19222191baec2dd98fb8fa" package="app.Lib.AutomationDriver">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.AutomationDriver"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AutomationDriverTest</extends>
      <name>HmsAutomationDriverTest</name>
      <full_name>\HmsAutomationDriverTest</full_name>
      <docblock line="21">
        <description>Utility functions for acceptance tests.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="27" package="global">
        <name>$_automationDriver</name>
        <full_name>\AutomationDriverTest::_automationDriver</full_name>
        <default></default>
        <docblock line="27">
          <description>The AutomationDriver for this test.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="\AutomationDriver" variable="">
            <type>\AutomationDriver</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="global">
        <name>reigsterNewMember</name>
        <full_name>\HmsAutomationDriverTest::reigsterNewMember()</full_name>
        <docblock line="27">
          <description>Register a new member.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;E-mail address to register with.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="global">
        <name>setUp</name>
        <full_name>\AutomationDriverTest::setUp()</full_name>
        <docblock line="32">
          <description>Create the AutomationDriver.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <source>eJyVks1u2zAQhM/WU+whgOWglk699CdNmxp10DgIUuVcUNJaIiqRLLmyaxR59ywp2nUN91DBgClydr7hrt59MK1J8svLBPwPHpYP8Dqub7TZWdm0BOnNDJarb1Cg6OPhnaxQOaxhUDVaKFqE1W2x3/aKR6ylIyvLgaRWDvQa1rJDB/3gCCySkAqI60SpNwjVgaY0sUsWQdd/DvxzFAOujah+iAZhfIQx2Z0ss48D6V546GcrN2iDtBuDRelRVEhbIvMmz7fbbaYNb+nBMl7bJo9FLu8lzeNLxg2bsWWeJBZ/DtLid60qtpmecgt05NXT2dskthieSHaSdrAeVDW2Za0tiKpCQ8LbEBe5LPhXnXAOlr07Zwz4i1DVDs4e/j4AH7HhKfCEBCjcQo99iTaL3bOiB/AzUg1cYC9kB4t5+BN1bZHppHlS0WErqR2TTcxQcjsOt2CNbLzmHrerQEhHuxknmUzyHL5ob+WnPSaIrjYEB8NDZN0FtdLNr/jWaKmwA6aw3zq55PxKiY1sBGGhR+D+nunsFUyflCg79MS9zK//IvPCU7Mp8HT+D+3rlsLd64W12rpAXJ3xhlY4wKAZMbEVVpShEzi2ei2xq32EMd8ibL7/N75BWnTYo6JPu9s6jehQNg13YUaxMwh6oCPOCWF+5fjz+Yo7tx9VyHciGUr+8lPv+pw8vwDi4GB0</source>
  </file>
  <file path="dev\Setup\Cmd\SetupCmd.php" generated-path="dev.Setup.Cmd.SetupCmd.html" hash="b48fb4f445bd7c1463c2e0c552d1a1ca" package="dev.Setup.Cmd">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Cmd"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <function namespace="" line="25" package="dev.Setup.Cmd">
      <name>parseBoolFromArray</name>
      <full_name>\parseBoolFromArray()</full_name>
      <docblock line="25">
        <description>Given an index and an array, return a bool version</description>
        <long-description></long-description>
        <tag name="param" line="25" description="&lt;p&gt;The index of the array to parse.&lt;/p&gt;" type="mixed" variable="$index">
          <type>mixed</type>
        </tag>
        <tag name="param" line="25" description="&lt;p&gt;The array to parse.&lt;/p&gt;" type="array" variable="$array">
          <type>array</type>
        </tag>
        <tag name="return" line="25" description="True if value is set, false otherwise." type="bool">
          <type>bool</type>
        </tag>
        <tag name="package" line="25" description="dev.Setup.Cmd"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$index</name>
        <default></default>
        <type>mixed</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$array</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="" line="36" package="dev.Setup.Cmd">
      <name>parseStringFromArray</name>
      <full_name>\parseStringFromArray()</full_name>
      <docblock line="36">
        <description>Given an index and an array, return a string version</description>
        <long-description></long-description>
        <tag name="param" line="36" description="&lt;p&gt;The index of the array to parse.&lt;/p&gt;" type="mixed" variable="$index">
          <type>mixed</type>
        </tag>
        <tag name="param" line="36" description="&lt;p&gt;The array to parse.&lt;/p&gt;" type="array" variable="$array">
          <type>array</type>
        </tag>
        <tag name="return" line="36" description="String of value if value is set, null otherwise." type="mixed">
          <type>mixed</type>
        </tag>
        <tag name="package" line="36" description="dev.Setup.Cmd"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$index</name>
        <default></default>
        <type>mixed</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$array</name>
        <default></default>
        <type>array</type>
      </argument>
    </function>
    <source>eJzFVMtu2zAQPFtfsQcDkgNbQg+91E2b1mmaoA0QJM6pLQxaWlmEJVIlKTlGkX/vUpQSv/LoqYIBU+TM7Gp2ue8/llnpRUdHHtgfXJ1fwdt2PZHlWvFFZiCYDOD88gamyIr28DuPUWhMoBIJKphmCJcX027bIq4x4dooPq8Ml0KDTCHlOWooKm1AoWFcgCEem8saIX6IJqQhlbANdPJ4YJ+NNOCkZPGSLRDck2Ad3qCpynBSJM157rJpzzfygyAzpnwXRavVKpQlbclKUUypFlFL0lHBzah9CcmlAUlGnqfwd8UVzqSIScYPw2gii0KKyIUmoD8Ye62l8JXXKIAJ4GTTHS0S+8KUYuuh9aBS9AZzKXOoUWkyyrLaj1OsgILfkcl9R7cuuxWZ2VhnhcBIILBuLOt47qTv/qZPQNsEmvBTVZF4CjXL7UKDRjOElOXklqRYasUdLfLSSsS2pk7qM7HPlCw+2QCBy3TYRh7AH6/XfabdmC1xPcM7agy9Cx179/9om+0usfiPxrkYNy4N+eDdromiyvPnPXQSz7pIqsFLFjbAzu/A2TNwZz8c9NfY65HNHcZm1vje15lURpZGwzH4/nhzI6SdxB/3ogguUigVahT0VbFCZrBxM2GGzRld+x1W9s4fA9FuNZUIMipjvocRW5iUK20EK/ZgegumKfkDINwC4ahgPN/FLPe/pNLuM/xS0SxQPizVHFhlMtCx4qWh1tEGWdI1T1IVxTrcFU73han6o6psOKYoIZU5zUq9S6wPZ0TjDHNZFrRBw1GkfKEbRUNF1c2V6GzXVD9Sa6bsMSzQSgePQew4st3D9Yy57mrBrl/62g4uIgpcQTPEAsto90cf6G/SlPq0DRccuvfUIdSGnTCQwqYAFeQaWf5NzQ+Tl8+Rm5ymWJRnzr/DEukL8U8f7fwiaq6ksMvDWvULWupCpDKgq3bw8vpikz58EqZfB8teB8NNmNfbKqGqhK3pPaCd5lRzjDMJ/q1g8xwfRhu07J+C7n+PJowJ3ljWXzYhrBI=</source>
  </file>
  <file path="app\Lib\GoogleGeocode\GeocodeResultChecker.php" generated-path="app.Lib.GoogleGeocode.GeocodeResultChecker.html" hash="ee669a221720ba2710f571824409939c" package="app.Lib.GoogleGeocode">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.GoogleGeocode"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends/>
      <name>GeocodeResultChecker</name>
      <full_name>\GeocodeResultChecker</full_name>
      <docblock line="22">
        <description>Class to fetch geocode urls
https://developers.google.com/maps/documentation/geocoding</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="global">
        <name>checkJsonResult</name>
        <full_name>\GeocodeResultChecker::checkJsonResult()</full_name>
        <docblock line="30">
          <description>Given an array of data, return the status part converted to a bool.</description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;An array of decoded json data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="30" description="True if status indicates address is found, false if address is not found." type="bool">
            <type>bool</type>
          </tag>
          <tag name="throws" line="30" description="If status indicates an error or status cannot be determined." type="\GeocodeException">
            <type>\GeocodeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJx9U+9vmzAQ/Qx/xU2qBKla+LQv3aZlirq2UytVbb5NE3LMAV7AZrYJ7ab87zsbk2Y/VISi4Lt79+7e8/uPfdPH+elpDO6F++t7eBv+r1T/rEXdWEhXC7i+e4Q1si4EbwVHabCEQZaoYd0g3N2s52OX8YClMFaLzWCFkgZUBZVo0UA3GAsaLRMSLNWxjdoh8EM3qSyhZKHR8iXgniMasOwZ37IaYXpY32e3YpNdKVW3eIWKq9IzWbYTq5B3xBPSxtr+Is/HccxUT0dq0NRb6ToPRSbvhD0PHxlta0GQeRxr/DEIjYWSnGBKoSXrMC2Kzze3l0WxgAyS/FJrpfPLJ46920EeOB0OHFyyeBcHAWDVMmPAKqjQ8gbqKR0G3RoXdlwNkS1xhy2x1Sar/awZV13esd7kpeJDh9Iy328CELL2lLlHDxwe0AytXTXItyTfrwOFK7FDCYxerdmzE61klp05vQY96WUIfTDQM21JNblDbckHxJrBRqk2C9Jo1gWQEwcBn44x0XEo4btR0jeYikIThwJrPSCIau4mZCk4s2QfVpYaaRBhoFLkvjOoWGt87lGITDSFJ2TbaDUehj8IADf/ayABnXBAbwhyJh3gBom5Rd0JiR44j6N+2JA5oBok94jcrfQLzTVtOPXDL2jDUUQM0zfCFH4NITBFIs8PJI7/UEyTaX3+1hCBWRrnmyjaB1h/VGzxucAnunUmTSbmyRn80eckDPRhOv46p31zYJEZhfNdStfWqlaNqNNQMNdHnNGqE7VNLvxnNPuC1CIfv2T8RK0K7Vdg/sr1coXkEitGKSHhtS08eh7n/kJ4eS4goUs28/P8934j9HOC0hvM6UCzOpsV01FYu0t/rZsvFM4VO9aKMvQ6QnUI+3j/Gyh0soc=</source>
  </file>
  <file path="app\Console\Command\AppShell.php" generated-path="app.Console.Command.AppShell.html" hash="081024bdd7ad4ec6185b4c0e1752fa3a" package="global">
    <docblock line="0">
      <description>AppShell file</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 2.0"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="app.Console.Command">
      <extends>\Shell</extends>
      <name>AppShell</name>
      <full_name>\AppShell</full_name>
      <docblock line="30">
        <description>Application Shell</description>
        <long-description>Add your application-wide methods in the class below, your shells
will inherit them.</long-description>
        <tag name="package" line="30" description="app.Console.Command"/>
      </docblock>
    </class>
    <source>eJytU8lu2zAQvesr5uYFjhQUyMUtUAdujBhICyPOD9DkyGLNDSRlJQj67x1KtOKg1/IicebNe7Px23fXuKKazwuYw71z+waVgloqJEOy7R53cJf/1+yEdJ9GPYMlPDMnBfzAMyrrNJoIG880dtafYNrE6JZVxSmCBErrj7Oewbo3L49NhCmf9Xywt3XsmEfY2NYIFqU1C9gaXn4iqUfnhSvRPUmOJqAAcqKHlwbh5/blYk6IjfVQt1QSH5WZEaAGBEhTW6+zqFPIyBYQIRLT03b98Gv/UMbXmJieUcgQvTy0CR3A1n2bAug2RPAYmTR9HDvYM17pGRtJrcwprz4c6fzHhsBKSXOC8fw7gk8D3Hn7G3lf2ipIw3EMvEad4Ut5m8mHlg3nqs1jWl3XldaRybaeCibBKgeFSst4ky8lZZPyrYqCFm65bMk/nfSLN1nAZE3NtQons6/F1V5SbF8s9Ljcy3sh4I3EgH0AbjopEDTGxooAeSRcsRDgQIvaLYaIkGhCIukkbYc0DXoZE1iPk3KMn9jxUjFplDk3+mpNa9QXMXCPTwdfIxpSHm7vRfGn+As8oBYp</source>
  </file>
  <file path="dev\Setup\Updates\0.3.3.php" generated-path="dev.Setup.Updates.0.3.3.html" hash="fcf478839d17a228ec3f5c3f2514b4c0" package="dev.Setup.Updates">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Updates"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <source>eJzNlt9v2jAQx5/LX3GqkAgVhTGJlzG2ppCOaIQyCNP6BCY5gjVip7YD47+fQ8IPbR0FNmlEPITzfe8un7s4fv8xmkW5ys1NDpIf9No9qGX3TR6tBA1mCoxmEdrOAFwkYbbYoR4yiT7EzEcB7gzBsd2NOfHoo0+lEnQSK8qZBD6FKZ2jhDCWCgQqQhkorSMTvkDwttkYVzpKOUt0t1tIrr0y4C4i3ncSIKSXj4vyAFUclYeRTxTKtc88rSjz2asRjJlS0btKZblclnmkTTwWOi8XQSUTyUpI1W32p6xJFXXISi6X9zhj0IC8mlF5+2E0ClC1Jk1tRC95WKPg45TEc1UogRIxFutas/Gd88BBKXXdRkGXqygLII7AwXCC4ivXyUCRiQZV+KOsKZCsdeNwMaI+EjlONeVEk3+OUax0edfNvmW6FrjmfccC+wG6jy5Y3+yBO9hXGrmrK4Ax9cdAmTKq1eLasTvsdMAcuo8ju6sDOVbXLW08kYxhQYQ3I8J4W6vtBJmHj9ITNEpY6Mrwh8rsC67b8kKalvVgDjsuFN4UMk+piIrl6KWiUo9e33bM/hN8tp7ASIovanMRrO4nu2s1bMZ46x62gZttsz+w3MY84VatX9d3YEXMviTAjHVXS5DiO469p8cs4ILieQ3Yl5/chUy8OtyJiAhk6hjkFwb0L+b69yBnjfiB4dvCv/gB5WGo+38mx6343/NLQ6ebw6+LsURx6WDT/enM934nPhlsKj34zl8En2ynPwNOpjyZzCtT8+pIHv1t+l98908IMjnn6DNTGM1Roeb7E+K46HM=</source>
  </file>
  <file path="app\Model\Member.php" generated-path="app.Model.Member.html" hash="efab96415d4f740f7519ef3e25ae6e0e" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="global">
      <extends>\AppModel</extends>
      <name>Member</name>
      <full_name>\Member</full_name>
      <docblock line="25">
        <description>Model for all member data</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="29" package="global">
        <name>MIN_PASSWORD_LENGTH</name>
        <full_name>\Member::MIN_PASSWORD_LENGTH</full_name>
        <value>6</value>
        <docblock line="29">
          <description>The minimum length passwords must be.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="34" package="global">
        <name>INITAL_CREDIT_LIMIT</name>
        <full_name>\Member::INITAL_CREDIT_LIMIT</full_name>
        <value>2000</value>
        <docblock line="34">
          <description>Initial credit limit, in pence.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="40" package="global">
        <name>$primaryKey</name>
        <full_name>\Member::primaryKey</full_name>
        <default>'member_id'</default>
        <docblock line="40">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="46" package="global">
        <name>$belongsTo</name>
        <full_name>\Member::belongsTo</full_name>
        <default>array('Status' =&gt; array('className' =&gt; 'Status', 'foreignKey' =&gt; 'member_status', 'type' =&gt; 'inner'), 'Account' =&gt; array('className' =&gt; 'Account', 'foreignKey' =&gt; 'account_id'))</default>
        <docblock line="46">
          <description>Specify our 'belongs to' associations</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="global">
        <name>$hasMany</name>
        <full_name>\Member::hasMany</full_name>
        <default>array('StatusUpdate' =&gt; array('order' =&gt; 'StatusUpdate.timestamp DESC', 'limit' =&gt; '1'), 'Pin' =&gt; array('className' =&gt; 'Pin'))</default>
        <docblock line="62">
          <description>Specify our 'has many' associations</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="76" package="global">
        <name>$hasAndBelongsToMany</name>
        <full_name>\Member::hasAndBelongsToMany</full_name>
        <default>array('Group' =&gt; array('className' =&gt; 'Group', 'joinTable' =&gt; 'member_group', 'foreignKey' =&gt; 'member_id', 'associationForeignKey' =&gt; 'grp_id', 'unique' =&gt; true, 'with' =&gt; 'GroupsMember'))</default>
        <docblock line="76">
          <description>Has and belongs to many (HABTM) associations</description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="global">
        <name>$validate</name>
        <full_name>\Member::validate</full_name>
        <default>array('firstname' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 100), 'message' =&gt; 'Firstname must be between 1 and 100 characters long')), 'surname' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 100), 'message' =&gt; 'Surname must be between 1 and 100 characters long')), 'email' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 100), 'required' =&gt; true, 'message' =&gt; 'Email must be between 1 and 100 characters long'), 'content' =&gt; array('rule' =&gt; 'email')), 'password' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'minLen' =&gt; array('rule' =&gt; array('minLength', self::MIN_PASSWORD_LENGTH), 'message' =&gt; 'Password too short')), 'password_confirm' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'minLen' =&gt; array('rule' =&gt; array('minLength', self::MIN_PASSWORD_LENGTH), 'message' =&gt; 'Password too short'), 'matchNewPassword' =&gt; array('rule' =&gt; array('passwordConfirmMatchesPassword'), 'message' =&gt; 'Passwords don\'t match')), 'username' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'mustbeUnique' =&gt; array('rule' =&gt; array('checkUniqueUsername'), 'message' =&gt; 'That username is already taken'), 'alphaNumeric' =&gt; array('rule' =&gt; 'alphaNumeric', 'message' =&gt; 'Aplha-numeric characters only'), 'between' =&gt; array('rule' =&gt; array('between', 3, 50), 'message' =&gt; 'Username must be between 3 to 50 characters long')), 'unlock_text' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 95), 'message' =&gt; 'Unlock text must be between 1 and 95 characters long')), 'usernameOrEmail' =&gt; array('notEmpty'), 'account_id' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 11), 'message' =&gt; 'Account id must be between 1 and 12 characters long'), 'content' =&gt; array('rule' =&gt; 'numeric', 'message' =&gt; 'Account id must be a number')), 'member_status' =&gt; array('rule' =&gt; array('inList', array(\Status::PROSPECTIVE_MEMBER, \Status::PRE_MEMBER_1, \Status::PRE_MEMBER_2, \Status::PRE_MEMBER_3, \Status::CURRENT_MEMBER, \Status::EX_MEMBER))), 'address_1' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 100), 'message' =&gt; 'Address must be between 1 and 100 characters long')), 'address_2' =&gt; array('foo' =&gt; array('rule' =&gt; array('maxLength', 100), 'required' =&gt; false, 'allowEmpty' =&gt; true, 'message' =&gt; 'Address must be no more than 100 characters long')), 'address_city' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 100), 'message' =&gt; 'City must be between 1 and 100 characters long')), 'address_postcode' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 100), 'message' =&gt; 'Postcode must be between 1 and 100 characters long')), 'contact_number' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 20), 'message' =&gt; 'Contact number must be between 1 and 20 characters long')))</default>
        <docblock line="92">
          <description>Validation rules.</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="226" package="global">
        <name>$actsAs</name>
        <full_name>\Member::actsAs</full_name>
        <default>array('KrbAuth')</default>
        <docblock line="226">
          <description>Specify the behavors we implement</description>
          <long-description></long-description>
          <tag name="var" line="226" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="232" package="global">
        <name>$mailingList</name>
        <full_name>\Member::mailingList</full_name>
        <default>null</default>
        <docblock line="232">
          <description>MailingList object, for easy mocking</description>
          <long-description></long-description>
          <tag name="var" line="232" description="" type="\MailingList" variable="">
            <type>\MailingList</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="240" package="global">
        <name>passwordConfirmMatchesPassword</name>
        <full_name>\Member::passwordConfirmMatchesPassword()</full_name>
        <docblock line="240">
          <description>Validation function to see if the user-supplied password and password confirmation match.</description>
          <long-description></long-description>
          <tag name="param" line="240" description="&lt;p&gt;The password to be validated.&lt;/p&gt;" type="array" variable="$check">
            <type>array</type>
          </tag>
          <tag name="return" line="240" description="True if the supplied password values match, otherwise false." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="250" package="global">
        <name>checkUniqueUsername</name>
        <full_name>\Member::checkUniqueUsername()</full_name>
        <docblock line="250">
          <description>Validation function to see if the user-supplied username is already taken.</description>
          <long-description></long-description>
          <tag name="param" line="250" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="array" variable="$check">
            <type>array</type>
          </tag>
          <tag name="return" line="250" description="True if the supplied username exists in the database (case-insensitive) registered to a different user, otherwise false." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="277" package="global">
        <name>checkEmailMatch</name>
        <full_name>\Member::checkEmailMatch()</full_name>
        <docblock line="277">
          <description>Validation function to see if the user-supplied email matches what's in the database.</description>
          <long-description></long-description>
          <tag name="param" line="277" description="&lt;p&gt;The email to check.&lt;/p&gt;" type="array" variable="$check">
            <type>array</type>
          </tag>
          <tag name="return" line="277" description="True if the supplied email value matches the database, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="277" description="Member::addEmailMustMatch()" link="Member::addEmailMustMatch()"/>
          <tag name="link" line="277" description="Member::removeEmailMustMatch()" link="Member::removeEmailMustMatch()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="288" package="global">
        <name>beforeSave</name>
        <full_name>\Member::beforeSave()</full_name>
        <docblock line="288">
          <description>Actions to perform before saving any data</description>
          <long-description></long-description>
          <tag name="param" line="288" description="&lt;p&gt;Any options that were passed to the Save method&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="link" line="288" description="http://book.cakephp.org/2.0/en/models/callback-methods.html#beforesave" link="http://book.cakephp.org/2.0/en/models/callback-methods.html#beforesave"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="301" package="global">
        <name>addEmailMustMatch</name>
        <full_name>\Member::addEmailMustMatch()</full_name>
        <docblock line="301">
          <description>Add an extra validation rule to the e-mail field stating that the user supplied e-mail must match what's in the database.</description>
          <long-description></long-description>
          <tag name="link" line="301" description="Member::checkEmailMatch()" link="Member::checkEmailMatch()"/>
          <tag name="link" line="301" description="Member::removeEmailMustMatch()" link="Member::removeEmailMustMatch()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="311" package="global">
        <name>removeEmailMustMatch</name>
        <full_name>\Member::removeEmailMustMatch()</full_name>
        <docblock line="311">
          <description>Remove the 'e-mail must match' validation rule.</description>
          <long-description></long-description>
          <tag name="link" line="311" description="Member::checkEmailMatch()" link="Member::checkEmailMatch()"/>
          <tag name="link" line="311" description="Member::addEmailMustMatch()" link="Member::addEmailMustMatch()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="321" package="global">
        <name>getCountForStatus</name>
        <full_name>\Member::getCountForStatus()</full_name>
        <docblock line="321">
          <description>Find how many members have a certain Status.</description>
          <long-description></long-description>
          <tag name="param" line="321" description="&lt;p&gt;The id of the Status record to check.&lt;/p&gt;" type="int" variable="$statusId">
            <type>int</type>
          </tag>
          <tag name="return" line="321" description="The number of member records that belong to the Status." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$statusId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="330" package="global">
        <name>getCount</name>
        <full_name>\Member::getCount()</full_name>
        <docblock line="330">
          <description>Find out how many member records exist in the database.</description>
          <long-description></long-description>
          <tag name="return" line="330" description="The number of member records in the database." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="340" package="global">
        <name>doesMemberExistWithEmail</name>
        <full_name>\Member::doesMemberExistWithEmail()</full_name>
        <docblock line="340">
          <description>Find out if we have record of a Member with a specific e-mail address.</description>
          <long-description></long-description>
          <tag name="param" line="340" description="&lt;p&gt;E-mail address to check.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="return" line="340" description="True if there is a Member with this e-mail, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="352" package="global">
        <name>getMemberSummaryForMember</name>
        <full_name>\Member::getMemberSummaryForMember()</full_name>
        <docblock line="352">
          <description>Get a summary of the member records for a specific member.</description>
          <long-description></long-description>
          <tag name="param" line="352" description="&lt;p&gt;The id of the member to work with.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="352" description="&lt;p&gt;If true format the return data.&lt;/p&gt;" type="" variable="$format"/>
          <tag name="return" line="352" description="A summary of the data for a specific member." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="352" description="Member::__getMemberSummary()" link="Member::__getMemberSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>true</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="368" package="global">
        <name>getMemberSummaryForMembers</name>
        <full_name>\Member::getMemberSummaryForMembers()</full_name>
        <docblock line="368">
          <description>Get a summary of the member records for a list of members.</description>
          <long-description></long-description>
          <tag name="param" line="368" description="&lt;p&gt;The array of member ids to work with.&lt;/p&gt;" type="array" variable="$memberIds">
            <type>array</type>
          </tag>
          <tag name="param" line="368" description="&lt;p&gt;If true format the return data.&lt;/p&gt;" type="" variable="$format"/>
          <tag name="return" line="368" description="A summary of the data for the members in the list" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="368" description="Member::__getMemberSummary()" link="Member::__getMemberSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberIds</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>true</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="379" package="global">
        <name>getMemberSummaryAll</name>
        <full_name>\Member::getMemberSummaryAll()</full_name>
        <docblock line="379">
          <description>Get a summary of the member records for all members.</description>
          <long-description></long-description>
          <tag name="param" line="379" description="&lt;p&gt;If true, return a query to retrieve a page of the data, otherwise return the data.&lt;/p&gt;" type="" variable="$paginate"/>
          <tag name="return" line="379" description="A summary of the data of all members." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="379" description="Member::__getMemberSummary()" link="Member::__getMemberSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paginate</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="391" package="global">
        <name>getMemberSummaryForAccountIds</name>
        <full_name>\Member::getMemberSummaryForAccountIds()</full_name>
        <docblock line="391">
          <description>Get a summary of the member records for all members with an account id that is in the list passed in.</description>
          <long-description></long-description>
          <tag name="param" line="391" description="&lt;p&gt;If true, return a query to retrieve a page of the data, otherwise return the data.&lt;/p&gt;" type="" variable="$paginate"/>
          <tag name="param" line="391" description="&lt;p&gt;Retrieve information about members who have one of these account ids.&lt;/p&gt;" type="array" variable="$accountIds">
            <type>array</type>
          </tag>
          <tag name="return" line="391" description="A summary of the data of all members with those account ids." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="391" description="Member::__getMemberSummary()" link="Member::__getMemberSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paginate</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$accountIds</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="404" package="global">
        <name>getMemberSummaryForStatus</name>
        <full_name>\Member::getMemberSummaryForStatus()</full_name>
        <docblock line="404">
          <description>Get a summary of the member records for all members with a certain status.</description>
          <long-description></long-description>
          <tag name="param" line="404" description="&lt;p&gt;If true, return a query to retrieve a page of the data, otherwise return the data.&lt;/p&gt;" type="" variable="$paginate"/>
          <tag name="param" line="404" description="&lt;p&gt;Retrieve information about members who have this status.&lt;/p&gt;" type="int" variable="$statusId">
            <type>int</type>
          </tag>
          <tag name="return" line="404" description="A summary of the data of all members of a status." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="404" description="Member::__getMemberSummary()" link="Member::__getMemberSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paginate</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statusId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="417" package="global">
        <name>getMemberSummaryForSearchQuery</name>
        <full_name>\Member::getMemberSummaryForSearchQuery()</full_name>
        <docblock line="417">
          <description>Get a summary of the member records for all member records where their name, email or username is similar to the keyword.</description>
          <long-description></long-description>
          <tag name="param" line="417" description="&lt;p&gt;If true, return a query to retrieve a page of the data, otherwise return the data.&lt;/p&gt;" type="" variable="$paginate"/>
          <tag name="param" line="417" description="&lt;p&gt;Term to search for.&lt;/p&gt;" type="string" variable="$keyword">
            <type>string</type>
          </tag>
          <tag name="return" line="417" description="A summary of the data of all members who match the query." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="417" description="Member::__getMemberSummary()" link="Member::__getMemberSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paginate</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keyword</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="437" package="global">
        <name>formatMemberInfoList</name>
        <full_name>\Member::formatMemberInfoList()</full_name>
        <docblock line="437">
          <description>Format an array of member infos.</description>
          <long-description></long-description>
          <tag name="param" line="437" description="&lt;p&gt;The array of member infos.&lt;/p&gt;" type="array" variable="$memberInfoList">
            <type>array</type>
          </tag>
          <tag name="param" line="437" description="&lt;p&gt;If true then entries that have a value of null, false or an empty array won't exist in the final array.&lt;/p&gt;" type="bool" variable="$removeNullEntries">
            <type>bool</type>
          </tag>
          <tag name="return" line="437" description="An array of formatted member infos." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberInfoList</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$removeNullEntries</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="454" package="global">
        <name>formatMemberInfo</name>
        <full_name>\Member::formatMemberInfo()</full_name>
        <docblock line="454">
          <description>Format member information into a nicer arrangement.</description>
          <long-description></long-description>
          <tag name="param" line="454" description="&lt;p&gt;The info to format, usually retrieved from Member::__getMemberSummary or Member::getMemberDetails.&lt;/p&gt;" type="array" variable="$memberInfo">
            <type>array</type>
          </tag>
          <tag name="param" line="454" description="&lt;p&gt;If true then entries that have a value of null, false or an empty array won't exist in the final array.&lt;/p&gt;" type="bool" variable="$removeNullEntries">
            <type>bool</type>
          </tag>
          <tag name="return" line="454" description="An array of member information, formatted so that nothing needs to know database rows." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="454" description="Member::__getMemberSummary" link="Member::__getMemberSummary"/>
          <tag name="link" line="454" description="Member::getMemberDetails" link="Member::getMemberDetails"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberInfo</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$removeNullEntries</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="609" package="global">
        <name>createNewMemberInfo</name>
        <full_name>\Member::createNewMemberInfo()</full_name>
        <docblock line="609">
          <description>Create a member info array for a new member.</description>
          <long-description></long-description>
          <tag name="param" line="609" description="&lt;p&gt;The e-mail address for the new member.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="return" line="609" description="An array of member info suitable for saving." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="624" package="global">
        <name>getIdForMember</name>
        <full_name>\Member::getIdForMember()</full_name>
        <docblock line="624">
          <description>Get the Status for a member, may hit the database.</description>
          <long-description></long-description>
          <tag name="param" line="624" description="&lt;p&gt;If array, assumed to be an array of member info in the same format that is returned from database queries, otherwise assumed to be a member id.&lt;/p&gt;" type="mixed" variable="$memberData">
            <type>mixed</type>
          </tag>
          <tag name="return" line="624" description="The status for the member, or 0 if status could not be found." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberData</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="642" package="global">
        <name>getUsernameForMember</name>
        <full_name>\Member::getUsernameForMember()</full_name>
        <docblock line="642">
          <description>Get the username for a member, may hit the database.</description>
          <long-description></long-description>
          <tag name="param" line="642" description="&lt;p&gt;If array, assumed to be an array of member info in the same format that is returned from database queries, otherwise assumed to be a member id.&lt;/p&gt;" type="mixed" variable="$memberData">
            <type>mixed</type>
          </tag>
          <tag name="return" line="642" description="The username for the member, or 0 if username could not be found." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberData</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="670" package="global">
        <name>getStatusForMember</name>
        <full_name>\Member::getStatusForMember()</full_name>
        <docblock line="670">
          <description>Get the Status for a member, may hit the database.</description>
          <long-description></long-description>
          <tag name="param" line="670" description="&lt;p&gt;If array, assumed to be an array of member info in the same format that is returned from database queries, otherwise assumed to be a member id.&lt;/p&gt;" type="mixed" variable="$memberData">
            <type>mixed</type>
          </tag>
          <tag name="return" line="670" description="The status for the member, or 0 if status could not be found." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberData</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="701" package="global">
        <name>getEmailForMember</name>
        <full_name>\Member::getEmailForMember()</full_name>
        <docblock line="701">
          <description>Get the email for a member, may hit the database.</description>
          <long-description></long-description>
          <tag name="param" line="701" description="&lt;p&gt;If array, assumed to be an array of member info in the same format that is returned from database queries, otherwise assumed to be a member id.&lt;/p&gt;" type="mixed" variable="$memberData">
            <type>mixed</type>
          </tag>
          <tag name="return" line="701" description="The email for the member, or null if email could not be found." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberData</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="732" package="global">
        <name>getEmailsForMembersInGroup</name>
        <full_name>\Member::getEmailsForMembersInGroup()</full_name>
        <docblock line="732">
          <description>Get a list of e-mail addresses for all members in a Group.</description>
          <long-description></long-description>
          <tag name="param" line="732" description="&lt;p&gt;The id of the group the members must belong to.&lt;/p&gt;" type="int" variable="$groupId">
            <type>int</type>
          </tag>
          <tag name="return" line="732" description="A list of member e-mails." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$groupId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="746" package="global">
        <name>getEmailsForAllMembers</name>
        <full_name>\Member::getEmailsForAllMembers()</full_name>
        <docblock line="746">
          <description>Get a list of e-mail addresses for all members.</description>
          <long-description></long-description>
          <tag name="return" line="746" description="A list of member e-mails." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="757" package="global">
        <name>registerMember</name>
        <full_name>\Member::registerMember()</full_name>
        <docblock line="757">
          <description>Attempt to register a new member record.</description>
          <long-description></long-description>
          <tag name="param" line="757" description="&lt;p&gt;Information to use to create the new member record.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="757" description="Array of details if the member record was created or didn't need to be, or null if member record could not be created." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="848" package="global">
        <name>setupLogin</name>
        <full_name>\Member::setupLogin()</full_name>
        <docblock line="848">
          <description>Attempt to set-up login details for a member.</description>
          <long-description></long-description>
          <tag name="param" line="848" description="&lt;p&gt;The id of the member to set-up the login details for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="848" description="&lt;p&gt;The data to use.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="848" description="True on success, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="throws" line="848" description="if the member is not a prospective member." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="909" package="global">
        <name>setupDetails</name>
        <full_name>\Member::setupDetails()</full_name>
        <docblock line="909">
          <description>Attempt to set-up contact details for a member.</description>
          <long-description></long-description>
          <tag name="param" line="909" description="&lt;p&gt;The id of the member to set-up the contact details for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="909" description="&lt;p&gt;The data to use.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="909" description="True on success, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="throws" line="909" description="if the member is not a pre-member stage 1." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="978" package="global">
        <name>rejectDetails</name>
        <full_name>\Member::rejectDetails()</full_name>
        <docblock line="978">
          <description>Mark a members contact details as invalid.</description>
          <long-description></long-description>
          <tag name="param" line="978" description="&lt;p&gt;The id of the member.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="978" description="&lt;p&gt;The data to use.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="978" description="&lt;p&gt;The id of the member admin who is rejecting the details.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="978" description="True if the members data was altered successfully, false otherwise." type="bool">
            <type>bool</type>
          </tag>
          <tag name="throws" line="978" description="if the member is not a pre-member stage 2." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1034" package="global">
        <name>acceptDetails</name>
        <full_name>\Member::acceptDetails()</full_name>
        <docblock line="1034">
          <description>Mark a members details as valid.</description>
          <long-description></long-description>
          <tag name="param" line="1034" description="&lt;p&gt;The id of the member who's details we want to mark as valid.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1034" description="&lt;p&gt;The account data to use.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="1034" description="&lt;p&gt;The id of the member admin who's accepting the details.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="1034" description="Array of member details on success, or null on failure." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="1034" description="if the member is not a pre-member stage 2." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1091" package="global">
        <name>approveMember</name>
        <full_name>\Member::approveMember()</full_name>
        <docblock line="1091">
          <description>Approve a member, making them a current member.</description>
          <long-description></long-description>
          <tag name="param" line="1091" description="&lt;p&gt;The id of the member to approve.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1091" description="&lt;p&gt;The id of the member admin who is approving the member.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="1091" description="Array of member details on success, or null on failure." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="1091" description="if the member is not a pre-member stage 3." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1165" package="global">
        <name>changePassword</name>
        <full_name>\Member::changePassword()</full_name>
        <docblock line="1165">
          <description>Change a users password.</description>
          <long-description></long-description>
          <tag name="param" line="1165" description="&lt;p&gt;The id of the member whose password is being changed.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1165" description="&lt;p&gt;The id of the member who is changing the password.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="param" line="1165" description="&lt;p&gt;The array of password data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="throws" line="1165" description="if the member is a prospective member." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
          <tag name="throws" line="1165" description="if the member specified by $adminId doesn't have permission to do this." type="\NotAuthorizedException">
            <type>\NotAuthorizedException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1232" package="global">
        <name>createForgotPassword</name>
        <full_name>\Member::createForgotPassword()</full_name>
        <docblock line="1232">
          <description>Generate a forgot password request from an e-mail.</description>
          <long-description></long-description>
          <tag name="param" line="1232" description="&lt;p&gt;Array of data containing the user submitted e-mail.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="1232" description="An array of id and email data if creation succeeded, false otherwise." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="1232" description="if the member is a prospective member." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1279" package="global">
        <name>completeForgotPassword</name>
        <full_name>\Member::completeForgotPassword()</full_name>
        <docblock line="1279">
          <description>Complete a forgot password request</description>
          <long-description></long-description>
          <tag name="param" line="1279" description="&lt;p&gt;The id of the forgot password request.&lt;/p&gt;" type="string" variable="$guid">
            <type>string</type>
          </tag>
          <tag name="param" line="1279" description="&lt;p&gt;Array of data containing the user submitted e-mail.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="1279" description="True if password was changed, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$guid</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1336" package="global">
        <name>updateDetails</name>
        <full_name>\Member::updateDetails()</full_name>
        <docblock line="1336">
          <description>Update all the updatable info for a member.</description>
          <long-description></long-description>
          <tag name="param" line="1336" description="&lt;p&gt;The id of the member to update.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1336" description="&lt;p&gt;The array of new data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="1336" description="&lt;p&gt;The id of the member who is updating the details.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="1336" description="True if member details were updated ok, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1378" package="global">
        <name>getSoDetails</name>
        <full_name>\Member::getSoDetails()</full_name>
        <docblock line="1378">
          <description>Get a members name, email and payment ref.</description>
          <long-description></long-description>
          <tag name="param" line="1378" description="&lt;p&gt;The id of the member to get the details for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="1378" description="Array of info on success, null on failure." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1407" package="global">
        <name>getApproveDetails</name>
        <full_name>\Member::getApproveDetails()</full_name>
        <docblock line="1407">
          <description>Get a members name, email and pin.</description>
          <long-description></long-description>
          <tag name="param" line="1407" description="&lt;p&gt;The id of the member to get the details for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="1407" description="Array of info on success, null on failure." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1436" package="global">
        <name>getReadableAccountList</name>
        <full_name>\Member::getReadableAccountList()</full_name>
        <docblock line="1436">
          <description>Get a list of account and member details that is suitable for populating a drop-down box</description>
          <long-description></long-description>
          <tag name="return" line="1436" description="List of values on success, null on failure." type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1470" package="global">
        <name>revokeMembership</name>
        <full_name>\Member::revokeMembership()</full_name>
        <docblock line="1470">
          <description>Revoke a members membership.</description>
          <long-description></long-description>
          <tag name="param" line="1470" description="&lt;p&gt;The id of the membership to revoke.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1470" description="&lt;p&gt;The id of the member doing the revoking.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="1470" description="True if membership was revoked, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1481" package="global">
        <name>reinstateMembership</name>
        <full_name>\Member::reinstateMembership()</full_name>
        <docblock line="1481">
          <description>Reinstate an ex-members membership.</description>
          <long-description></long-description>
          <tag name="param" line="1481" description="&lt;p&gt;The id of the membership to reinstate.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1481" description="&lt;p&gt;The id of the member doing the reinstating.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="1481" description="True if membership was reinstated, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1496" package="global">
        <name>__setMemberStatus</name>
        <full_name>\Member::__setMemberStatus()</full_name>
        <docblock line="1496">
          <description>Set a members member_status.</description>
          <long-description></long-description>
          <tag name="param" line="1496" description="&lt;p&gt;The id of the member to change the status of.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="1496" description="&lt;p&gt;The id of the member doing then changing.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="param" line="1496" description="&lt;p&gt;The new member_status.&lt;/p&gt;" type="int" variable="$newStatus">
            <type>int</type>
          </tag>
          <tag name="param" line="1496" description="&lt;p&gt;The status the member must currently have.&lt;/p&gt;" type="int" variable="$requiredCurrentStatus">
            <type>int</type>
          </tag>
          <tag name="return" line="1496" description="True if status was set, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="throws" line="1496" description="if the members status does not match $requiredCurrentStatus." type="\InvalidStatusException">
            <type>\InvalidStatusException</type>
          </tag>
          <tag name="throws" line="1496" description="if the member specified by $adminId doesn't have permission to do this." type="\NotAuthorizedException">
            <type>\NotAuthorizedException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newStatus</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$requiredCurrentStatus</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1536" package="global">
        <name>validateEmail</name>
        <full_name>\Member::validateEmail()</full_name>
        <docblock line="1536">
          <description>Validate that e-mail data is ok.</description>
          <long-description></long-description>
          <tag name="param" line="1536" description="&lt;p&gt;The data to validate.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="1536" description="Array of e-mail data if $data is valid, false otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1564" package="global">
        <name>sanitiseMemberInfo</name>
        <full_name>\Member::sanitiseMemberInfo()</full_name>
        <docblock line="1564">
          <description>Sanitise an array of member info, removing certain fields.</description>
          <long-description></long-description>
          <tag name="param" line="1564" description="&lt;p&gt;The array of member info to sanitise.&lt;/p&gt;" type="array" variable="$memberInfo">
            <type>array</type>
          </tag>
          <tag name="param" line="1564" description="&lt;p&gt;If true then all data should be shown.&lt;/p&gt;" type="bool" variable="$showAdminFeatures">
            <type>bool</type>
          </tag>
          <tag name="param" line="1564" description="&lt;p&gt;If true then finance data should be shown.&lt;/p&gt;" type="bool" variable="$showFinances">
            <type>bool</type>
          </tag>
          <tag name="param" line="1564" description="&lt;p&gt;If true then show data that is only relevant to members who have joined.&lt;/p&gt;" type="bool" variable="$hasJoined">
            <type>bool</type>
          </tag>
          <tag name="param" line="1564" description="&lt;p&gt;If true then show account info.&lt;/p&gt;" type="bool" variable="$showAccount">
            <type>bool</type>
          </tag>
          <tag name="param" line="1564" description="&lt;p&gt;If true then show member status.&lt;/p&gt;" type="bool" variable="$showStatus">
            <type>bool</type>
          </tag>
          <tag name="param" line="1564" description="&lt;p&gt;If true then show member personal details.&lt;/p&gt;" type="bool" variable="$showPersonalDetails">
            <type>bool</type>
          </tag>
          <tag name="return" line="1564" description="The array of sanitised member info, or false on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberInfo</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$showAdminFeatures</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$showFinances</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$hasJoined</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$showAccount</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$showStatus</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$showPersonalDetails</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1623" package="global">
        <name>__saveMemberData</name>
        <full_name>\Member::__saveMemberData()</full_name>
        <docblock line="1623">
          <description>Create or save a member record, and all associated data.</description>
          <long-description></long-description>
          <tag name="param" line="1623" description="&lt;p&gt;The information to use to create or update the member record.&lt;/p&gt;" type="array" variable="$memberInfo">
            <type>array</type>
          </tag>
          <tag name="param" line="1623" description="&lt;p&gt;The fields that should be saved.&lt;/p&gt;" type="array" variable="$fields">
            <type>array</type>
          </tag>
          <tag name="param" line="1623" description="&lt;p&gt;The id of the member who is making the change that needs saving.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="return" line="1623" description="Array of result data if save succeed, false otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberInfo</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1803" package="global">
        <name>getMailingList</name>
        <full_name>\Member::getMailingList()</full_name>
        <docblock line="1803">
          <description>Get a MailingList model.</description>
          <long-description></long-description>
          <tag name="return" line="1803" description="The MailingList model." type="\MailingList">
            <type>\MailingList</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1818" package="global">
        <name>emailToMemberId</name>
        <full_name>\Member::emailToMemberId()</full_name>
        <docblock line="1818">
          <description>Given either a single e-mail or an array of e-mails, return a member id or array of member ids.</description>
          <long-description></long-description>
          <tag name="param" line="1818" description="&lt;p&gt;Either a single e-mail address or an array of e-mail addresses.&lt;/p&gt;" type="mixed" variable="$email">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1818" description="If $email is a single e-mail, returns the member id of the record matching that e-mail (or null if none can be found).&#10;              If $email is an array of e-mail addresses, return an array of all matching member ids that can be found.&#10;             Returns null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1840" package="global">
        <name>getBalanceForMember</name>
        <full_name>\Member::getBalanceForMember()</full_name>
        <docblock line="1840">
          <description>Get the balance for a member, may hit the database.</description>
          <long-description></long-description>
          <tag name="param" line="1840" description="&lt;p&gt;If array, assumed to be an array of member info in the same format that is returned from database queries, otherwise assumed to be a member id.&lt;/p&gt;" type="mixed" variable="$memberData">
            <type>mixed</type>
          </tag>
          <tag name="return" line="1840" description="The balance for the member, or null if balaance could not be found." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberData</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1869" package="global">
        <name>getBestMemberNames</name>
        <full_name>\Member::getBestMemberNames()</full_name>
        <docblock line="1869">
          <description>Get a list of member names or e-mails (if we don't have their name) for all members.</description>
          <long-description></long-description>
          <tag name="return" line="1869" description="Array of member info, indexed by member id." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1900" package="global">
        <name>__setPassword</name>
        <full_name>\Member::__setPassword()</full_name>
        <docblock line="1900">
          <description>Set the password for the member, with the option to create a new password entry if needed.</description>
          <long-description></long-description>
          <tag name="param" line="1900" description="&lt;p&gt;The username of the member.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="1900" description="&lt;p&gt;The new password.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="param" line="1900" description="&lt;p&gt;If true, will create a new auth record for a member that doesn't currently have one.&lt;/p&gt;" type="bool" variable="$allowCreate">
            <type>bool</type>
          </tag>
          <tag name="return" line="1900" description="True if the password was set ok, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$allowCreate</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1922" package="global">
        <name>__getMemberSummary</name>
        <full_name>\Member::__getMemberSummary()</full_name>
        <docblock line="1922">
          <description>Get a summary of the member records for all members that match the conditions.</description>
          <long-description></long-description>
          <tag name="param" line="1922" description="&lt;p&gt;If true, just return the query for pagination instead of the data.&lt;/p&gt;" type="bool" variable="$paginate">
            <type>bool</type>
          </tag>
          <tag name="param" line="1922" description="&lt;p&gt;An array of conditions to decide which member records to access.&lt;/p&gt;" type="array" variable="$conditions">
            <type>array</type>
          </tag>
          <tag name="param" line="1922" description="&lt;p&gt;If true format the data first, otherwise just return it in the same format as the datasource gives it us.&lt;/p&gt;" type="bool" variable="$format">
            <type>bool</type>
          </tag>
          <tag name="return" line="1922" description="A summary (id, name, email, Status and Groups) of the data of all members that match the conditions." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paginate</name>
          <default></default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
    </class>
    <source></source>
  </file>
  <file path="app\Model\Status.php" generated-path="app.Model.Status.html" hash="97d62aced26feb21d9f5988a1b95dd33" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>Status</name>
      <full_name>\Status</full_name>
      <docblock line="21">
        <description>Model for all member status data</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="26" package="global">
        <name>PROSPECTIVE_MEMBER</name>
        <full_name>\Status::PROSPECTIVE_MEMBER</full_name>
        <value>1</value>
        <docblock line="26">
          <description>The id of the prospective member status.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>PRE_MEMBER_1</name>
        <full_name>\Status::PRE_MEMBER_1</full_name>
        <value>2</value>
        <docblock line="31">
          <description>The id of the pre-member (stage 1) status.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="36" package="global">
        <name>PRE_MEMBER_2</name>
        <full_name>\Status::PRE_MEMBER_2</full_name>
        <value>3</value>
        <docblock line="36">
          <description>The id of the pre-member (stage 2) status.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="41" package="global">
        <name>PRE_MEMBER_3</name>
        <full_name>\Status::PRE_MEMBER_3</full_name>
        <value>4</value>
        <docblock line="41">
          <description>The id of the pre-member (stage 3) status.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="46" package="global">
        <name>CURRENT_MEMBER</name>
        <full_name>\Status::CURRENT_MEMBER</full_name>
        <value>5</value>
        <docblock line="46">
          <description>The id of the current member status.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="51" package="global">
        <name>EX_MEMBER</name>
        <full_name>\Status::EX_MEMBER</full_name>
        <value>6</value>
        <docblock line="51">
          <description>The id of the ex member status.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="57" package="global">
        <name>$useTable</name>
        <full_name>\Status::useTable</full_name>
        <default>"status"</default>
        <docblock line="57">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="63" package="global">
        <name>$primaryKey</name>
        <full_name>\Status::primaryKey</full_name>
        <default>'status_id'</default>
        <docblock line="63">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="69" package="global">
        <name>$hasMany</name>
        <full_name>\Status::hasMany</full_name>
        <default>array('Member' =&gt; array('foreignKey' =&gt; 'member_status'))</default>
        <docblock line="69">
          <description>Specify the 'has' associations.</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="global">
        <name>getStatusSummaryAll</name>
        <full_name>\Status::getStatusSummaryAll()</full_name>
        <docblock line="81">
          <description>Get a summary of the status records for all statuses.</description>
          <long-description></long-description>
          <tag name="return" line="81" description="A summary of the data of all statuses." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="81" description="Status::__getStatusSummary()" link="Status::__getStatusSummary()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="global">
        <name>getStatusSummaryForId</name>
        <full_name>\Status::getStatusSummaryForId()</full_name>
        <docblock line="92">
          <description>Get a summary of the status records for a single status.</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;The id of the status to look at&lt;/p&gt;" type="int" variable="$id">
            <type>int</type>
          </tag>
          <tag name="return" line="92" description="A summary of the data for a single status, or false if none can be found." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="link" line="92" description="Status::__getStatusSummary()" link="Status::__getStatusSummary()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="107" package="global">
        <name>__getStatusSummary</name>
        <full_name>\Status::__getStatusSummary()</full_name>
        <docblock line="107">
          <description>Get a summary of the status records for all statuses that match the conditions.</description>
          <long-description></long-description>
          <tag name="param" line="107" description="&lt;p&gt;Only return a summary for statuses that match these conditions.&lt;/p&gt;" type="array" variable="$conditions">
            <type>array</type>
          </tag>
          <tag name="return" line="107" description="A summary (id, name, description and member count) of the data of all statuses that match the conditions." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="120" package="global">
        <name>__formatStatusInfo</name>
        <full_name>\Status::__formatStatusInfo()</full_name>
        <docblock line="120">
          <description>Format status information into a nicer arrangement.</description>
          <long-description></long-description>
          <tag name="param" line="120" description="&lt;p&gt;The info to format, usually retrieved from Status::__getStatusSummary.&lt;/p&gt;" type="" variable="$info"/>
          <tag name="return" line="120" description="An array of status information, formatted so that nothing needs to know database rows." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="120" description="Status::__getStatusSummary" link="Status::__getStatusSummary"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$info</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <source>eJytVm1v2zYQ/iz/ikNhQFLg2E2y7oOzZM0ydwk2r0HiDQOCwqAl2iIskQJJxTGG/vcdX2TJie1mwwxYoI7Hh8e75znqhx/LrOwMjo46cATmf3dzBx9wYMbXolxLtsg0RNcx3IwfYEJJ4Sd/YwnliqZQ8ZRKmGQUxreT2mw87mnKlJZsVmkmuAIxhznLqYKiUhok1YRx0LiOzMQThWSzGxcaUfp+o4/NhPm1woCPJUmWZEHB/UhZ9scipbmdy10kfq4VG0SZ1uVwMFitVn1RoklUEvcTcjHwi9SgYPrYv/QxRTFCDjqdq7IcDiucj0Ic2r3CHoRuEJ936kxaA8yFBJLnUNBihilSmuhKQUo0sWhJTpSCB2elz5ryVEENC39vwExqWWrSZ5JVSqFKmmiGKdsC7lvQIMFUa7i7//xwN7qe3P45mo5H459G93ABJ+d7Memxx4oQDBN6Eu9GrdGmJ4h3+na802/hnSLe2dvxzr6Fd4Z43+3DSyopKdcH8nf9x/396PdJk7sP+7Do8wGY0V8NwvcNwgMWkM3Xdr0msxyfApBWfUvcJ2KwJOMLB1VWM2QidNFhYp0v4J3b691uyFKygsg1LOn6MKJ3/JWuETN0mFOWhrthw4yoEJCzImHESrpBJ1KS9TY4eo8JN8h2MuoEQTi2mQrh4rIxBiHqhLIFxzDsTOjyOXXxhD30ifHRktcvVAMBVRX2mL4QXl6SJkKikGrxOTN1sdp4sfNUkrsA4OoljJGnGb9aiw2FL71ch8PpdEG1e3lwAFG8df55xROTJHjpd5XnUYzyDgIfSFdnTB1f7kI87wRf//2pQWGlc9oiJPhuKUkBDInfRf5u09jjIA9zIZZAdDtVBXvGRr87VTt27AHa5iTHVsvm2M05Ko5wmFF0xtvif83mJyFv0wjP41LaZXwukHL7c+qJFzprvyG9oZ7FMUQLAow8SjBcHVnMGC7hvdtjUzdjf3z/BYuEVdo2/7fCtSiHPgQbFNFJ5lqW4CnbiK5VTkfjbjMPn3m+hprkm23NBnvA1Uv4vRqJWNoDTgrag5SqRLLSFoXwtG6CNmXxITEdPpkpuWRPRNOm5juq2D5v3WDinRSYM55GEGIEeFP72jeLXdWb97r6L6WJ2cOIXQy3iO9JsVXmT9anLqyZN+/mACg5gaXg+D3hWiVf0AIvoJfSdKFbYZoBLnIYPbwcKjyBLatk9AnVOJeiOKCfXWWsB1iQ10H2/F4asZVwRcIPsQyFDZzS1PaGJRcrW9QZQdJIsXpba9xb1z1ptXUcHBmt/WwYpDJR5alpIPgloDBxGKMWlj1PjK7wGEhBf7icLVFcYmgWB4/8CxbYDoNHlpqXzdFTbzZ0bk+Ydz/V4njbo2X2jpb11oVXVgaYYicIBSumDdGZ8ss7gf2URKJuEn7rGOtpbPqJuRIJCsQlBC9d6LrVvgWZBn4BN0RlwyFmO+rWnfd1X7N4Qdcc6/ASzXROa3d7IvR3LdAvw49USZL2Un+h17IJ7BGmZaWyaPt4PZup5tLHa7/puT1vMTE6m+0x3mpDqIWKQ2ePzTN2vbcl2K1NrTy//gO0nQ6h</source>
  </file>
  <file path="app\Model\StatusUpdate.php" generated-path="app.Model.StatusUpdate.html" hash="01fc2d1f2c3350dabbde96a305e94b41" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>StatusUpdate</name>
      <full_name>\StatusUpdate</full_name>
      <docblock line="21">
        <description>Model for all status update data</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\StatusUpdate::useTable</full_name>
        <default>'status_updates'</default>
        <docblock line="27">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$primaryKey</name>
        <full_name>\StatusUpdate::primaryKey</full_name>
        <default>'id'</default>
        <docblock line="33">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="39" package="global">
        <name>$belongsTo</name>
        <full_name>\StatusUpdate::belongsTo</full_name>
        <default>array('Member' =&gt; array('className' =&gt; 'Member', 'foreignKey' =&gt; 'member_id'), 'MemberAdmin' =&gt; array('className' =&gt; 'Member', 'foreignKey' =&gt; 'admin_id'), 'OldStatus' =&gt; array('className' =&gt; 'Status', 'foreignKey' =&gt; 'old_status'), 'NewStatus' =&gt; array('className' =&gt; 'Status', 'foreignKey' =&gt; 'new_status'))</default>
        <docblock line="39">
          <description>Specify the 'belongs to' associations.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="global">
        <name>createNewRecord</name>
        <full_name>\StatusUpdate::createNewRecord()</full_name>
        <docblock line="67">
          <description>Create a new status update record.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;The id of the member who's having their status updated.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;The id of the member who is doing the updating.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;The members previous status.&lt;/p&gt;" type="int" variable="$oldStatus">
            <type>int</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;The members new status.&lt;/p&gt;" type="int" variable="$newStatus">
            <type>int</type>
          </tag>
          <tag name="return" line="67" description="True if creation was successful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$oldStatus</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newStatus</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="global">
        <name>formatStatusUpdate</name>
        <full_name>\StatusUpdate::formatStatusUpdate()</full_name>
        <docblock line="94">
          <description>Get all the data about a status update, formatted so that calling code doesn't need to know about our columns.</description>
          <long-description></long-description>
          <tag name="param" line="94" description="&lt;p&gt;The id of the record to format.&lt;/p&gt;" type="int" variable="$updateId">
            <type>int</type>
          </tag>
          <tag name="return" line="94" description="Array of formatted data if record found, otherwise false." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$updateId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJylVk1v2zgQPcu/YgoEkRTI9mkv7jrbIMBuit10i8Y99GTQEmUTkUiBpOwai/z3HX5IpJ00DVADNuT5eDMcvkfq9z+6XTeZX11N4ArM9/PdZ/gNH8zzreiOkm13GrLbHO7uH2BFSeud/7CSckUr6HlFJax2FO4/rgazifhCK6a0ZJteM8EViBpq1lAFba80SKoJ46Axj2zEnkI5VuNCI8rMF/oQHOYTtQEfOlI+ki0F9yFdN7sXFW2sr3GdeF/UG2Q7rbvFfH44HGaiQ5PoJdYTcjv3SWreMj31f2Y4ohwh55PJTdctFj36sxQfba20gNQ95O8nwyStAWohgTQNKE10r6DvKqIp4A+xaGVDlIIH6/zqfPS7prxSMIDDfyPkQ0dLVh/twDTZNPgrAFuZ2cXuiQQza7610EnXb7B7uMCAlQ1eQuraWLs2VPr+RehOspbIIzzS4+vIPvBvejTYrPoBXrqhjeBbhd2mgOsVJSOWDgGdSEmOp+A+aSUQ27qzSZKk97TdUJnC8joYk9SO8RNpqXUMQYX14Q5QtuXYpHO21rnGbtGdFwH0pmoZ/xVkYgAMcDEi/9tUbnN/guuDXsYVTbVWIcAhf6KHX0fm9HCOHDH4VlJDSAIYdkZgSUshq9lwYqAIJWmBcQ0Xbr4fK3scsMpI3pDAmeGwE6mCHdkjmYydyVNkhxnj2am+AgdMQSU8nEPBP89gxLATFsilK6Q63TOBRtfEsyw+TPkkK8zDJeA51ksOGyEaWMke+6yhNMNDksOBIHpfllSpum8KqEmD54/AZuWBOe0G1tc9L22WTae4yV/spLNxrMU4kSJaVBG1muOJkSTYQsaUojqk5nB5Cd7mMWLTCBYbI9TLS8Mhpta8b6lk5TPg4DhFD/bzEsET6rj2kwu9Y2p67TiYGVYaozk44/MAOR0fnmdaQG9Qu3GFKXr3KFnrHQbrnZHurDtM2wdE8rEB4yKGAM1aigFtZ/2mwyz9Nm2nFdwt2EKluQvMza9foudS5tevyJ5mdtk5vFs68mBkkjyZaB9srWh8GqX7F9X22jGSsDPD+7VH06nYCnM9tUSj7EAJDCYaSkwzYirx7kFdUcVTvI0pRuBd88jFwUPhfYkxTd/6Y/xcOa7CM926g8NgudInAmrZd6xzY/bPvimMzdklIKN9di3whaMIGnID+IGSHErMkmxsznHtwsMuwQ+9ZrzK0ppJpfFqd3xKS8ErZq+tiGUn7JsNPBrhc7tVRoq+xkDu4VBbwh1Ru8Via7TmQgo4BR0parGGLY8V4Mv+FClowfMu3RxfID5a1/jOIPlwh/ipuLtveo0Vvnr3n0I6a5C8x6ilaN/WVaSyIdm8J7wlNdLfkEr021KDMl3mK5p6+h/PNnDz</source>
  </file>
  <file path="app\Model\Permission.php" generated-path="app.Model.Permission.html" hash="fc22c7d091ea1bae95caecf32e744af7" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>Permission</name>
      <full_name>\Permission</full_name>
      <docblock line="21">
        <description>Model to handle data and queries for permissions.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\Permission::useTable</full_name>
        <default>'permissions'</default>
        <docblock line="27">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$primaryKey</name>
        <full_name>\Permission::primaryKey</full_name>
        <default>'permission_code'</default>
        <docblock line="33">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJx9UMFKw0AUPJuvmIOQtmhy8lIVK71UtFBs77JJXpKlSXbd3bQG8d992aa1grgQmLx5OzM7dw+61EE8mQSYoP9WixVuGPR4rnRnZFE6jOZjLJZrbEjUA/kiU2osZWibjAw2JWH5tDmO+41XyqR1Riatk6qxUDlyWZFF3VoHQ07IBo7viUTtCOnJrVGOVaLBaPZD9OcsBmZapFtREA5HaB0tVUaV56pDkoE7y4ZR6ZyexvF+v4+U5pFqDfspU8TDJRvX0l0PPxFXNGbJOAgetZ5OW+ZHIUPvFV4hPIDxbXBs0g/gFErRZBUhE06AId5bMpIryJWBJlNLa/tuIi+fVsJarE5j0IejJrM4euHz5LDWlMq88/05kbAHu3GyyL99Jwz66pvCC1/oNuHH4JIXNn75HuGZfXj7p642shamw5a6/2WHxWfqfgu/pZyaxb++AepRwJY=</source>
  </file>
  <file path="app\Model\MemberEmail.php" generated-path="app.Model.MemberEmail.html" hash="cf85d38f6e1532102bc6021187ed43f8" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>MemberEmail</name>
      <full_name>\MemberEmail</full_name>
      <docblock line="21">
        <description>Model to provide validation for the email members form/view.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\MemberEmail::useTable</full_name>
        <default>false</default>
        <docblock line="27">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$validate</name>
        <full_name>\MemberEmail::validate</full_name>
        <default>array('subject' =&gt; array('rule' =&gt; 'notEmpty'), 'message' =&gt; array('rule' =&gt; 'notEmpty'))</default>
        <docblock line="33">
          <description>Validation rules.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="global">
        <name>getMessage</name>
        <full_name>\MemberEmail::getMessage()</full_name>
        <docblock line="48">
          <description>Get the message from an array of member email data.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;The array of data to get the message from.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="48" description="The message, or null if it could not be found." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJyNU02L2zAQPdu/Yg7L2gmpfeol7bZblqUpNLB0Q69FtseOWlkS+kgaSv57R7IdZ2EPazDIb2bejN48f/ys9zotl8sUlhDep80TvKdDOD8ofTK82zvIHxaw2T7DDlk/Br/zGqXFBrxs0MBuj7D9tpvgkPEDG26d4ZV3XEkLqoWWC7TQe+vAoGNcgqM6VqkDQn3pJpUjlmJsdD8HwnM1BtxrVv9hHcLwMK2LrWpQxJgYJhljV7NBvndOr8vyeDwWShOkvKF+ynTlWGTLnrt340dBEi2IskzTL1qv157ieUbH2CtbQTYcFh/SSckIgFOgjTrwBuHABG9Y0AFaZeKtsWdcQI99hcYGtC8PHI9F7FQLZi1sY/AxJuJfh7KxMPWFf5duzxpr3p4iq2OVwNCZpiyiDgdmoFJKIJOROtG+opvBDWXsYvYdtExYnMf/OU9rPG1sJmLGsNNLmvFqgSZG8zRJMuur31i7DO4+zWiSBbaIZbTjx167U0b4YhVKerSWdvn2kiu9v6KLtx85oDWqByYHnmC8QeZRc5qWFZPhyUOG9WPmTQhFL18qI0J6dq+0GHQhJ3sjIVhddrF4zFkBrVp6IYC3wB053IsmuBsqqlf04xQvpGy9rKPo1Gs7UORxogUtO0mIJOfWopvA21vg9teg1QANick40YbZ/XrdTQXBqLOhiklvkjFJzumlKgxM0Dk9/wd80USm</source>
  </file>
  <file path="app\Model\EmailRecord.php" generated-path="app.Model.EmailRecord.html" hash="473e8ac75abc47be41fd926c809386e6" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>EmailRecord</name>
      <full_name>\EmailRecord</full_name>
      <docblock line="21">
        <description>Model for all email record data</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\EmailRecord::useTable</full_name>
        <default>'hms_emails'</default>
        <docblock line="27">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$primaryKey</name>
        <full_name>\EmailRecord::primaryKey</full_name>
        <default>'hms_email_id'</default>
        <docblock line="33">
          <description>Specify the primary ket to use.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="39" package="global">
        <name>$validate</name>
        <full_name>\EmailRecord::validate</full_name>
        <default>array('member_id' =&gt; array('length' =&gt; array('rule' =&gt; array('maxLength', 11), 'message' =&gt; 'Member id must be no more than 11 characters long'), 'content' =&gt; array('rule' =&gt; 'numeric', 'message' =&gt; 'Member id must be a number')), 'subject' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'Must have a subject'))</default>
        <docblock line="39">
          <description>Validation rules.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="61" package="global">
        <name>getAllEmails</name>
        <full_name>\EmailRecord::getAllEmails()</full_name>
        <docblock line="61">
          <description>Get information about all the emails sent.</description>
          <long-description></long-description>
          <tag name="return" line="61" description="An array of record data, or null if data could not be found." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="global">
        <name>getAllEmailsForMember</name>
        <full_name>\EmailRecord::getAllEmailsForMember()</full_name>
        <docblock line="72">
          <description>Get information about all the emails sent to a member.</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;The id of the member to look for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="72" description="An array of record data, or null if data could not be found." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="global">
        <name>getMostRecentEmailForMember</name>
        <full_name>\EmailRecord::getMostRecentEmailForMember()</full_name>
        <docblock line="87">
          <description>Get the most recent email record for a member.</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;The id of the member to look for.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="return" line="87" description="An array of record data, or null if data could not be found." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="104" package="global">
        <name>__formatEmailRecords</name>
        <full_name>\EmailRecord::__formatEmailRecords()</full_name>
        <docblock line="104">
          <description>Given an array of data for multiple records from the database, format it so other classes can use it.</description>
          <long-description></long-description>
          <tag name="param" line="104" description="&lt;p&gt;An array of records data.&lt;/p&gt;" type="array" variable="$recordList">
            <type>array</type>
          </tag>
          <tag name="return" line="104" description="A formatted array of data, or null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$recordList</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="121" package="global">
        <name>__formatEmailRecord</name>
        <full_name>\EmailRecord::__formatEmailRecord()</full_name>
        <docblock line="121">
          <description>Given an array of data from the database, format it so other classes can use it.</description>
          <long-description></long-description>
          <tag name="param" line="121" description="&lt;p&gt;An array of record data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="121" description="A formatted array of data." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="global">
        <name>createNewRecord</name>
        <full_name>\EmailRecord::createNewRecord()</full_name>
        <docblock line="137">
          <description>Create one or more new EmailRecord entry</description>
          <long-description></long-description>
          <tag name="param" line="137" description="&lt;p&gt;Either a single member_id or an array of member id's that the e-mail was sent to.&lt;/p&gt;" type="mixed" variable="$to">
            <type>mixed</type>
          </tag>
          <tag name="param" line="137" description="&lt;p&gt;The subject of the e-mail.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="True if creation was successful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="172" package="global">
        <name>__createNewRecordImpl</name>
        <full_name>\EmailRecord::__createNewRecordImpl()</full_name>
        <docblock line="172">
          <description>Create a new EmailRecord entry</description>
          <long-description></long-description>
          <tag name="param" line="172" description="&lt;p&gt;The member_id of the member that the e-mail was sent to.&lt;/p&gt;" type="int" variable="$to">
            <type>int</type>
          </tag>
          <tag name="param" line="172" description="&lt;p&gt;The subject of the e-mail.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="return" line="172" description="True if creation was successful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzVV1tv2zYUfrZ/xSlgVHLh2OvDXtwla5BmS9FmKJpgwJ4MWqItrpIokFRcY+1/3+EhKYlO0iRAsUuABArJc+H5vnPhTz83RTNevHgxhhdgfz9cfIAf8cN+n8lmr8S2MJCeTeHi8gquOav85nuR8VrzHNo65wquCw6Xb6/Dsj3xkedCGyXWrRGy1iA3sBEl11C12oDihokaDMqxtbzhkHXWamlQy9wbet1v2J+BG/C6YdkntuXgfljTzC9lzkvaK50nfm/gG6SFMc1ysdjtdnPZ4JJsFdqTarvwQnpRCXPk/5ljiKaocjEenzbNctnifprgJ9lKZpC4j+mrcYgkLcBGKmBlCbxiosQLZ1LlkDPDSFlWMq3h3O59dFv8s+F1riGohr86hVcNz8RmT+EybF3iXwnoyJyuesMU2EjXW9I8ato1+g4TPHBNh48hKSq9Ikd08upOtY0SFVN7+MTNo5T78+/4PlK/EvnAwO+sFHhjxB9Ui9j3KplSbB9rvHGHrbu0m45Ho6Ti1ZorqxWOT/r1UVLyemuKg9VRYs0MFpOKfX7vTs7g5cvpzJ2quNZIHDqYXJIJELlj5pojA6GSCoNcsBqlICuYYpnhSkMp621CWpyuJJM1wmbudySp24orkSWPs80Az+PawAj9SXS7/pNnh4aGdqQ5rxqzd5IHdqz2gt1Y/UFRUD0g7q8IvqiRuJUDDVOzNURiSxHHH9B43XkoGK8xkVtVO4/gNHxgsg8IPwNMhbpFNWJDC5jtbZnbTLdX3kgsIvOIDJu2zsiDLTenZUlpotMppsRoNFFct6VBmkxMIfTRyUbUeZqgl4ixiwwkaBpjSHcf5NjcCAyLYVUDb86vzhKY4uVHI38Hr261cgEYyOnUG7XHvz49XDajGDgu96FrkFUVKjAwcVtvcyqkyAaMn1Xhlq10KeUnW1Hm/3TQf5HKkTTtnHQwoNZU6JVn92DXbX9PmLDGYprlghrJMLuHMnGlGDjrMH4iyBblTsZG8RbwhI+kVpZZiKMyT7X/fwX4JV7lI92EQvK9Yd8Ipc2/A7z32EkGiOH5cxue2vQrJ/CDv8PDXImogsR4iC/ihiNoA9wIH8uSCrWIBpu0Q1LDRsmKuGCPrJnmM3DmQRjQEiTuKaDxAYepDJVir8a9Q5o5UxOn9j2OYnfwRpORiGKV+IxT3am3afA78rknGdKGK+UIaimlxI1t3h2n7suw4E5Epw6cfncIUL/agzTpPKTLhaHBIYJ7nGUFDIWB6RCOgDOJrJpWF2msbvYA9qSkB78jTKTElZGns+L7EoB03lMy7iou9yH/BJxTMuqCPFTuJhafqBdMF8slVh53ehYXgmignIaJZpjo35bvz3rh4fj0bdFw0gt2JekRov1ZN7hFcJ8hJTFwsuY2h2jArPkufgLURu0PYHQJOcGWcC4IeZzgcBovQ7NY2e6hIhpVYapMtJ1hXa/iR9SgdqwbSeYDK27Eh4m/PLWl8O17k1MQUWYtZQnXquW25WT2fpYRZKLNMhxAN22J7GUlEpRouxPuXXFHDyJx/hvfBQ4ZOev86YvFM4G0N3Z3Cl++QPg3nPOZ7f0jy1039+Ird9fHy/T1CY36w4uFw9MG7bCEz2CnWGOztcW/iAsYxWrN6J5Uuix1rujZ2fdJ5NSbbtmXscHBo5M134r6Vn2zkyXWNdHVNLplV70Oovq2asoUDw8iG+RiY0qW5Rqf197e7ej4wvf1lpuZrPD1nEZDl0GKUEiBo/jhCNFH9bDv3ul9xIvDUS34dyvt2KOSjWYzDOl1EaVXPJz9ZzPqdml+OIDuSeUC7kJloRt7UOF47LtkGlU6WwvHoYGm4WEbzWFoxa0PK28w67fi2mof/2nyx1F1lMPFUiy1L8FTV0p7kFPvr8YHbeg1z45dVFzN/fo35kfp8A==</source>
  </file>
  <file path="app\Model\ChangePassword.php" generated-path="app.Model.ChangePassword.html" hash="2dc83e742492e6f7fee3f1f75217ef88" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>ChangePassword</name>
      <full_name>\ChangePassword</full_name>
      <docblock line="21">
        <description>Model to provide validation for the change password form/view.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\ChangePassword::useTable</full_name>
        <default>false</default>
        <docblock line="27">
          <description>We don't use a table, this model is just for validation.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$validate</name>
        <full_name>\ChangePassword::validate</full_name>
        <default>array('current_password' =&gt; array('rule' =&gt; 'notEmpty'), 'new_password' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'minLen' =&gt; array('rule' =&gt; array('minLength', \Member::MIN_PASSWORD_LENGTH), 'message' =&gt; 'Password too short')), 'new_password_confirm' =&gt; array('noEmpty' =&gt; array('rule' =&gt; 'notEmpty', 'message' =&gt; 'This field cannot be left blank'), 'matchNewPassword' =&gt; array('rule' =&gt; array('newPasswordConfirmMatchesNewPassword'), 'message' =&gt; 'Passwords don\'t match'), 'minLen' =&gt; array('rule' =&gt; array('minLength', \Member::MIN_PASSWORD_LENGTH), 'message' =&gt; 'Password too short')))</default>
        <docblock line="33">
          <description>[$validate description]</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="69" package="global">
        <name>newPasswordConfirmMatchesNewPassword</name>
        <full_name>\ChangePassword::newPasswordConfirmMatchesNewPassword()</full_name>
        <docblock line="69">
          <description>Test to see if the user-supplied New Password Confirm matches the user-supplied New Password.</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;New Password Confirm supplied by the user.&lt;/p&gt;" type="string" variable="$check">
            <type>string</type>
          </tag>
          <tag name="return" line="69" description="True if the two passwords match, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$check</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzNVF1v2jAUfU5+xX1AClQUnvZCR9eKVWul0qE2Uh8YQk5yA14T27IdMjT1v+86CQFUWu1ti4Rw7se5xyf2+fxFrZU/PDvz4Qzcb3Y7g0+0cOuJVFvNV2sL3UkPbqdPECLLm+Q9j1EYTKAQCWoI1wjTu3AXdhWPmHBjNY8Ky6UwIFNIeYYG8sJY0GgZF2Cpj0VygxC304S0hDJoBl3tE+45oAFXisUvbIVQP0ypwVQmmFW5rGbS5A64QXdtrRoNh2VZDqSikCw0zZN6NWyazDDn9rx5GZBEPYIc+v61UqNRQfluQMtqVtCHoF70LvydklUArASl5YYnCBuW8YQ5HSCVutp1vGaCqCtmTCl14uL5cMOxHFSz4owSMKmKZrsa/GVRJAZ2w+F3O/IZIZEisED0gIFlUYZ9GsRJ76qUFj+d8G7+ns6g0mrDNERSZshENdxTRUS7hw6BhQ4JxpCyzOB+i/NOA0Jz0cSaKwe3aOGY1mx7DNY2jOts1/e8IC60RmGXOx0CGF/u016giwyrWEDH4iZXdhtQvNd3vQLLd/uErIuPwyfx+nUmR2PoMNXJ0AmXcswSiJmgUogQMkzpP2PixXGoSVAfF/co3h9UB5uylV3TiZliHqEejaZ3D8vZ9dPT8/fHr8v7m4dv4W3vFJv2AFgpwayltjXpqvitFstYipTr/B9qwmy8fsBydvrrvFEHHP9d8aRmP3UYaI5QPlTHuBvwg65ANf1Aof/gG/negT2ESPeQ3MEgAk8rN6CLps9NoVTGyVNpz9DiNXLUuyL7/Lh8sHNyMkfNcnAOLFbQodb45TRwixNtW/DaF8ikCy0qa4BQFy1bW8rWuExNrF8bBEjK65IbHBxd/rQQcWV/f/OduzXbHtmb5zUcOs7Kzi/JP9g8OLbFYDE/toIFjMfjZsvz0zdjceF7r/7rHxkAK1s=</source>
  </file>
  <file path="dev\Setup\Updates\0.3.1.php" generated-path="dev.Setup.Updates.0.3.1.html" hash="8180c9f9345d4f70e614aa21511088c4" package="dev.Setup.Updates">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Updates"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <source>eJytVVtv2zYUfrZ+xZnhVXLrWn3Zi7N0bR2lMRAnnexsGIrCpiVaJiKRAknFCwr/9x1SlKwa8UOBGYZAfTzX71z0+x/lrvTC1689MH/4cvMFfnPnqSifJct2GoLpEG7mC1hSUrjLW5ZQrmgKFU+phOWOwny2bGAjEdOUKS3ZptJMcAViC1uWUwVFpTRIqgnjoFGPbMQThaT1xoVGK2Pn6MPxwvw6YcCHkiSPJKNQ/1L6NF5QXZXjhzIlmiork9cROZlOjBDstC4nYbjf78eiREhUEv0KmYVOSYUF02/dyxiZGqLJ0PPCEGYamMJQ98CKUijFNjmFrZBAIKmkpFxDQYsNUqOFyQg2FFy+/o8CyodMiqoEJApKSZ+YqFT+jKLoYE+ME6uWEOQVPSsBBXlEa7qFTRyeDeuaSSR3T0HtRJWnkFENJM+tpHPnDRLBOVzCwHh4+361QqGrzRRBmphSBX5Kt6TKtT8CLSs6vPAGaGNeq3cVZcX/rKh8DqzJEfQX0W00XSLt1/H9HNbO4xru46sohk//HKGxO62UJrpCkY+LaR89ea3xXGRzqhTWN/Cv2b+MZzVPytLswxhbpuI66MQ2RNBvabXWxOPUSGHU70waaUrTLiBpgc3XhbxBQZSyaSHg+4igP0qSHXRdARZmUHsawnevN3Cx/TQ7K6u4hr9vojg6AVuSWLpGy9+dw69+C/vfDpa1ntozneyCU4maXf+bjbFne2Vhoclk+hDH0d1yNY/mn6J4gjZ6vQFTMz6t2/NY7y3JFb0w92wLAVMrIiXBtOqUh7XtXu9Ik+PCUGSPjYTVr6GvfiZLmwBcXsJnA52GtGjVzsRlmvOiljh47fPgNZH+8oJaY3PAcKSlbuqsSsm43gb92d0iipcwu1ven1Yo6FRjBOs6/vUQ/vp4+xAtIPB/VTgx5jnsj+ClWo3OJVpn0em8MfZRN0Ls6wvfSR2b+M0bCx2AYoGaxFzHN3fmscHCPJou6bnJnhgU1wWubdUuBrczuN8sK8Kf3cidrT28etWMYYO8h3cNyWF4dhialFOaU02bMvSvcESW0f88IC+y23XcZbe7EX6SX3w5dBbYacrHAM7tuX67riqe7AjPaGqm+2XRzi6zR/OhOfmynFf+Ye+5F9hKUcATkeYD5AqPFv4DkmeMnw==</source>
  </file>
  <file path="app\View\Helper\AppHelper.php" generated-path="app.View.Helper.AppHelper.html" hash="4f04fda52142e9411fa5281621096a14" package="app.View.Helper">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.View.Helper"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="global">
      <extends>\Helper</extends>
      <name>AppHelper</name>
      <full_name>\AppHelper</full_name>
      <docblock line="25">
        <description>Application helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
      </docblock>
    </class>
    <source>eJxNUM1qAyEQvvsUc9skJOupl22hKbmk0EBoQ+9mdxKl7irq1obSd+8Y3TYDwuh8f87Do5WW8cWCwQLS2W/3cEdN6jfGXpw6ywCzzRy2uzc4oOjL8EW1OHjsYBw6dHCQCLvnw/ScEK/YKR+cOo5BmcGDOcFJafTQjz6AwyDUAIF44mg+Edo/t8EEUqmL0fp/kOomBqytaD/EGSGXsLZ+VxjrLWqL7orQOU9B3CSEmQzBNpzHGGtj6cmMjlyNO/NC8rxXYVUuNS1qTpKcsSdrm2ak+azKTtUSqmRcze/ZtEwCEVOkr4Oc8lwHXQcX8kpxJ8Qqqg6hxyBN56GspdXCeziiNnGZGVnHJ5WotCagRKdCQvdlXZxlGtnnbIBfAQdSLddv9sN+AWM3nco=</source>
  </file>
  <file path="app\Lib\GoogleGeocode\GeocodeDataFetcher.php" generated-path="app.Lib.GoogleGeocode.GeocodeDataFetcher.html" hash="87d7e4e4cf66364c6c6e15954d1840fc" package="app.Lib.GoogleGeocode">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.GoogleGeocode"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="global">
      <extends/>
      <name>GeocodeDataFetcher</name>
      <full_name>\GeocodeDataFetcher</full_name>
      <docblock line="20">
        <description>Class to fetch geocode urls
https://developers.google.com/maps/documentation/geocoding</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="global">
        <name>fetchUrl</name>
        <full_name>\GeocodeDataFetcher::fetchUrl()</full_name>
        <docblock line="27">
          <description>Given an URL, return the contents as an array of JSON data.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;The URL to query.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="27" description="string containing the data at $url, or false on error" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJxNUktv2zAMPse/gocekqK1TrtsAxogw9IN6Va06blQZNoWZouaHsmCof99pK12FXyQROp70Z9vfO8rdXlZgXxwf3sPH8p+Q/4cbNcnWG5WcHv3CHvUYynurEEXsYHsGgyw7xHuvu1fr6XjARsbU7CHnCy5CNRCaweMMOaYIGDS1kHid/pARwTzxuYoMUpdiNb/C7LeyYC11+aX7hDmpb2vd/ZQb4m6AbdIhppJyXqYVZW+dzph2afkPyp1Op1q8nxFOTA3hU6VR1GNNl2XQ81prRhSVSUz2Aw6RkgELSbTQzezQg5DlLLAR8Zv8IgDE4RYd5O82tCoRu2jasjkEV3SEpOaAazrJhYzoRcrX3TSX4WF8/77JmBrj+hAO3h62F1JrDnMsRpyiWEj6ChlHYI+yxC+P/78AQ1j1SXDoEeQQbkOLlj3NEsGE1O/M4bz3FeQR/uHh17ahYKnKFthFFDQaUK5AgrQ6oEzJgcYAoXJ0cLnA4cJbXZGDM+5PYVhKa9WbGyxKFTytzx3mJ5fncwtn6rFS/XyDyH/4Zw=</source>
  </file>
  <file path="app\Model\FileUpload.php" generated-path="app.Model.FileUpload.html" hash="9f2bc5aee73140c0a06c301f8f950c1e" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>FileUpload</name>
      <full_name>\FileUpload</full_name>
      <docblock line="21">
        <description>Model to provide validation for a file upload form/view.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\FileUpload::useTable</full_name>
        <default>false</default>
        <docblock line="27">
          <description>Don't use a table, this model is just for validation.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$validate</name>
        <full_name>\FileUpload::validate</full_name>
        <default>array('filename' =&gt; array('rule' =&gt; 'notEmpty'))</default>
        <docblock line="33">
          <description>[$validate description]</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="global">
        <name>getTmpName</name>
        <full_name>\FileUpload::getTmpName()</full_name>
        <docblock line="45">
          <description>Get the temporary name of the file.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;The data from the request.&lt;/p&gt;" type="" variable="$data"/>
          <tag name="return" line="45" description="String containing the temp path name if data is valid, otherwise false." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <source>eJxVUk2P0zAQPSe/Yg6VklYlOXEpFBYtH0WiaMWGE0IrN5k0hvgD22m3Wu1/Z2wnbTdSpekbz3vj5/f2ve50Wi4WKSzA/+42d/CaCl/fKn0yfN85yG/nsNneQ4VMjM1vvEZpsYFBNmig6hC2X6sJ9id+YMOtM3w3OK6kBdVCy3u0IAbrwKBjXIKjObZTB4T6rCaVI5ZiFLq5NPx3tQbcaFb/ZXuE+DGti61qsA+9Pm4y9q52g7xzTq/K8ng8FkoTpAZDesrsy3HIloK7V+OfgiyaE2WZph+0Xq0G6ucZlUErW0IWi/mbdHIyAOAUaKMOvEE4sJ43zPsArTLAghMw6F6xxiOiPHA8FkGl7pm18JkO/Ix9fHQoGwuTJDydhT4qmTmgjYjSsV2PS3KUk8XhHBV/vNde8rJBEew5MAM7pXpkMqgmetjRhWFGZJVngjW0rLd4udWv2UiC0KCtDdee7veZjhnDTi/JzgPr2M3TJMn83SUTmMH63QVOMjP0EcsoAZ+EdqeM8PkyTa6s/YIuhMah0MowcwJP5cPlUU9dTFmmeBgmYEYLsBDQULRGiXDW4L8BrYt2UBwHI0HwR4r0PaVW7imR0mfUl5MiaOa6qMjbyEcmh1suQdEpc+T0GMG44oUV7SDr8P57dJXQ34kiD5vN6TmThNhybh+iGxGPjWTcbMNst1rRcOxS6i4JKSZHCyf0Q7CWHEuS5/Q8Pj4lQc//AaLyPMA=</source>
  </file>
  <file path="app\Lib\GoogleGeocode\Geocode.php" generated-path="app.Lib.GoogleGeocode.Geocode.html" hash="8d0a22cabbd7e8a441642c09013480dc" package="app.Lib.GoogleGeocode">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.GoogleGeocode"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="global">
      <extends/>
      <name>Geocode</name>
      <full_name>\Geocode</full_name>
      <docblock line="25">
        <description>Class that wrapps Googles Geocoding service
https://developers.google.com/maps/documentation/geocoding</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="31" package="global">
        <name>$__apiKey</name>
        <full_name>\Geocode::__apiKey</full_name>
        <default></default>
        <docblock line="31">
          <description>String containing the API key we should use for requests.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="37" package="global">
        <name>$__urlBuilder</name>
        <full_name>\Geocode::__urlBuilder</full_name>
        <default></default>
        <docblock line="37">
          <description>UrlBuilder to build our valid urls.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="\GeocodeUrlBuilder" variable="">
            <type>\GeocodeUrlBuilder</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="43" package="global">
        <name>$__resultDecoder</name>
        <full_name>\Geocode::__resultDecoder</full_name>
        <default></default>
        <docblock line="43">
          <description>ResultDecoder to serialise the data from the url into a json array.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\GeocodeResultDecoder" variable="">
            <type>\GeocodeResultDecoder</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="49" package="global">
        <name>$__resultChecker</name>
        <full_name>\Geocode::__resultChecker</full_name>
        <default></default>
        <docblock line="49">
          <description>ResultChecker To convert the json array into something meaningful</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="\GeocodeResultChecker" variable="">
            <type>\GeocodeResultChecker</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="global">
        <name>__construct</name>
        <full_name>\Geocode::__construct()</full_name>
        <docblock line="57">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;The url builder to use, if null use the default.&lt;/p&gt;" type="\GeocodeUrlBuilder" variable="$urlBuilder">
            <type>\GeocodeUrlBuilder</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The result decoder to use, if null use the default.&lt;/p&gt;" type="\GeocodeResultDecoder" variable="$resultDecoder">
            <type>\GeocodeResultDecoder</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The result checker to use, if null use the default.&lt;/p&gt;" type="\GeocodeResultChecker" variable="$resultChecker">
            <type>\GeocodeResultChecker</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlBuilder</name>
          <default>null</default>
          <type>\GeocodeUrlBuilder</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resultDecoder</name>
          <default>null</default>
          <type>\GeocodeResultDecoder</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$resultChecker</name>
          <default>null</default>
          <type>\GeocodeResultChecker</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="88" package="global">
        <name>checkAddress</name>
        <full_name>\Geocode::checkAddress()</full_name>
        <docblock line="88">
          <description>Query the geocode service to check the validity of an address.</description>
          <long-description></long-description>
          <tag name="param" line="88" description="&lt;p&gt;An array of address data.&lt;/p&gt;" type="string[]" variable="$address">
            <type>string[]</type>
          </tag>
          <tag name="return" line="88" description="True if address exists, false if it does not." type="bool">
            <type>bool</type>
          </tag>
          <tag name="throws" line="88" description="If any error occurs." type="\GeocodeException">
            <type>\GeocodeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$address</name>
          <default></default>
          <type>string[]</type>
        </argument>
      </method>
    </class>
    <source>eJylVttu4zYQfba/YgoIiLxwpKe+pG2aNHvLNguku+5TURi0NLLZSKLKi71GkX/vDEVZsuUU7dYwYJmXM4dnzgz1/Y/Nppmmr15Ngb/w+P4Rvg3Pd6rZa7neWIjvZvD+42dYoKjC5IPMsDaYg6tz1LDYIHy8X3TDvOIT5tJYLVfOSlUbUAUUskQDlTMWNFoha7C0T6zUFiE7RKuVJZQkBLrpJ/gzoAE3jciexBqh/YimSR7kKnmn1LrEd6gylXsmN2XLKqwb8IR4Y21zlaa73S5RDQ0ppym20us0bDJpJe1l+JOQWjOCTKdTjX86qXGp6oxgcqlrUWG8XL69f3izXM4ggYskDSReCyveos02qBnhYvbdf9r+CY0r7Wvk5/8BcLfB7OnrAH7V5U9OloPwwTNwVwpjKI3Cwk5TBgy08tOv3yrrNRjUW9KPl7PchvTOcYslCa5Nsvbrk0xVaSUak+YqcxXWVrBt0nWH4lXPfLRACv46sPhMPqNAmarZVfzIxrp9vIcn3MMOwWyUK8mslPJCaeCzo7Em8fbYCg3GI/ggk0bLrbAI0XIpGvkz7vvj9kKAVbDiRyDLwFaUkuB1OYAcaTdCd4epPsJRsjkIqScJnZjzmXKyEhRaVf4fAYCsaZGAP4yqQWgt9iMGR5AjEno4e8ojeAYWisXdorY+bh+sDW9UhXbDulcoWP/CledZBMAXWITZgb2oc1jtMqt0Ekpei2osLUS9lr4ZsTKrPlOU+DnIAmpXlt4FXkssBAU9A3ychOhIIg/fjhDCIU1fFaGTN9LHavcRsjD0LyKwoG5FnQoKV2dcPbBcZp2A8VChHzzI/PRkJ8MdnXZ4RvU2mVi9978Tykwh107j1VWpRB5ftJWK3BxoOiI7mMvrroIIY7BBI2+gGarOdv0zZIL6Y3xY9OZLho0/Q4Rt5Emawge+OvjoteLKPh+IyXrM6XQwfXT6aFh5kwmJGn8jjUFSabx+FuKfh6pxN7ZjPBsTOJU6Oim88zSOFo2YjNLXkzmy8Mt8+hxHJyX4T3zCohf4DHxzyidMdXyYUqj0XxyStdjSwUjdtcHW91XgJ32jlXbPrxOCelCeU0wzLLC2k//2O0RhEm67XsV7whj30XYXvYk4XcNKqRIW2iGXWLcKv9ArjJlDIUrjJyTVvKLLjd5R2t12o9XucCX1rr1nentArem6UVnmtHmhRv3ZbtuAcce5FZZtypkZG+/y2je3sM2rSu47bJ/DSVl4vSN/eQzwjuxzed12sw/U2z0WRZsPMzh4i4lnHjBIdz79l9f+ZAzX5j728Xnj8/T5b5kudz4=</source>
  </file>
  <file path="app\Lib\GoogleGeocode\GeocodeResultDecoder.php" generated-path="app.Lib.GoogleGeocode.GeocodeResultDecoder.html" hash="7c0f5e0f9458f67241e650334cfc99c3" package="app.Lib.GoogleGeocode">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.GoogleGeocode"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends/>
      <name>GeocodeResultDecoder</name>
      <full_name>\GeocodeResultDecoder</full_name>
      <docblock line="22">
        <description>Class to fetch geocode urls
https://developers.google.com/maps/documentation/geocoding</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="global">
        <name>decodeJsonUrl</name>
        <full_name>\GeocodeResultDecoder::decodeJsonUrl()</full_name>
        <docblock line="31">
          <description>Given an URL, return the contents as an array of JSON data.</description>
          <long-description></long-description>
          <tag name="param" line="31" description="&lt;p&gt;The URL to query.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="31" description="&lt;p&gt;The fetcher used to retrieve the contents of the URL.&lt;/p&gt;" type="\GeocodeDataFetcher" variable="$fetcher">
            <type>\GeocodeDataFetcher</type>
          </tag>
          <tag name="return" line="31" description="Array of JSON data." type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="31" description="If data cannot be retrieved." type="\GeocodeException">
            <type>\GeocodeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fetcher</name>
          <default></default>
          <type>\GeocodeDataFetcher</type>
        </argument>
      </method>
    </class>
    <source>eJyVk8tu2zAQRdfSV0yBAJYDR1p1kzZtirwDpw0SZy3Q0khmK5EKH3GNIv/e4cOyi6JAKnhBk8M7Z+4MP34eVkNaHB6m4H5wf30P7+P6TA4bxduVgexsCtd3j7BA1sfDOa9QaKzBihoVLFYIdzeL7baLeMCaa6P40houhQbZQMM71NBbbUChYVyAoXtsKV8QqjGbkIZU8pjodHfgvj0MOB1Y9YO1COFjw5DP+TK/krLt8AplJWtPctoFqhi3xwnZypjhuCjW63UuB9qSVlFuqdoiXtJFz81R/JOTW1OSLNJU4bPlCkspKpKpuRKsx6wsL2/mF2U5hRwmxYVSUhUXPyscnAdFZBo3nNxk+iGNDYCzjmkNRkKDplpBG8LBqk67Y8eqCbbGF+yIVum89bXmleyLng26qGVlexSG+XxBgIvWI1dePTI8oLadOUe3VvBrRLjiLyiACXh6mM9cl6wKXaqkMCSsgWl3zJRiG9fT28dvX6FmhuWxJYr14PouWjggcj8aJObKeraoNvtxEeacrl+6kgnloIkLd2+7tm7SSIB4FKfq/yQiChOSBO1IHRC//APUrJRcj3aMLYGbxgdBxQQNIixxTFrn3sZksEsaB2isqPyN2pt4q6V4Ul3map6NVUzJ2iThDWTvuC6DLT5kGk4SjwEC13+RZBNvn38tRMGiqW5ekuQ13clqNNmY7y2yW1e99FafVPakD9xTdW2Bk7GWo09+sS3SBzuEvdiTE2hYp/ENFE+CLTscp8IN+TFM6NmM2gHkO/kaQdyyDG7vks7AKIs7mF08wQjbdf/FEtR9pkizzRORkiRO15iI9l/T19+ECLM2</source>
  </file>
  <file path="dev\Setup\Libs\Krb\Krb5Auth.dummy.php" generated-path="dev.Setup.Libs.Krb.Krb5Auth.dummy.html" hash="0f64c80a4b91d164d135024bc0ee368d" package="app.Lib.Krb">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.Krb"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends/>
      <name>Krb5Auth</name>
      <full_name>\Krb5Auth</full_name>
      <docblock line="19">
        <description>Dummy KrbAuth implementation for development.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="global">
        <name>__construct</name>
        <full_name>\Krb5Auth::__construct()</full_name>
        <docblock line="27">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$krbUsername">
            <type>string</type>
          </tag>
          <tag name="param" line="27" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$keytab">
            <type>string</type>
          </tag>
          <tag name="param" line="27" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$realm">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$krbUsername</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keytab</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="global">
        <name>addUser</name>
        <full_name>\Krb5Auth::addUser()</full_name>
        <docblock line="36">
          <description>Add a new user.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The username of the new user.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The password for the user.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="36" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="global">
        <name>deleteUser</name>
        <full_name>\Krb5Auth::deleteUser()</full_name>
        <docblock line="45">
          <description>Remove a user.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;The username of the user to remove.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="global">
        <name>checkPassword</name>
        <full_name>\Krb5Auth::checkPassword()</full_name>
        <docblock line="55">
          <description>Check if a username and password matches a known record.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;The password to check.&lt;/p&gt;" type="\striing" variable="$password">
            <type>\striing</type>
          </tag>
          <tag name="return" line="55" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>\striing</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="global">
        <name>changePassword</name>
        <full_name>\Krb5Auth::changePassword()</full_name>
        <docblock line="65">
          <description>Change the password for a user.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The users username.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;The new password.&lt;/p&gt;" type="string" variable="$newpassword">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newpassword</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="global">
        <name>userExists</name>
        <full_name>\Krb5Auth::userExists()</full_name>
        <docblock line="74">
          <description>Check if we know of a user with a certain username.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="74" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJydlU1v2kAQhs/wK+bQA0TUPuXSVmoiEilVkwql5Byt1wNe4f3QfsRFVf57Z81iTEMIicWB/Xhn3mdmMN++m8oM87OzIcQPzG5mcJ6+T7VZW7GsPIymY7i5+w1zZDId3gqOymEJQZVoYV4h3P2Yb7fjjXsshfNWFMELrRzoBSxEjQ5kcB4seiYUeNKxQj8h8C6b0p6iZCnRxe4gPj0bcGEYX7ElwuZhxmS3osh+2qI9rTde0mnPHYwq782XPG+aJtOGtnSwlFHbZZ5ELpfCf06LjGo0ppD5MFUKroKUa6BEl8FXIKSpUaLyLJLCQlso8QlrbeJm1ip5zZyLivNW8rcLNaXaeBu41zZLUJZJiJVTS/i0ssWDQ6uYRPilPQSq+cF7uPasOHrFIqvl3o18ODChIEpYBMVb84+PfGto1E8+2aaYpEBjYhg8dxiXZQkMFDYx+EGSsMWIs9ItaCriDBwTGqpco23ZCrtFrLJPkTYqGqlgFRRa1zC3AV8hZGUZoUadockuRQs1SIGoCPi1z3iPMk4q+xhiXIPXNPkxyrssl1ijx33Xx61OK+QrEItktvXBVLkrn2SeV/RjZLBSulHkitN2H+oNKiLhMckLyZGe7WtOhG8VsxTiA12bVkzRO8L/Pzwv2/g6seu4D96n6d0DjtO83Xgna/R6ELaX48TWN9j2Ns7fhhUaQa8eBhxt+/I9ynRK10+kiurrP/Rn4N4a3+d/FDMjwA==</source>
  </file>
  <file path="dev\Setup\Common\DataGenerator.php" generated-path="dev.Setup.Common.DataGenerator.html" hash="b15c22ffd849a65b3dad8b75a7ac559c" package="dev.Setup.Common">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Common"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <constant namespace="\" line="16" package="dev.Setup.Common">
      <name>CAKE_PATH</name>
      <full_name>\\CAKE_PATH</full_name>
      <value>'../../../lib/Cake/'</value>
      <docblock line="16">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="16" description="dev.Setup.Common"/>
      </docblock>
    </constant>
    <constant namespace="\" line="17" package="dev.Setup.Common">
      <name>APP_PATH</name>
      <full_name>\\APP_PATH</full_name>
      <value>'../../../app/'</value>
      <docblock line="17">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="17" description="dev.Setup.Common"/>
      </docblock>
    </constant>
    <class final="false" abstract="false" namespace="" line="39" package="global">
      <extends/>
      <name>DataGenerator</name>
      <full_name>\DataGenerator</full_name>
      <docblock line="39">
        <description>This script is used to generate realistic(ish) data for use when manually testing HMS.</description>
        <long-description>It is mainly powered by data generated by http://www.fakenamegenerator.com/
Data provided by http://www.fakenamegenerator.com/ is used under the
Creative Commons Attribution-Share Alike 3.0 United States license.</long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="45" package="global">
        <name>$__stockData</name>
        <full_name>\DataGenerator::__stockData</full_name>
        <default>array()</default>
        <docblock line="45">
          <description>The stock data used to populate other fields.</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="51" package="global">
        <name>$__takenUsernames</name>
        <full_name>\DataGenerator::__takenUsernames</full_name>
        <default>array()</default>
        <docblock line="51">
          <description>List of ataken usernames</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="57" package="global">
        <name>$__members</name>
        <full_name>\DataGenerator::__members</full_name>
        <default>array()</default>
        <docblock line="57">
          <description>Array of members.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="63" package="global">
        <name>$__membersGroup</name>
        <full_name>\DataGenerator::__membersGroup</full_name>
        <default>array()</default>
        <docblock line="63">
          <description>Array of which members are in which groups.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="69" package="global">
        <name>$__accounts</name>
        <full_name>\DataGenerator::__accounts</full_name>
        <default>array()</default>
        <docblock line="69">
          <description>Array of accounts.</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="75" package="global">
        <name>$__pins</name>
        <full_name>\DataGenerator::__pins</full_name>
        <default>array()</default>
        <docblock line="75">
          <description>Array of pins.</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="81" package="global">
        <name>$__rfidTags</name>
        <full_name>\DataGenerator::__rfidTags</full_name>
        <default>array()</default>
        <docblock line="81">
          <description>Array of rfid tags.</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="87" package="global">
        <name>$__statusUpdates</name>
        <full_name>\DataGenerator::__statusUpdates</full_name>
        <default>array()</default>
        <docblock line="87">
          <description>Array of status updates.</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="93" package="global">
        <name>$__emailRecords</name>
        <full_name>\DataGenerator::__emailRecords</full_name>
        <default>array()</default>
        <docblock line="93">
          <description>Array of email records.</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="98" package="global">
        <name>__construct</name>
        <full_name>\DataGenerator::__construct()</full_name>
        <docblock line="98">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="107" package="global">
        <name>__parseCsv</name>
        <full_name>\DataGenerator::__parseCsv()</full_name>
        <docblock line="107">
          <description>Parse a CSV file, adding the data to the stockData array.</description>
          <long-description></long-description>
          <tag name="param" line="107" description="&lt;p&gt;string Path to the .csv file to try and parse.&lt;/p&gt;" type="" variable="$filepath"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filepath</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="141" package="global">
        <name>getMembersData</name>
        <full_name>\DataGenerator::getMembersData()</full_name>
        <docblock line="141">
          <description>Get the array of member data.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="Array of member data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="global">
        <name>getMembersGroupData</name>
        <full_name>\DataGenerator::getMembersGroupData()</full_name>
        <docblock line="150">
          <description>Get the array of membersGroup data.</description>
          <long-description></long-description>
          <tag name="return" line="150" description="The array of membersGroup data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="159" package="global">
        <name>getAccountsData</name>
        <full_name>\DataGenerator::getAccountsData()</full_name>
        <docblock line="159">
          <description>Get the array of accounts data.</description>
          <long-description></long-description>
          <tag name="return" line="159" description="The array of accounts data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="168" package="global">
        <name>getPinsData</name>
        <full_name>\DataGenerator::getPinsData()</full_name>
        <docblock line="168">
          <description>Get the array of pins data.</description>
          <long-description></long-description>
          <tag name="return" line="168" description="The array of pins data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="177" package="global">
        <name>getRfidTagsData</name>
        <full_name>\DataGenerator::getRfidTagsData()</full_name>
        <docblock line="177">
          <description>Get the array of RFID tags data.</description>
          <long-description></long-description>
          <tag name="return" line="177" description="The array of RFID tags data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="186" package="global">
        <name>getStatusUpdatesData</name>
        <full_name>\DataGenerator::getStatusUpdatesData()</full_name>
        <docblock line="186">
          <description>Get the array of status updates data.</description>
          <long-description></long-description>
          <tag name="return" line="186" description="The array of status updates data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="global">
        <name>getEmailRecordData</name>
        <full_name>\DataGenerator::getEmailRecordData()</full_name>
        <docblock line="195">
          <description>Get the array of email record data.</description>
          <long-description></long-description>
          <tag name="return" line="195" description="The array of email record data." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="205" package="global">
        <name>generateMember</name>
        <full_name>\DataGenerator::generateMember()</full_name>
        <docblock line="205">
          <description>Generate a new member record</description>
          <long-description></long-description>
          <tag name="param" line="205" description="&lt;p&gt;The stage of membership this member should be at, see Status model for details.&lt;/p&gt;" type="int" variable="$membershipStage">
            <type>int</type>
          </tag>
          <tag name="param" line="205" description="&lt;p&gt;Optional array of details that will be forced on the member being generated.&lt;/p&gt;" type="array" variable="$details">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$membershipStage</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$details</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="377" package="global">
        <name>__generateEmailRecord</name>
        <full_name>\DataGenerator::__generateEmailRecord()</full_name>
        <docblock line="377">
          <description>Create a new e-mail record.</description>
          <long-description></long-description>
          <tag name="param" line="377" description="&lt;p&gt;The id of the member the e-mail was sent to.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="377" description="&lt;p&gt;The subject of the e-mail.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="377" description="&lt;p&gt;Unix timestamp for the time the e-mail was sent.&lt;/p&gt;" type="int" variable="$timestamp">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="398" package="global">
        <name>__useValOrDefault</name>
        <full_name>\DataGenerator::__useValOrDefault()</full_name>
        <docblock line="398">
          <description>Return $array[$key] if it is set, otherwise return $default.</description>
          <long-description></long-description>
          <tag name="param" line="398" description="&lt;p&gt;The array to address.&lt;/p&gt;" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="param" line="398" description="&lt;p&gt;The index to use.&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="398" description="&lt;p&gt;The value to use if $val us not set.&lt;/p&gt;" type="mixed" variable="$default">
            <type>mixed</type>
          </tag>
          <tag name="return" line="398" description="$array[$key]  if it is set, otherwise return $default." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="412" package="global">
        <name>__setMemberGroups</name>
        <full_name>\DataGenerator::__setMemberGroups()</full_name>
        <docblock line="412">
          <description>Set the groups which a member will belong to.</description>
          <long-description></long-description>
          <tag name="param" line="412" description="&lt;p&gt;The id of the member who's groups we're setting.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;List of group id's.&lt;/p&gt;" type="array" variable="$groupList">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$groupList</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="444" package="global">
        <name>__generateStatusUpdate</name>
        <full_name>\DataGenerator::__generateStatusUpdate()</full_name>
        <docblock line="444">
          <description>Generate a status update record</description>
          <long-description></long-description>
          <tag name="param" line="444" description="&lt;p&gt;The id of the member.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="444" description="&lt;p&gt;The id of the admin making the change.&lt;/p&gt;" type="int" variable="$adminId">
            <type>int</type>
          </tag>
          <tag name="param" line="444" description="&lt;p&gt;The previous status of the member.&lt;/p&gt;" type="int" variable="$oldStatus">
            <type>int</type>
          </tag>
          <tag name="param" line="444" description="&lt;p&gt;The new status of the member.&lt;/p&gt;" type="int" variable="$newStatus">
            <type>int</type>
          </tag>
          <tag name="param" line="444" description="&lt;p&gt;The timestamp of the update.&lt;/p&gt;" type="int" variable="$timestamp">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$adminId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$oldStatus</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newStatus</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$timestamp</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="465" package="global">
        <name>__registerCard</name>
        <full_name>\DataGenerator::__registerCard()</full_name>
        <docblock line="465">
          <description>Register an rfid card using the members pin.</description>
          <long-description></long-description>
          <tag name="param" line="465" description="&lt;p&gt;The id of the member to register the card to.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="465" description="&lt;p&gt;The time the card was registered.&lt;/p&gt;" type="int" variable="$registerTime">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$registerTime</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="515" package="global">
        <name>__generateAccount</name>
        <full_name>\DataGenerator::__generateAccount()</full_name>
        <docblock line="515">
          <description>Generate a new account record.</description>
          <long-description></long-description>
          <tag name="return" line="515" description="The id of the record." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="538" package="global">
        <name>__generatePin</name>
        <full_name>\DataGenerator::__generatePin()</full_name>
        <docblock line="538">
          <description>Generate a new pin record</description>
          <long-description></long-description>
          <tag name="param" line="538" description="&lt;p&gt;The id of the member the pin belongs to.&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
          <tag name="param" line="538" description="&lt;p&gt;The time the pin was generated.&lt;/p&gt;" type="int" variable="$joinTimestamp">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$joinTimestamp</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="565" package="global">
        <name>__generateUniqueEntry</name>
        <full_name>\DataGenerator::__generateUniqueEntry()</full_name>
        <docblock line="565">
          <description>Given an array of array data, a key to the inner array, and a function to generate data, keep generating until the data is unique.</description>
          <long-description></long-description>
          <tag name="param" line="565" description="&lt;p&gt;Array of existing records.&lt;/p&gt;" type="array" variable="$records">
            <type>array</type>
          </tag>
          <tag name="param" line="565" description="&lt;p&gt;Index in existing records to check.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="565" description="&lt;p&gt;The function used to generate new data.&lt;/p&gt;" type="\function" variable="$genFunc">
            <type>\function</type>
          </tag>
          <tag name="return" line="565" description="A unique value returned from $genFunc." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$records</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$genFunc</name>
          <default></default>
          <type>\function</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="589" package="global">
        <name>__getStockData</name>
        <full_name>\DataGenerator::__getStockData()</full_name>
        <docblock line="589">
          <description>Pop a single element of the stock data and return it.</description>
          <long-description></long-description>
          <tag name="return" line="589" description="The data requested." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="dev\Setup\Web\setup.php" generated-path="dev.Setup.Web.setup.html" hash="216173f1d042d557e63f0e26eb8ae2eb" package="dev.Setup.Web">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Web"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <function namespace="" line="24" package="dev.Setup.Web">
      <name>parseBoolFromWebVar</name>
      <full_name>\parseBoolFromWebVar()</full_name>
      <docblock line="24">
        <description>Given an index in the POST var array, return a bool version</description>
        <long-description></long-description>
        <tag name="param" line="24" description="&lt;p&gt;The index of the POST var to parse.&lt;/p&gt;" type="mixed" variable="$index">
          <type>mixed</type>
        </tag>
        <tag name="return" line="24" description="True if value is set, false otherwise." type="bool">
          <type>bool</type>
        </tag>
        <tag name="package" line="24" description="dev.Setup.Web"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$index</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <function namespace="" line="35" package="dev.Setup.Web">
      <name>parseStringFromWebVar</name>
      <full_name>\parseStringFromWebVar()</full_name>
      <docblock line="35">
        <description>Given an index in the POST var array, return a string version</description>
        <long-description></long-description>
        <tag name="param" line="35" description="&lt;p&gt;The index of the POST var to parse.&lt;/p&gt;" type="mixed" variable="$index">
          <type>mixed</type>
        </tag>
        <tag name="return" line="35" description="String of value if value is set, null otherwise." type="mixed">
          <type>mixed</type>
        </tag>
        <tag name="package" line="35" description="dev.Setup.Web"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$index</name>
        <default></default>
        <type>mixed</type>
      </argument>
    </function>
    <source>eJy1VV1v0zAUfU5+xVU1LcnUJU+8sLSb6NiHYGJaCzwgNLntTWvNsYPtpJsQ/53rON0HazeERBSpjn3OudfH17f5YbWswmxvLwT3wuXZJbzpxiNV3Wm+WFqIRwmcXYxhgqzsFj/yGUqDc6jlHDVMlggX55P1tENc4Zwbq/m0tlxJA6qAggs0UNbGgkbLuARLPDZVDcLsPppUllTSLtDRw4J7HqUBRxWb3bAFgn/m2KRjtHWVfsVpuy58Nt36o/wgXlpbvc2y1WqVqoqmVK0pptKLrCOZrOR2v/tIyaWEJLMw1Pij5hqvlZyRTJSm2UiVpZKZD03AKDkInaXgcjjlDUpgEjj5dAvdli8/jSfQMA1Ma3bXd27UmmAwVUpAg9qQZY4O3T41K6Hkt+T3jhdyhvsR+fpE0iogvGkNhKNOudWd6JpIBaGEGxgwaPtQMEGGKNLQK+5pWVjUcuaOzUu9I/aJViX5+oXp2KeQwM8wWCfutnF9g3fXeEuHbjpIH3auXV4J7O6GQRD4r29+8TsMBhApGR2Ev/7ZL1dgcvE/HPPcsddX96b96Z6shXjZPC+x2T6Si//CO4pGweKn9iWtwvoEYu9E8hRzEAbk7Rrjcm3N3jGuVmEAElfQ1m3satZP7w/pZ6SRWTxmlk2ZwXhjGUSzFjSfRgkQ/RH7s8ErZOKDnm5har/6jNjmMsGyOlGC2orZQm8JtqwKj9oU/xgbFKoqUdr3suFaSTfcoldTI3vAo2w2KepzWag4DDYfalRwbaxkJUZJfyvI0DG8AqFcXsVgybiIktAd2uEwDPO2i3edyTWlbImMnEmXthSuHREoyCuYCWbMoKfR1MKa3tDdSc8N3O3stqtr6cqBZpy2g9RiTWVtYXfUIBfcD4KcwVJjMehRP/Rvb02plOGWbnVveKrcVaMOnmesE8jWCi9JWTTWNdYNkle1pL8DujXPJfOsFm6QZ9VGiwql7INFvwEf3jxE</source>
  </file>
  <file path="plugins\MemberVoice\Model\MemberVoiceAppModel.php" generated-path="plugins.MemberVoice.Model.MemberVoiceAppModel.html" hash="b2e32e9ac6ba83ad3f31c5fe8a70bd38" package="plugins.MemberVoice.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\AppModel</extends>
      <name>MemberVoiceAppModel</name>
      <full_name>\MemberVoiceAppModel</full_name>
      <docblock line="19">
        <description>Base model for all models in the MemberVoice plugin.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$tablePrefix</name>
        <full_name>\MemberVoiceAppModel::tablePrefix</full_name>
        <default>"mv_"</default>
        <docblock line="25">
          <description>Prefix for the MemberVoice tables.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$mvUserModel</name>
        <full_name>\MemberVoiceAppModel::mvUserModel</full_name>
        <default>'Member'</default>
        <docblock line="31">
          <description>Name of the model in the app that contains user data.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJx9UctOwzAQPJOvWFVIfUgkJy6UikIvRSKogpYrcpJNYhE/ZDtpEeLfsR03RBywFMXenZ2Z3b29k7WMksUiggW4b7fdwbW9uPtGyE9Fq9rAbDOHbfoKeyQsJJ9ojlxjAS0vUMG+Rkgf9+ewQ7xgQbVRNGsNFVyDKKGkDWpgrTag0BDKwdg6kokOIR/UuDCWJQ5C69+EOyMbsJYk/yAVQn9k01aU6zhFlqF6E44kFQU2Htv0zgJ25BVmtTHyJkmOx2MspA2JVtlSoaokFOmEUXMVHrEd2dxSJtF5cA/EsjCnBKVQQJqmf2kIHY4cBZexJ8gbovU4ey+ldwx4MsgLDUPga1DbKSzpySv95TYkswOOfb8dUeDGzysvdSHbzDYAlx4TOFYwYd37ZDlwPxOGblGOuG/ovCMp7Z8YuybuFqeh1XbtBTHkfznWHSyw72EF097tdBl9/wDvocg1</source>
  </file>
  <file path="app\Lib\Krb\Krb5Auth.php" generated-path="app.Lib.Krb.Krb5Auth.html" hash="0f64c80a4b91d164d135024bc0ee368d" package="app.Lib.Krb">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.Krb"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends/>
      <name>Krb5Auth</name>
      <full_name>\Krb5Auth</full_name>
      <docblock line="19">
        <description>Dummy KrbAuth implementation for development.</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="global">
        <name>__construct</name>
        <full_name>\Krb5Auth::__construct()</full_name>
        <docblock line="27">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="27" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$krbUsername">
            <type>string</type>
          </tag>
          <tag name="param" line="27" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$keytab">
            <type>string</type>
          </tag>
          <tag name="param" line="27" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$realm">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$krbUsername</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keytab</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="global">
        <name>addUser</name>
        <full_name>\Krb5Auth::addUser()</full_name>
        <docblock line="36">
          <description>Add a new user.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The username of the new user.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The password for the user.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="36" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="global">
        <name>deleteUser</name>
        <full_name>\Krb5Auth::deleteUser()</full_name>
        <docblock line="45">
          <description>Remove a user.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;The username of the user to remove.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="global">
        <name>checkPassword</name>
        <full_name>\Krb5Auth::checkPassword()</full_name>
        <docblock line="55">
          <description>Check if a username and password matches a known record.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;The password to check.&lt;/p&gt;" type="\striing" variable="$password">
            <type>\striing</type>
          </tag>
          <tag name="return" line="55" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>\striing</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="global">
        <name>changePassword</name>
        <full_name>\Krb5Auth::changePassword()</full_name>
        <docblock line="65">
          <description>Change the password for a user.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The users username.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;The new password.&lt;/p&gt;" type="string" variable="$newpassword">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newpassword</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="global">
        <name>userExists</name>
        <full_name>\Krb5Auth::userExists()</full_name>
        <docblock line="74">
          <description>Check if we know of a user with a certain username.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="74" description="True." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJydlU1v2kAQhs/wK+bQA0TUPuXSVmoiEilVkwql5Byt1wNe4f3QfsRFVf57Z81iTEMIicWB/Xhn3mdmMN++m8oM87OzIcQPzG5mcJ6+T7VZW7GsPIymY7i5+w1zZDId3gqOymEJQZVoYV4h3P2Yb7fjjXsshfNWFMELrRzoBSxEjQ5kcB4seiYUeNKxQj8h8C6b0p6iZCnRxe4gPj0bcGEYX7ElwuZhxmS3osh+2qI9rTde0mnPHYwq782XPG+aJtOGtnSwlFHbZZ5ELpfCf06LjGo0ppD5MFUKroKUa6BEl8FXIKSpUaLyLJLCQlso8QlrbeJm1ip5zZyLivNW8rcLNaXaeBu41zZLUJZJiJVTS/i0ssWDQ6uYRPilPQSq+cF7uPasOHrFIqvl3o18ODChIEpYBMVb84+PfGto1E8+2aaYpEBjYhg8dxiXZQkMFDYx+EGSsMWIs9ItaCriDBwTGqpco23ZCrtFrLJPkTYqGqlgFRRa1zC3AV8hZGUZoUadockuRQs1SIGoCPi1z3iPMk4q+xhiXIPXNPkxyrssl1ijx33Xx61OK+QrEItktvXBVLkrn2SeV/RjZLBSulHkitN2H+oNKiLhMckLyZGe7WtOhG8VsxTiA12bVkzRO8L/Pzwv2/g6seu4D96n6d0DjtO83Xgna/R6ELaX48TWN9j2Ns7fhhUaQa8eBhxt+/I9ynRK10+kiurrP/Rn4N4a3+d/FDMjwA==</source>
  </file>
  <file path="app\Lib\Error\Exception\NotAuthorizedException.php" generated-path="app.Lib.Error.Exception.NotAuthorizedException.html" hash="cc7689e413666e288008a235a62a0494" package="app.Lib.Error.Exception">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.Error.Exception"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends>\CakeException</extends>
      <name>NotAuthorizedException</name>
      <full_name>\NotAuthorizedException</full_name>
      <docblock line="22">
        <description>An exception thrown by certain Member methods if they are called on a with data that is invalid from an auth point of view.</description>
        <long-description>This is it's own exception as such results are usually handled differently from the calling code, for example the
displaying a flash message if the Member method returned true or false but redirecting if this exception is thrown.</long-description>
      </docblock>
    </class>
    <source>eJxVUsFu2zAMvecreFtbbPZpl2HAWgQFOqAZii0/QFt0RFSWBImK5w3791GO06SCDhb5yMf36K/foo2b9u5uA/XCy9MLfF6/tyHOiQ9W4GZ7C0+7X7AnHNfkM/fkMxko3lCCvSXYfd+fwxXxkwxnSdwV4eAzhAEGdpRhLFkgkSB7EK3DLhwJ+jc2H0S7NCvR/SVRz9UYcB+xf8UDwelgjM0zd81jSiE1j797ipV5QbrTXCvyalK4sSLxS9tO09SEqKFQkrKHdGjXotyOLJ/WR6N+3WrLdrO6Bg8e6MylelKYPHQz9JQWhTsaOzVoJLHBZOChap4Bk0pG59RBLUOYWCwYFNQ0CrAi/REdGxhSGAEVUxQRA3upVh6ZprNFe1vheuWD2jxdz4MZcumt2p2Lk7zQllyUeAaL3lR+w8NAibxobCGrS6mzsT/oWgx9hCEkbYpjdFSzlVSXGx3OFYMwOMxWNeZc13HS+F55XXhJXukkFQLtN6BT+/Xv0JThRL3UXkutarlI0MfJ1WaxvVeqDD+CPKgfIfEfMm+r1iohry5v8ZUu0b+bzb//cun5+w==</source>
  </file>
  <file path="dev\Setup\Common\Setup.php" generated-path="dev.Setup.Common.Setup.html" hash="ff69ff9d42c4b5146aba2f6536e83d1a" package="dev.Setup.Common">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Common"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="27" package="global">
      <extends/>
      <name>Setup</name>
      <full_name>\Setup</full_name>
      <docblock line="27">
        <description>Setup is a class that is responsible for parsing options and then performing certain steps based on those options.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="33" package="global">
        <name>$__logIndent</name>
        <full_name>\Setup::__logIndent</full_name>
        <default>0</default>
        <docblock line="33">
          <description>Current log indentation level.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="39" package="global">
        <name>$__settings</name>
        <full_name>\Setup::__settings</full_name>
        <default>array()</default>
        <docblock line="39">
          <description>Array of __settings data.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="45" package="global">
        <name>$__createDb</name>
        <full_name>\Setup::__createDb</full_name>
        <default>false</default>
        <docblock line="45">
          <description>If true create the instrumentation and instrumentation_test databases and populate them with tables and data.</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="51" package="global">
        <name>$__useRealKrb</name>
        <full_name>\Setup::__useRealKrb</full_name>
        <default>false</default>
        <docblock line="51">
          <description>If true then use the real KRB Auth lib, otherwise use a dummy one.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="57" package="global">
        <name>$__setupTempFolders</name>
        <full_name>\Setup::__setupTempFolders</full_name>
        <default>false</default>
        <docblock line="57">
          <description>If true create the temporary folders CakePHP needs.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="63" package="global">
        <name>$__environmentType</name>
        <full_name>\Setup::__environmentType</full_name>
        <default>'production'</default>
        <docblock line="63">
          <description>Prefer files with this suffix.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="69" package="global">
        <name>$__firstname</name>
        <full_name>\Setup::__firstname</full_name>
        <default>''</default>
        <docblock line="69">
          <description>Firstname the admin user should be created with.</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="75" package="global">
        <name>$__surname</name>
        <full_name>\Setup::__surname</full_name>
        <default>''</default>
        <docblock line="75">
          <description>Surname the admin user should be created with.</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="81" package="global">
        <name>$__username</name>
        <full_name>\Setup::__username</full_name>
        <default>''</default>
        <docblock line="81">
          <description>Username the admin user should be created with.</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="87" package="global">
        <name>$__email</name>
        <full_name>\Setup::__email</full_name>
        <default>''</default>
        <docblock line="87">
          <description>Email address the admin user should be created with.</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="global">
        <name>__construct</name>
        <full_name>\Setup::__construct()</full_name>
        <docblock line="92">
          <description>Constructor.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="103" package="global">
        <name>__pushLogIndent</name>
        <full_name>\Setup::__pushLogIndent()</full_name>
        <docblock line="103">
          <description>Increase the log indent level.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="110" package="global">
        <name>__popLogIndent</name>
        <full_name>\Setup::__popLogIndent()</full_name>
        <docblock line="110">
          <description>Decrease the log indent level.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="123" package="global">
        <name>setCreateDatabase</name>
        <full_name>\Setup::setCreateDatabase()</full_name>
        <docblock line="123">
          <description>Set up the database options.</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;If true then the database will be created..&lt;/p&gt;" type="bool" variable="$__createDb">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$__createDb</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="132" package="global">
        <name>setUseRealKrb</name>
        <full_name>\Setup::setUseRealKrb()</full_name>
        <docblock line="132">
          <description>Set if we should use the real KRB lib or not.</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;If true then the real KRB code will be copied in to the lib folder, if false, a dummy file will be copied.&lt;/p&gt;" type="bool" variable="$useRealKrb">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useRealKrb</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="141" package="global">
        <name>setUseDevelopmentEnvironment</name>
        <full_name>\Setup::setUseDevelopmentEnvironment()</full_name>
        <docblock line="141">
          <description>Set if we should use development or production configs, __settings and databases.</description>
          <long-description></long-description>
          <tag name="param" line="141" description="&lt;p&gt;If true then use development configs, __settings and databases.&lt;/p&gt;" type="bool" variable="$useDevelopmentEnv">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useDevelopmentEnv</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="global">
        <name>setSetupTempFolders</name>
        <full_name>\Setup::setSetupTempFolders()</full_name>
        <docblock line="150">
          <description>Set if we should create the temporary folders.</description>
          <long-description></long-description>
          <tag name="param" line="150" description="&lt;p&gt;If true then temporary folders will be created.&lt;/p&gt;" type="bool" variable="$setupTempFolders">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$setupTempFolders</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="162" package="global">
        <name>setUserInfo</name>
        <full_name>\Setup::setUserInfo()</full_name>
        <docblock line="162">
          <description>Set up the user info.</description>
          <long-description></long-description>
          <tag name="param" line="162" description="&lt;p&gt;First name of the user.&lt;/p&gt;" type="string" variable="$firstname">
            <type>string</type>
          </tag>
          <tag name="param" line="162" description="&lt;p&gt;Surname of the user.&lt;/p&gt;" type="string" variable="$surname">
            <type>string</type>
          </tag>
          <tag name="param" line="162" description="&lt;p&gt;Username of the user.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="162" description="&lt;p&gt;Users e-mail.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$firstname</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$surname</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="176" package="global">
        <name>__replaceFields</name>
        <full_name>\Setup::__replaceFields()</full_name>
        <docblock line="176">
          <description>Replace variables in a template using the options in fields.</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;The template to work with.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="176" description="&lt;p&gt;Key-value pair of names and the values to substitute.&lt;/p&gt;" type="array" variable="$fields">
            <type>array</type>
          </tag>
          <tag name="return" line="176" description="The template with values replaced." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="188" package="global">
        <name>__setupConfigFiles</name>
        <full_name>\Setup::__setupConfigFiles()</full_name>
        <docblock line="188">
          <description>Create the config files for the current environment, delete any no-longer needed config files.</description>
          <long-description></long-description>
          <tag name="param" line="188" description="&lt;p&gt;The __settings to use.&lt;/p&gt;" type="array" variable="$__settings">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="236" package="global">
        <name>__getSqlFilesContaining</name>
        <full_name>\Setup::__getSqlFilesContaining()</full_name>
        <docblock line="236">
          <description>Get an array of all sql files in the ./sql folder that are valid for the current configuration and contain a certain string.</description>
          <long-description></long-description>
          <tag name="param" line="236" description="&lt;p&gt;Files returned must contain this string.&lt;/p&gt;" type="string" variable="$subStr">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="A list of filenames for sql files that match the $subStr and environment criteria." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subStr</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="265" package="global">
        <name>__runQuery</name>
        <full_name>\Setup::__runQuery()</full_name>
        <docblock line="265">
          <description>Run a query on a database object, returning the result</description>
          <long-description></long-description>
          <tag name="param" line="265" description="&lt;p&gt;A database object to run the query on.&lt;/p&gt;" type="\mysqli" variable="$databaseObj">
            <type>\mysqli</type>
          </tag>
          <tag name="param" line="265" description="&lt;p&gt;The query to run.&lt;/p&gt;" type="string" variable="$query">
            <type>string</type>
          </tag>
          <tag name="return" line="265" description="An array of results if query is successful, or null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseObj</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="303" package="global">
        <name>__runQueryFromFile</name>
        <full_name>\Setup::__runQueryFromFile()</full_name>
        <docblock line="303">
          <description>Run a query from a file.</description>
          <long-description></long-description>
          <tag name="param" line="303" description="&lt;p&gt;A database object to run the query on.&lt;/p&gt;" type="\mysqli" variable="$databaseObj">
            <type>\mysqli</type>
          </tag>
          <tag name="param" line="303" description="&lt;p&gt;Path to the file containing the query to run.&lt;/p&gt;" type="string" variable="$filepath">
            <type>string</type>
          </tag>
          <tag name="return" line="303" description="An array of results if query is successful, or null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseObj</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filepath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="315" package="global">
        <name>__runAllQueriesInFileList</name>
        <full_name>\Setup::__runAllQueriesInFileList()</full_name>
        <docblock line="315">
          <description>Given a list of files containing sql queries, run all the queries.</description>
          <long-description></long-description>
          <tag name="param" line="315" description="&lt;p&gt;A database object to run the queries on.&lt;/p&gt;" type="\mysqli" variable="$databaseObj">
            <type>\mysqli</type>
          </tag>
          <tag name="param" line="315" description="&lt;p&gt;The list of files.&lt;/p&gt;" type="string" variable="$fileList">
            <type>string</type>
          </tag>
          <tag name="return" line="315" description="An array of results of the queries that succeded." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseObj</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fileList</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="333" package="global">
        <name>__runSchemaQueries</name>
        <full_name>\Setup::__runSchemaQueries()</full_name>
        <docblock line="333">
          <description>Run all queries marked as 'schema'.</description>
          <long-description></long-description>
          <tag name="param" line="333" description="&lt;p&gt;A database object to run the queries on.&lt;/p&gt;" type="\mysqli" variable="$databaseObj">
            <type>\mysqli</type>
          </tag>
          <tag name="return" line="333" description="An array of results of the queries that succeded." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseObj</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="344" package="global">
        <name>__runDataQueries</name>
        <full_name>\Setup::__runDataQueries()</full_name>
        <docblock line="344">
          <description>Run all queries marked as 'data'.</description>
          <long-description></long-description>
          <tag name="param" line="344" description="&lt;p&gt;A database object to run the queries on.&lt;/p&gt;" type="\mysqli" variable="$databaseObj">
            <type>\mysqli</type>
          </tag>
          <tag name="return" line="344" description="An array of results of the queries that succeded." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseObj</name>
          <default></default>
          <type>\mysqli</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="356" package="global">
        <name>__distribureMembers</name>
        <full_name>\Setup::__distribureMembers()</full_name>
        <docblock line="356">
          <description>Divide $membersRemaining by $divisor, return the result and adjust $membersRemaining.</description>
          <long-description></long-description>
          <tag name="param" line="356" description="&lt;p&gt;(in, out) The number of members left to distribute.&lt;/p&gt;" type="int" variable="$membersRemaining">
            <type>int</type>
          </tag>
          <tag name="param" line="356" description="&lt;p&gt;The portion of members that should be used.&lt;/p&gt;" type="int" variable="$divisor">
            <type>int</type>
          </tag>
          <tag name="return" line="356" description="The number of members used." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$membersRemaining</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$divisor</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="369" package="global">
        <name>__writeToFile</name>
        <full_name>\Setup::__writeToFile()</full_name>
        <docblock line="369">
          <description>Write $data to the file at $path, overwriting the file if it exists.</description>
          <long-description></long-description>
          <tag name="param" line="369" description="&lt;p&gt;The path to the file.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="369" description="&lt;p&gt;The data to write.&lt;/p&gt;" type="string" variable="$data">
            <type>string</type>
          </tag>
          <tag name="return" line="369" description="True if data was written successfully, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="386" package="global">
        <name>__generateData</name>
        <full_name>\Setup::__generateData()</full_name>
        <docblock line="386">
          <description>Generate the data that will populate the database.</description>
          <long-description></long-description>
          <tag name="return" line="386" description="True if data was generated and written correctly, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="534" package="global">
        <name>__getDbConnection</name>
        <full_name>\Setup::__getDbConnection()</full_name>
        <docblock line="534">
          <description>Get a mysqli database connection.</description>
          <long-description></long-description>
          <tag name="param" line="534" description="&lt;p&gt;The name of the connection to get (e.g. default/test)&lt;/p&gt;" type="string" variable="$connName">
            <type>string</type>
          </tag>
          <tag name="param" line="534" description="&lt;p&gt;If true then the database will be selected.&lt;/p&gt;" type="bool" variable="$select">
            <type>bool</type>
          </tag>
          <tag name="return" line="534" description="A mysql connection on success, or null on failure." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="562" package="global">
        <name>__setupDatabase</name>
        <full_name>\Setup::__setupDatabase()</full_name>
        <docblock line="562">
          <description>Set-up a database.</description>
          <long-description></long-description>
          <tag name="param" line="562" description="&lt;p&gt;The prefix of the database to create.&lt;/p&gt;" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="562" description="&lt;p&gt;If true then run schema and data queries on the newly created database.&lt;/p&gt;" type="bool" variable="$populate">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$populate</name>
          <default></default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="596" package="global">
        <name>__createDatabases</name>
        <full_name>\Setup::__createDatabases()</full_name>
        <docblock line="596">
          <description>Create and/or populate the databases for HMS</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="618" package="global">
        <name>__copyLibFile</name>
        <full_name>\Setup::__copyLibFile()</full_name>
        <docblock line="618">
          <description>Copy a file from one location to another, creating the folder if needed.</description>
          <long-description></long-description>
          <tag name="param" line="618" description="&lt;p&gt;The path to copy the file from.&lt;/p&gt;" type="string" variable="$fromFile">
            <type>string</type>
          </tag>
          <tag name="param" line="618" description="&lt;p&gt;The path to copy the file to.&lt;/p&gt;" type="string" variable="$toFile">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fromFile</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFile</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="640" package="global">
        <name>__copyKrbLibFile</name>
        <full_name>\Setup::__copyKrbLibFile()</full_name>
        <docblock line="640">
          <description>Copy either the real or dummy KRB Auth lib file to the lib folder.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="653" package="global">
        <name>__copyMcapiLibFile</name>
        <full_name>\Setup::__copyMcapiLibFile()</full_name>
        <docblock line="653">
          <description>Copy either the production or development MCAPI file.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="669" package="global">
        <name>__deleteDir</name>
        <full_name>\Setup::__deleteDir()</full_name>
        <docblock line="669">
          <description>Given a path to a directory, delete the directory and all it's contents.</description>
          <long-description></long-description>
          <tag name="param" line="669" description="&lt;p&gt;The path to the directory to delete.&lt;/p&gt;" type="string" variable="$dirPath">
            <type>string</type>
          </tag>
          <tag name="throws" line="669" description="if $dirPath is not a directory." type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dirPath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="692" package="global">
        <name>__setupTempFolders</name>
        <full_name>\Setup::__setupTempFolders()</full_name>
        <docblock line="692">
          <description>Create the temporary folders for HMS, will delete the old ones if they exist.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="730" package="global">
        <name>__isOnCommandline</name>
        <full_name>\Setup::__isOnCommandline()</full_name>
        <docblock line="730">
          <description>Check to see if we're running on the command line</description>
          <long-description></long-description>
          <tag name="return" line="730" description="True if we're running on the command line, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="743" package="global">
        <name>__logMessage</name>
        <full_name>\Setup::__logMessage()</full_name>
        <docblock line="743">
          <description>Format and write a log message, prepends timestamp and appends a newline.</description>
          <long-description></long-description>
          <tag name="param" line="743" description="&lt;p&gt;The message to write.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="764" package="global">
        <name>__validateOptions</name>
        <full_name>\Setup::__validateOptions()</full_name>
        <docblock line="764">
          <description>Check if the options used are valid.</description>
          <long-description></long-description>
          <tag name="return" line="764" description="True if options are valid, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="778" package="global">
        <name>__getSettings</name>
        <full_name>\Setup::__getSettings()</full_name>
        <docblock line="778">
          <description>Get the __settings to use, either default setting or those loaded in from a file.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="837" package="global">
        <name>__isValidVersion</name>
        <full_name>\Setup::__isValidVersion()</full_name>
        <docblock line="837">
          <description>Given an array of version information, check if it is valid.</description>
          <long-description></long-description>
          <tag name="param" line="837" description="&lt;p&gt;An array of version data.&lt;/p&gt;" type="array" variable="$version">
            <type>array</type>
          </tag>
          <tag name="return" line="837" description="True if version is valid, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="849" package="global">
        <name>__getCodeVersion</name>
        <full_name>\Setup::__getCodeVersion()</full_name>
        <docblock line="849">
          <description>Read the current version from the code.</description>
          <long-description></long-description>
          <tag name="return" line="849" description="Array of the code version number, or null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="882" package="global">
        <name>__writeDbVersion</name>
        <full_name>\Setup::__writeDbVersion()</full_name>
        <docblock line="882">
          <description>Write a version to the database version file.</description>
          <long-description></long-description>
          <tag name="param" line="882" description="&lt;p&gt;The version to write.&lt;/p&gt;" type="string" variable="$version">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="896" package="global">
        <name>__readDbVersion</name>
        <full_name>\Setup::__readDbVersion()</full_name>
        <docblock line="896">
          <description>Attempt to read the database version from the database.version file</description>
          <long-description></long-description>
          <tag name="return" line="896" description="Array of version data if successful, null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="918" package="global">
        <name>__compareVersions</name>
        <full_name>\Setup::__compareVersions()</full_name>
        <docblock line="918">
          <description>Get the difference between two versions.</description>
          <long-description></long-description>
          <tag name="param" line="918" description="&lt;p&gt;An array of version data, or a string that can be converted into an array.&lt;/p&gt;" type="mixed" variable="$versionA">
            <type>mixed</type>
          </tag>
          <tag name="param" line="918" description="&lt;p&gt;An array of version data, or a string that can be converted into an array.&lt;/p&gt;" type="mixed" variable="$versionB">
            <type>mixed</type>
          </tag>
          <tag name="return" line="918" description="An integer representing the difference between the versions, or null on error." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$versionA</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$versionB</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="956" package="global">
        <name>__versionToString</name>
        <full_name>\Setup::__versionToString()</full_name>
        <docblock line="956">
          <description>Given an array of version data, return a string representation of that version.</description>
          <long-description></long-description>
          <tag name="param" line="956" description="&lt;p&gt;An array of version data.&lt;/p&gt;" type="array" variable="$version">
            <type>array</type>
          </tag>
          <tag name="return" line="956" description="A string representing the version data." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="966" package="global">
        <name>__stringToVersion</name>
        <full_name>\Setup::__stringToVersion()</full_name>
        <docblock line="966">
          <description>Given a string representation of a version, return an array of version data.</description>
          <long-description></long-description>
          <tag name="param" line="966" description="&lt;p&gt;A string representing a version.&lt;/p&gt;" type="string" variable="$versionStr">
            <type>string</type>
          </tag>
          <tag name="return" line="966" description="An array of version data." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$versionStr</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="974" package="global">
        <name>__runDatabaseUpdate</name>
        <full_name>\Setup::__runDatabaseUpdate()</full_name>
        <docblock line="974">
          <description>Update the database to the current version.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1084" package="global">
        <name>__getTableNameFromSchemaFile</name>
        <full_name>\Setup::__getTableNameFromSchemaFile()</full_name>
        <docblock line="1084">
          <description>Given the path to an sql file that creats a table, get the name of the table</description>
          <long-description></long-description>
          <tag name="param" line="1084" description="&lt;p&gt;The path to the file to read.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="1084" description="The name of the table if read successfully, null otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1101" package="global">
        <name>__executeUpdate</name>
        <full_name>\Setup::__executeUpdate()</full_name>
        <docblock line="1101">
          <description>Attempt to execute the contents of an update file.</description>
          <long-description></long-description>
          <tag name="param" line="1101" description="&lt;p&gt;The path to the update file.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="1101" description="True if execution was successful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1115" package="global">
        <name>run</name>
        <full_name>\Setup::run()</full_name>
        <docblock line="1115">
          <description>Run all selected setup steps.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\Lib\CsvReader\CsvReader.php" generated-path="app.Lib.CsvReader.CsvReader.html" hash="009c3e15655c9a1e09adf1a63adf232f" package="app.Lib.CsvReader">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.CsvReader"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="global">
      <extends/>
      <name>CsvReader</name>
      <full_name>\CsvReader</full_name>
      <docblock line="20">
        <description>Class to handle reading CSV files. Warning, reads entire file in to memory.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="26" package="global">
        <name>$__lines</name>
        <full_name>\CsvReader::__lines</full_name>
        <default>array()</default>
        <docblock line="26">
          <description>Array of lines found in the file.</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="global">
        <name>readFile</name>
        <full_name>\CsvReader::readFile()</full_name>
        <docblock line="34">
          <description>Attempt to read a .csv file</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The path to look for the file.&lt;/p&gt;" type="string" variable="$filePath">
            <type>string</type>
          </tag>
          <tag name="return" line="34" description="True if file was opened successfully, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="global">
        <name>getNumLines</name>
        <full_name>\CsvReader::getNumLines()</full_name>
        <docblock line="68">
          <description>Get the number of __lines available.</description>
          <long-description></long-description>
          <tag name="return" line="68" description="The number of __lines available." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="global">
        <name>getLine</name>
        <full_name>\CsvReader::getLine()</full_name>
        <docblock line="78">
          <description>Get the line at index.</description>
          <long-description></long-description>
          <tag name="param" line="78" description="&lt;p&gt;The index of the line to retrieve.&lt;/p&gt;" type="int" variable="$index">
            <type>int</type>
          </tag>
          <tag name="return" line="78" description="An array of line data if index is valid, otherwise null." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJyFVO9P2zAQ/Zz+FYdUQYpKsi/7MigDVdpAgglBtX2YpspJnMbCsSPbSakQ//vOP5o2qBtRVaW+u3fv3j334mtTNaP09HQE9gMPNw/wObzPZbNRbFUZiOcTuLl/ggUldQjesZwKTQtoRUEVLCoK97eL7bHNeKQF00axrDVMCg2yhJJxqqFutQFFDWECDNaRTHYU8r6bkAZRktDoahewzx4NuGpI/kxWFPxDmia5Y1ky190jJcjK5XDPKOTscYS4Mqb5kqbr9TqRDR7JVmFfqVZpKNJpzcxZ+JGgUhOETEejIBjMOdEajISKiIJTHIoUTKxg/vTTz5rAL6IEHk1dTAMVhinqgmDHl1DTWqpN4oBzh9fzh9e+07VSZGMl5EyghKVE2SHoZ8ESN2tHFBCb6dCiRrGOGArj5dKXzXw0npzvgI2hdWMsE8sQCCS57hymDQeZFanB7hJnG9vQAzGV23ljX7CWS/mMrNQ7QrjlVgnIpOSwUC3O7E0Aa4KGQM3RQLrNc6p12XK+mUJJOK5GIoxaM02TMEmb4RagbEVuzeSofkOcuGczQbGiCOHjI6aXnute1IejwMc1OceDtxF+uawbv8EZDoG0dpVTOFEnVi8PPsidwaf/4pqK6bPLQ+JH0bqyMsTxuCCG2LYralD4/QZI+gh7ONDQJ03hdiUkOijjRDx7N9iA4+agjmYgUMpQELmey6bVVTzkMwWXP7F0kW/gbHFyNJd5lz2Biw+mLXMuNR3wd4OGZIPbx9y33njfqXFmEW2dodXR2luhSEcYJ1nw0L6PmDDOdR/UHDAMqvujre9sbuynCJAHhz1I1IaAGCRR0Jf+38nfDUts7AKOn39Den2du15oStoNb0bNXvAKXAvvje0FB7dJ3IUHYho6wlkx3d0Lt+N/z2oHjT2h3cUIBC9xkXB8vOV7AWH4gUTDTQ/l+e0r//SrD1mWklPu7S8gzfRX</source>
  </file>
  <file path="app\Controller\Component\BankStatementComponent.php" generated-path="app.Controller.Component.BankStatementComponent.html" hash="eb250fcdc1061feea7dce44ca09d2619" package="app.Controller.Component">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller.Component"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\Component</extends>
      <name>BankStatementComponent</name>
      <full_name>\BankStatementComponent</full_name>
      <docblock line="21">
        <description>BankStatementComponent is a component to handle parsing of bank statement .csv files.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$components</name>
        <full_name>\BankStatementComponent::components</full_name>
        <default>array('Csv')</default>
        <docblock line="27">
          <description>List of components this component uses.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="global">
        <name>readFile</name>
        <full_name>\BankStatementComponent::readFile()</full_name>
        <docblock line="35">
          <description>Attempt to read a bank statement .csv file.</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;The path to look for the file.&lt;/p&gt;" type="string" variable="$filePath">
            <type>string</type>
          </tag>
          <tag name="return" line="35" description="True if file was opened successfully and is bank statement csv, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="global">
        <name>iterate</name>
        <full_name>\BankStatementComponent::iterate()</full_name>
        <docblock line="60">
          <description>Iterate over all transactions calling $callback for each valid transaction.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;The function to call for each valid transaction.&lt;/p&gt;" type="\function" variable="$callback">
            <type>\function</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>\function</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="global">
        <name>getLine</name>
        <full_name>\BankStatementComponent::getLine()</full_name>
        <docblock line="79">
          <description>Get the bank statement line at index.</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;The index of the line to get.&lt;/p&gt;" type="int" variable="$index">
            <type>int</type>
          </tag>
          <tag name="return" line="79" description="Array of transaction data if index is in bounds and the line at index is a valid transaction, null otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="130" package="global">
        <name>__parseDesc</name>
        <full_name>\BankStatementComponent::__parseDesc()</full_name>
        <docblock line="130">
          <description>Parse the description field of the transaction.</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;The entire description field.&lt;/p&gt;" type="string" variable="$desc">
            <type>string</type>
          </tag>
          <tag name="return" line="130" description="An array of description data, may include Payee name, payment ref, FP id and transaction id, any of these fields may be null." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$desc</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="176" package="global">
        <name>__parseFp</name>
        <full_name>\BankStatementComponent::__parseFp()</full_name>
        <docblock line="176">
          <description>Parse the FP field of the transaction</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;The possible FP field.&lt;/p&gt;" type="" variable="$field"/>
          <tag name="return" line="176" description="$field if it is a valid FP field, otherwise returns null." type="\Returns">
            <type>\Returns</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="196" package="global">
        <name>__parseDate</name>
        <full_name>\BankStatementComponent::__parseDate()</full_name>
        <docblock line="196">
          <description>Attempt to parse a date from the bank statement</description>
          <long-description></long-description>
          <tag name="param" line="196" description="&lt;p&gt;Date to attempt to parse.&lt;/p&gt;" type="string" variable="$date">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="If date can be parsed, returns that date as a unix epoch timestamp, otherwise returns false." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\View\Helper\MailinglistHelper.php" generated-path="app.View.Helper.MailinglistHelper.html" hash="100b3aaff259d29af46a16e02ee7fd56" package="app.View.Helper">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.View.Helper"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppHelper</extends>
      <name>MailinglistHelper</name>
      <full_name>\MailinglistHelper</full_name>
      <docblock line="21">
        <description>Helper to display a list of mailing lists.</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$helpers</name>
        <full_name>\MailinglistHelper::helpers</full_name>
        <default>array('Form', 'Html')</default>
        <docblock line="27">
          <description>Helpers this helper requires.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="global">
        <name>output</name>
        <full_name>\MailinglistHelper::output()</full_name>
        <docblock line="34">
          <description>Given a list of mailing list data, output a list of selection boxes showing subscription status.</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;Array of mailing list data.&lt;/p&gt;" type="array" variable="$mailingListDetails">
            <type>array</type>
          </tag>
          <tag name="return" line="34" description="HTML required to render the selection boxes." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mailingListDetails</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="global">
        <name>outputList</name>
        <full_name>\MailinglistHelper::outputList()</full_name>
        <docblock line="63">
          <description>Given a list of mailing list data, output an englishised list of the names
of the mailing lists that are subscribed to.</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;Array of mailing list data.&lt;/p&gt;" type="array" variable="$mailingListDetails">
            <type>array</type>
          </tag>
          <tag name="return" line="63" description="HTML to render the lists." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mailingListDetails</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJy1VU1v00AQPSe/Yg6V1q7ShAuXFEIRCFKpgYpWXKqq2tiTeFXbu+xH0wj1vzP7Yeq0KQcQlmJ5983Mm3k7s3nzTlVqODk8HMIh+N/5/Bxe04f//iDVVot1ZSH7kMN8cQGXyJsEnokCW4MluLZEDZcVwuL0stv2Ft+wFMZqsXRWyNaAXMFK1GigccaCRstFC5b8+FLeIRS/2VppKco4EZ08Av7ppQEnihe3fI0QH67U+LvAzXiOtUIdLOqYT7LoZQhZZa2aTiabzWYsFW1Jp4lV6vUkOZlJI+xRWoxJqJxCTobD90pNp47wjNFnJGMjYJ57kpb58bCTNe6AlUB6qJpvgUNNynhBGi5q0a7D2oxD+KLmxsAiAn4/+eO9xbY08JsSfj6hMKSmMFBFVOMPJzSGqHByxzVwrfk2cAyUW1JdcFAlx7cRzNgnqRtfy9w2db+Iz+IO2xcSh5JbPgLprHK2Z2OwxsKfPSzlPZ27qeTG+xi3NIUWKkDGcutSkopr3kBMBQ4SxRlF++ibpabaA7KPPgagpnLax9QenF8uzjoZSq+/xtCrvuee5DbekWXl2ojFkrI9qeSk/mDQB76q2OadlCQeGUQeLBePhjsmZLOSGnlRwT6aK+aLY9fAzY4gkX5w4Os/LSlgH7xiomTXx8HgeYJXyen6mVfLG0x+YgXZnJtqOl3jbv3UG+n8lliyPCUyCAXdKGeqbG/NI0i0QZbBw9D/6JVO7MB37tHMd9/RTLRedNZ3H/cXbDTsGLNAzmq+xJrB2xnc3GQMqIGtdpiPImq3CgPIYmYs7TeutkLVCSsqLG6pGTpURrkCuEfGZNXVGs32Vu4Nc3r5yh/+ZqBawHATkETUx52D72J/YsZHS+ud64R2OHlrhMcDoyn4f6O2O2G9K+2FufJ0f5itVP7OPP3PWfmnno/JjrpG9tfn0Yz8b7N9MzbqrttCtlbLuqZ/jNCEvWvf+GuYB70idkd/L+xxjvInk+TTL6RrbZdMDjN4lXJNp3URTms6tTJqnwyPn0wj+yJbZKFdH4a/APNQmeo=</source>
  </file>
  <file path="app\Controller\PagesController.php" generated-path="app.Controller.PagesController.html" hash="ddaf3a68f1f61b2bf58786359c7e90db" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="app.Controller">
      <extends>\AppController</extends>
      <name>PagesController</name>
      <full_name>\PagesController</full_name>
      <docblock line="28">
        <description>Static content controller</description>
        <long-description>Override this controller by placing a copy in controllers directory of an application</long-description>
        <tag name="package" line="28" description="app.Controller"/>
        <tag name="link" line="28" description="http://book.cakephp.org/2.0/en/controllers/pages-controller.html" link="http://book.cakephp.org/2.0/en/controllers/pages-controller.html"/>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="34" package="app.Controller">
        <name>$components</name>
        <full_name>\PagesController::components</full_name>
        <default>array('Auth')</default>
        <docblock line="34">
          <description>The list of components this Controller relies on.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="41" package="app.Controller">
        <name>$name</name>
        <full_name>\PagesController::name</full_name>
        <default>'Pages'</default>
        <docblock line="41">
          <description>Controller name.</description>
          <long-description></long-description>
          <tag name="var" line="41" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="47" package="app.Controller">
        <name>display</name>
        <full_name>\PagesController::display()</full_name>
        <docblock line="47">
          <description>Displays a view.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="app.Controller">
        <name>beforeFilter</name>
        <full_name>\PagesController::beforeFilter()</full_name>
        <docblock line="80">
          <description>Perform any actions that should be performed before any controller action.</description>
          <long-description></long-description>
          <tag name="link" line="80" description="http://api20.cakephp.org/class/controller#method-ControllerbeforeFilter" link="http://api20.cakephp.org/class/controller#method-ControllerbeforeFilter"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="88" package="app.Controller">
        <name>home</name>
        <full_name>\PagesController::home()</full_name>
        <docblock line="88">
          <description>Display the home page.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJyVVm1v2zYQ/mz/iisWQHIRW2mAfVHnpFuSogHqLnAzbMAwGLRES0QoUiCpuN6Q/747krbkxvsww7Ap3vFenrvnqJ+u27odZ2/fjoG+8PDpAX6M6xvd7oyoagfpzQQ+Lb7CI2dNFH4WBVeWl9Cpkht4rDks7h/326Sx5KWwzoh154RWFvQGNkJyC01nHRjumFDg8Bxb62cOxcGb0g6tzKKjD72APoMw4EPLiidWcQgf1razG62c0VJy4xVkCCcqDAKEtHauzbNsu93OdItbujPoVJsqi4ds1gg3jQ8zhGmCJrPxePxz2+Z5hwppgsveY3IOyeBp8n6o+UcjSf6bE1K4HQkj6vDVMcwX81eOK+f/DxmQ/NdnbowoOWIl7EAM6x20khVCVcA8fICA9nILpTC8cNrsCHumCCBMh1E59uDuETyJnXqCiNJa66dZwZ44wuAxupxdZFxlA29Zi3bstN+Z1a6RHrJCMmvhgeS9D+DfMN/SwhGG8M8BF2opiR1EwRe6abVCeGxAYXDAcCmwqbSa+aifmQFmDNt5z6O2W2PKcDYwMA9yLF7n6mEhBkYVa/oGJJPUyKo6tklKaC3xiSW9nVthsS47i1V5Fnwb7fQHN50qqAZYH6+YTjDr0eisZa5GeyReVdytmKlsSvGhrNAd9sYc/H/qVVEyGokNpG+CNFgZnRFA0yvDQ/XTJEu85ktwUVHIZ7Zb75dOOMlXG21WGIruyInqpPRuvXXetG4XXP558ddk72Z/Pu7vXbw68q4/MvAaRf95KiY8hcHxE5Heq430LZ7nddcwJf7mJwwEL/iTZXC7w7IN6IZlYJBYz8EEKLxr+L3e0RCaxcCg4a7W5Yp/w260qQf4HDwA+9gKJuUKiW5WVL00dtiRJvRhxBJZ7lLqS0ZVIh0aEBEjWn6fbzLxJg4FpsGbiqaVuuRU5vMAq9d6OXTjAzdookH+74AVYRS7mjmwte5kCWsObVDh9IAL7nUHgyYcO/BhOBhYKy4vjiaDJ/tgMPwQ0Jv27ApOPgrp/KQ5QYyhRmRHyzBhl+fHogEexObpFdZBb9MkMis5hiIS0186tUbyEtKz0yGQPLruI89zqVm5QLxlmix4sw5jnoKQuqp4ea/C7n3pqeUDCzvTK6T0fflRm/CcHoVNrZNOJgfSvTIX+8zL9vXfcOPhmc9hie1B4XVGpnG69RVIYH4FSeMtWWqsUM+wjY6ESibn4Ex3aGciyjIOEECfBBiFCFvmR7CmruHS8m2NMfgTditcUR+iGyRN91tnB4m/ym3vFWmEN3PQz/OH5d1qcbf45W65epcH+QjfGjqj4PsZ9/9SRt517S29f0iSnYjnvXdHgykQlqadwZcdvMSxrviLfdgJWaZJpAFOC4f3Q423KZFg1j1l1xvOy7mx9jLM3yHrE9y+ZY4FykbLYT54WI8m+Rf2jH1dorMlr3ACYRm+6O0bymqQoIkyXAc0sKTJWlQrfP1ymPn+DngZv4z/BScHH6E=</source>
  </file>
  <file path="app\Controller\GroupsController.php" generated-path="app.Controller.GroupsController.html" hash="e29790afaa8cfbe3d2bf311a1bd49fc3" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="global">
      <extends>\AppController</extends>
      <name>GroupsController</name>
      <full_name>\GroupsController</full_name>
      <docblock line="20">
        <description>Controller for the Groups functionality, allows users to
view all the groups, and modify which users belong in which groups.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="26" package="global">
        <name>$helpers</name>
        <full_name>\GroupsController::helpers</full_name>
        <default>array('Html', 'Form')</default>
        <docblock line="26">
          <description>Views rendered from this controller will have access to the following helpers.</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="global">
        <name>isAuthorized</name>
        <full_name>\GroupsController::isAuthorized()</full_name>
        <docblock line="36">
          <description>Test to see if a user is authorized to make a request.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;Member record for the user.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="36" description="True if the user is authorized to make the request, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="36" description="http://api20.cakephp.org/class/cake-request" link="http://api20.cakephp.org/class/cake-request"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="global">
        <name>index</name>
        <full_name>\GroupsController::index()</full_name>
        <docblock line="43">
          <description>Show a list of all groups and their associated permissions.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="global">
        <name>add</name>
        <full_name>\GroupsController::add()</full_name>
        <docblock line="53">
          <description>Add a new group.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="global">
        <name>edit</name>
        <full_name>\GroupsController::edit()</full_name>
        <docblock line="70">
          <description>Edit an existing group.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;The id of the group to edit.&lt;/p&gt;" type="int|null" variable="$id">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="global">
        <name>view</name>
        <full_name>\GroupsController::view()</full_name>
        <docblock line="90">
          <description>View details about a group</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;The id of the group to look at.&lt;/p&gt;" type="int|null" variable="$id">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzNVlFv2zYQfrZ/xT0YkFzE8jBgL2vjNgjaZcBSBI2714GWKIsIJaokFTfd8t/3HUXLyhyvKDAMNRLYJu/u++7uu5NfvW6rdrp88WJK/Ec3Vzf0U/x8adoHq7aVp/RyTlfXt7SWoo6Xv6lcNk4W1DWFtLSuJF3/ut4fs8UHWSjnrdp0XpnGkSmpVFo6qjvnyUovVEMefmJj7iXlA1pjPKJkEejN4YJfIxr0phX5ndhK6l+ibbNL03hrtJY2GOieTjQYEaS08r79ebnc7XaZaXFkOgtQY7fL6OSWtfKL+CVDmeYIuZzGYtEBiUpjQyK/WNO1jsquyTlloZV/OCOhtdk56py0jrxh33sld3wevLbBC3ZNQbUpVPlAu0rlVfTYSG2aLaFW/WlvngUuuRbORdgRH/nZy6ZwdNG2o9M/B+q/A96hA9w5dLC0pgYT5dCDwXqnQK8SaIzIc+mYeWBbGk5HgVEldQuCWSj0vbAkrBUPgdek7TYoHM2iDZ33l2ly5WudnFHyztg6mb8MlIgjrCVEAQwnJamSRMiewEl0vjJWfQFRXNfiDozA/VMHh0EjrbCi7jFoFjyvZb3Bm5W5scXQIb7KRh6XCPehj0WzGDRoef957xSYeC/r1nPukUkfClLubEMbYzStbRf4P/E7zsAfIM7I4JvdKYiyFNrFoFo1dxQ1Klr14w9ZDkeoMEg0NH7JJ4sY5knd9woE+sUAnobCnA15zqGIySSS9+D9cjp5HDRyWxlIlDRGmCeXxdorL+gUjBUa7pzJlfBIDF2ulXM86NkJKlDb57QHnbHaFisnfZr0UaGJeBjUvFiVsE8TwCZzyOSpywjsyO9muPtnjEOQ9+J+sRIF7i6Koh8f1uTAJMEdi3NUDjYU1GBsg9WJHDnmcYbfRpcrDrM4L6WSunAJna/2J4dof+SmkEx3dFRIlyPbmC+EmEa82PTFSjnEMMCY90zHRpGUw9gf+RXCi73LPr1bGakjz3eQZJUm7/cl4mLIIgt1PHhg3yjMpE9jNiIULuSXBIXEdk8eSWIWvgr3sREbLXmuABd7EyEfp+H/0MO3hfJQL9YjSsxTPLRyvw4gUv9X00HrM1WEPYA3Ux7WNAMhA3+i/3yVsus5cZTvRgoDiQgVGILnv4pkKw8aeU4MHOJJVCsF5M9o4+b9t/IKIfBc4ueibKhrC14//5/KesCvCI2fr1TwDxzt+NdNB9n1Lt+qNW3MHZ47J+TGPyNOye2o089s3SMJ9h08sSvD+DyzLFn0g0pDMnPql+fj3474TOI=</source>
  </file>
  <file path="plugins\MemberVoice\Model\MemberVoiceVote.php" generated-path="plugins.MemberVoice.Model.MemberVoiceVote.html" hash="bd74829671be6c87707d31ceb64908f6" package="plugins.MemberVoice.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppModel</extends>
      <name>MemberVoiceVote</name>
      <full_name>\MemberVoiceVote</full_name>
      <docblock line="19">
        <description>Model for all vote data.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VOTE_VALID</name>
        <full_name>\MemberVoiceVote::VOTE_VALID</full_name>
        <value>1</value>
        <docblock line="30">
          <description>Return value for valid vote.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="35" package="global">
        <name>VOTE_NO_ID</name>
        <full_name>\MemberVoiceVote::VOTE_NO_ID</full_name>
        <value>2</value>
        <docblock line="35">
          <description>Return value when no id provided.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="40" package="global">
        <name>VOTE_NOT_FOUND</name>
        <full_name>\MemberVoiceVote::VOTE_NOT_FOUND</full_name>
        <value>3</value>
        <docblock line="40">
          <description>Return value when idea is not found.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="45" package="global">
        <name>VOTE_MISSING</name>
        <full_name>\MemberVoiceVote::VOTE_MISSING</full_name>
        <value>4</value>
        <docblock line="45">
          <description>Return value when no vote provided.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="50" package="global">
        <name>VOTE_INVALID</name>
        <full_name>\MemberVoiceVote::VOTE_INVALID</full_name>
        <value>5</value>
        <docblock line="50">
          <description>Return value when vote is not within expected range.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="55" package="global">
        <name>VOTE_NOT_SAVED</name>
        <full_name>\MemberVoiceVote::VOTE_NOT_SAVED</full_name>
        <value>6</value>
        <docblock line="55">
          <description>Return value when vote doesn't save.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$useTable</name>
        <full_name>\MemberVoiceVote::useTable</full_name>
        <default>'votes'</default>
        <docblock line="25">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$tablePrefix</name>
        <full_name>\MemberVoiceAppModel::tablePrefix</full_name>
        <default>"mv_"</default>
        <docblock line="25">
          <description>Prefix for the MemberVoice tables.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$mvUserModel</name>
        <full_name>\MemberVoiceAppModel::mvUserModel</full_name>
        <default>'Member'</default>
        <docblock line="31">
          <description>Name of the model in the app that contains user data.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJyFkm9r2zAQxl83n+JeDNIGZrM/3Yt2YwldtwbqpNSe3wbZuthijiQk2W4Z++47KU6asbQV2MjS3e8eP3efv+paj+LJZAQT8M/dzR2c08bvr5R+NKKqHZxencFNkkKGbDNc3ooSpUUOreRoIKsRknm2O/YR98iFdUYUrRNKWlBrWIsGLWxa68CgY0KCozxWqA6h3FeTyhElGgpNny78OpABU83KX6xC2C7dtJWQNkpwU6DJlYckimMTYputsiH2QCuc1s7pizju+z5Smo5UayhVmSoekmy8Ee7t8BGRZWeEjEc740IRWCsDrGmgUw6BM8eiEFQ2zFo40JT7e3xwKPk/5zOtt6Dfe3CqsRTrx+CSY0VDbwWtDd7AtGMGvMGyCoVOdFuQRHhDAVkI/gJjL8aOL/fEe3StkdCxpsWgmHaCB81buScl9cpBvsyuV/nsdv6NKO+eye9rlNQtIIA2qhMc+f+QxXIVIO9fglAqA2F960kVjdQxTrb6vvy58KwPrwgKLXheUjJP0/niB4E+vgQKlEFUL1xN44oP1BFHU2+YrI44Nl/sPDt/lcwVWjl2YFl3hOR/N53l15716XL05y+aHR38</source>
  </file>
  <file path="app\Controller\MailinglistsController.php" generated-path="app.Controller.MailinglistsController.html" hash="c2d6d913ddbb2a308fae0a1c6430ea19" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="global">
      <extends>\AppController</extends>
      <name>MailingListsController</name>
      <full_name>\MailingListsController</full_name>
      <docblock line="20">
        <description>Controller to handle MailingList functionality, allows a user
to see a list of mailing lists, and subscribe/un-subscribe e-mail addresses.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="26" package="global">
        <name>$helpers</name>
        <full_name>\MailingListsController::helpers</full_name>
        <default>array('Html', 'Form')</default>
        <docblock line="26">
          <description>Views rendered from this controller will have access to the following helpers.</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="global">
        <name>isAuthorized</name>
        <full_name>\MailingListsController::isAuthorized()</full_name>
        <docblock line="36">
          <description>Test to see if a user is authorized to make a request.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;Member record for the user.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="36" description="True if the user is authorized to make the request, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="36" description="http://api20.cakephp.org/class/cake-request" link="http://api20.cakephp.org/class/cake-request"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="global">
        <name>index</name>
        <full_name>\MailingListsController::index()</full_name>
        <docblock line="43">
          <description>Show a list of all mailing list and some basic stats for each of them.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="global">
        <name>view</name>
        <full_name>\MailingListsController::view()</full_name>
        <docblock line="62">
          <description>View details about a mailing list</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;The id of the mailing list to look at.&lt;/p&gt;" type="int|null" variable="$id">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="96" package="global">
        <name>__getListStats</name>
        <full_name>\MailingListsController::__getListStats()</full_name>
        <docblock line="96">
          <description>Given information about a mailing list and a list of member e-mail, return
the array of mailing list data with information about the number of subscribed
members etc.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The array of mailing list data.&lt;/p&gt;" type="array" variable="$list">
            <type>array</type>
          </tag>
          <tag name="param" line="96" description="&lt;p&gt;The list of member e-mail addresses.&lt;/p&gt;" type="array" variable="$memberEmails">
            <type>array</type>
          </tag>
          <tag name="return" line="96" description="The array of mailing list data, with extra infomration added." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$list</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$memberEmails</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="111" package="global">
        <name>__getMemberEmails</name>
        <full_name>\MailingListsController::__getMemberEmails()</full_name>
        <docblock line="111">
          <description>Get a list of all member e-mail addresses.</description>
          <long-description></long-description>
          <tag name="return" line="111" description="A list of all member e-mail addresses." type="string[]">
            <type>string[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJydV9tu2zgQfXa+Yh4MSG59KRbYl6TNJgiymwJ1UcTGvhiGQUu0RUQStSRlN+3m33eGpGXKl7RdI4AtinPmzMyZIfP+jyqrLkZv3lwA/cGXhy/wu/99J6tnJdaZgfiuBw/jCUw5K/zLTyLhpeYp1GXKFUwzDuOP090y7XjkqdBGiWVthCw1yBWsRM41FLU2oLhhogSDdmwpNxySxlspDaIMvaOb/Qv6BDTgpmLJE1tzcB9WVcM7WRol85wruyF3dPyGgCDEmTHV5Wi03W6HssIlWSt0KtV65I30qBBm4B+GmKYeQo4ufLJg7wmMhIyVaY4pYCIX5foTBg6rukwocpYL89wHludyq4FBrR05tNIco4ecdmN2CmdsnzUalCnoeqkTTCEf1eWgeQA+oL3A0lRxjUyHllmSM61DCjrgyL8aXqYabqsqWP3ehPO34MhOcaomVnWlZIHFERrr0uzeijzHSLFYLEnQMYVABVxJio2oZzyvuLJ84GbDFDCl2LNl16nqJSYTun4PfHAv4+jBFHnUh+hPqYqod2UpASFMOSbGp0msfOoAObHaZFKJb0gUXxfsidKo+D81GjS6qZhihfMBXWs55sUSvxRPpMIQpbLs6dUwsLhDuEeHBV0PavW9+70zskyM4UVlKHbPxEGhvGtVwlLKHKaqtvxbdscRmL2LPkh8UluBQl2xXHtQrOsTeN2ySvz2bpigISrTytaWf0QrAw/TyvtOjuj9tnEe28T0mzh7qIhOx5M3yPvqovPSaGSSyW2gV1R0S7NOsbLgsGQaPWrDjLZp5izJyAKDKoZnWKHwvsbOP7LRdW5QIV2S4OA60PTgmlz5BdspMUoGbYpA92TpMGZRygyL5qgq2mMFcE9b9R59sVhzMw5eESJtL+ti3EZNZF2auOXLeqcg467AHe+uAL/fw6ExLb996+Jrk511xfyADK1PKHvx0U6sVRiF9f5i2Tp7zU0chUYRWRzy9Zs/s83gGqfIPQ4HhYMqju5TYWBnF5HWNIktLUQ5JJQkE0U1TGQxsrkfRdBrSYTGCKQ02zHDONhrVEVLJEGjYc3Nv2WNKuqK1HYYfjmVtHWFHZJL+YTNdkY8G/QaE8gHIDyvol+o9i9rDp31XWseqe98LduSnL07Ucw9bz3Zjfu0GZXel3v/WZrTW/b1zSVLxzLlWFgXceQQsHPdc5AXtzC4brIzqYuCqefbPI93gTql226OQxCmd4F8LFfSixwnXizKhaMVvJ5FnKKN5m1hziI7LzAvUVbohQ8ymvc8XMcCLapaZ/FxivotAhRk5wU4sj5v3MrfKfsfdNZBY4V95bYecowaJ8HiObMWu8Cytd4q9ivN/P96+S+x4TSYseQFs312qqHt1A8uMe6MdTeUPrijxF536KZnD+ODqw5QO+DdwmQnfJEVTlKCRLPmBpQSos8IcJOE5/fuyLfY01e9njJrTQ0yPxlZ++7VnPcO43WnfRcrXsgUsxEXykecpjzdTTglNszw/Yg7nCUEdzg+3NhrkqT0449m2mS/10HOIpFSZwajbY/XjNIHprPLSxtBgsfhkcfdiEPZfS9fhq7fw+E1OcZ0HYpHAqJwQg1Dw0gPaXjt5+dGx8Ke1dE8OLVPuna0zsJoi3DG1lLwpbcQ7f7h5vC29BMSon+ZyvVsDrc/a3pWLu1Tzqnj9YPh9JEZHA3uFd7Ub5vp706lXRZCBJuNl/8A8pDHCQ==</source>
  </file>
  <file path="app\Console\cake.php" generated-path="app.Console.cake.html" hash="d80776a472a67bae48b4b86b77693adb" package="app.Console">
    <docblock line="0">
      <description>Command-line code generation utility to automate programmer chores.</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="package" line="0" description="app.Console"/>
      <tag name="since" line="0" description="CakePHP(tm) v 2.0"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <source>eJytVMFu2zAMPddfwWIBYhetPQzYJV2xFKmDBujWwMkOOxmKTdtaZMmT5KTFsH8fZTtp2l6niyxSfHx8pPzhPGqNjjZcRk3VwNVv78tX+vCiiwsPLmCm6prJ/EpwiZCpHKFEiZpZriS0lgtun8EqYK1VNbMIjValZnWNGrJKaTQhwTik5f0SPg/fM7ZFOvu2DmACCWt4Dne4Q6GaGqWFOSHgXukt+JW1zSSKMoogWqHSZdDzap41LysLfhZ0eLBShd0zjTBXrcw7hpewkFn4CqQ4Og9YDu6BZygN5kBOYr6uEL4t1gezuzFXGopWCBLhkJl0AdHfAC4LpeshaSOQkc0ggiWkh8Us/r6KQ/tkHVKCOTdW803rbhtQBRRcoIG6NRY0WsZlF8c2aocn+aSylO2g5/TF4dZ/FASm1O0tHNf7Frxq4FKrX5h1pU0blm1ZiUMga5pwRiUq0Uk4NVxmeIQ9xdjBp/DjkLoXtF8nTTiS3u/3oWrIpFpNchCdaAgyUc3t1XAIiaurJvJGuYEbuFsk8Wz9mPxMV/HyNrmlz2tycdMwm1XU9BsYO0pjCMFFhHTsuZ9YVhUKcXeMcTnG157HC/CLVmZOxRSfqL3GH3PJU4N2HATwxzsbaaUs5ci5ljTc/ts9TeeLhzhNgyAgwLMo6kagUEKoPZcldA8w50WB2kChVQ3cGjB8Q46yu08qbCJXQTTwjtZYN4IepYnMFsXR7BrpmHtnA0XHNRNtjinVVY0voSd7rJqAnQbL2/X9i3hkcOHlu3BXwN9ek/PBAf6J0L0e9ADKEnWKWivtk9StyN2Eg1CZ+48M00HjTwPcvY+QiMXpj1WcpHGSPCZdmlY6/iOX2BBvt9P2kmyoxdmME5aeV6slvOnjZKJb6Y+YLnd06R/yB6R2</source>
  </file>
  <file path="app\Controller\SnackspaceController.php" generated-path="app.Controller.SnackspaceController.html" hash="54a84ecc648d718f2a15f445c9569b92" package="app.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\AppController</extends>
      <name>SnackspaceController</name>
      <full_name>\SnackspaceController</full_name>
      <docblock line="19">
        <description>Controller to handle Snackspace functionality, allows a member to see their transaction history.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$uses</name>
        <full_name>\SnackspaceController::uses</full_name>
        <default>array('Transactions')</default>
        <docblock line="25">
          <description>List of models this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="global">
        <name>isAuthorized</name>
        <full_name>\SnackspaceController::isAuthorized()</full_name>
        <docblock line="35">
          <description>Test to see if a user is authorized to make a request.</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;Member record for the user.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="35" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="35" description="True if the user is authorized to make the request, otherwise false." type="bool">
            <type>bool</type>
          </tag>
          <tag name="link" line="35" description="http://api20.cakephp.org/class/cake-request" link="http://api20.cakephp.org/class/cake-request"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="global">
        <name>history</name>
        <full_name>\SnackspaceController::history()</full_name>
        <docblock line="70">
          <description>Show a list of all transactions for $memberId, or for the logged in member if $memberId isn't set.</description>
          <long-description></long-description>
          <tag name="param" line="70" description="&lt;p&gt;The members id to list all transactions for&lt;/p&gt;" type="int|null" variable="$memberId">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="89" package="global">
        <name>__transactionList</name>
        <full_name>\SnackspaceController::__transactionList()</full_name>
        <docblock line="89">
          <description>List all transactions for a given member</description>
          <long-description></long-description>
          <tag name="param" line="89" description="&lt;p&gt;The members id to list all transactions for&lt;/p&gt;" type="int" variable="$memberId">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$memberId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJylVm2PGjcQ/gy/Yiqh7hLxEkXqF65cQ2lzQT3SU+BbdDoZ1oB1Xntre6Ekvf/e8cvueu/I9UMRQmt7Zp6ZZx7P8vMvxaHojt+86YL9wt3HO/gpPM9lcVZsfzCQzvvwcbmCNSV5OLxlWyo0zaAUGVWwPlBYLtbVtrX4TDOmjWKb0jApNMgd7BinGvJSG1DUECbAoB/ZyCOFbY0mpMEoowD0vjmwnygNeF+Q7SPZU/AfUhSjuRRGSc6pcgbcpxMMogQhPRhTTMbj0+k0kgVuyVIhqFT7cXDS45yZYViMkKY+hhx3A1nQIIGRcCAi4xRWAjPSmBaFXSm2tnDCmTkPgHAuTxoI5DTfeB9Nqa2f4UIRoYkzhwOSJtV55MC2nGgdRY1A6d+GikzDrCii3W91frcYx3Key4xyjUBMI8e1YYkFjhxHR6KAKEXODrFTlBusGXrWAKb+JE3WTYY66V85FLDua4owoRi2w/rQTwFikdIcpGJfUSJ4nJNHbDR2/a8SHereFkSR3GM4RAVLT4+iW6ky2EnlJGKPRpHHHMN99rGgF4I6DVbPlZPLxBiaF4aJfZWJD4USLJWAjZQc1qp0+bf8XlZgGogBSFypE0Mx7QjXIShn4hGCtkjB3r0dbdER1eOk5fo5tjvDEKZFeqUZRJ/V4KkjZlDX2ccmdzqYa4pcUGEmk1etvXknFGuwzitcP3Xxp2crvMHOGixx6qu4sgfjMfwp+LnSIhT2krG84DSnzlhLtFYhjQpqeO2ao78kXijJPfwwhSQESdqJBLCQCQLeUN81fz8eWAaZHREo3QPB8bChVFTUUy+MH509l/s9buAssYXrxt8WiIdeUAtbYM9eguH1w56aW+e1ENVp2r8K1TCtqblQU4GdS+6/vL2vGLUmcfDve7gyAW8hvewZZRkzMrMjA+iRqrMU1GrwyOgpjAx5EpfGRtSSBqENUaXfbn4tDJeni+HZ8m7D6xsly0JXKxaeFsLtpy2EAbjNyWT1aTb/Y3U3m//+MPttufgEFXeVwNxUhORDyTnMtluKhEF6ZAQuSbsPOGQhiWbsLMsZzqOYmkuk2DHoLqt+rXDLehBnbIJnT/VQXR0wXQI8zFZMP8bTTpa9vKYBV9UEa2QaXgBIcW2J910kBmeoiYccE+YfYZlp7Nb1BdHA3FhyqVzK4/JgCYykTcgpWAzfl9ByLkm2tK+NC3M/6CuPxNX4d+Kw/3nb/AwKVg9R/vbV1UB41Jep+WCJC9XbEE4EKqKGrYSK6L/6sw9S+c1W6DqyvfVJCJPg/AyP/Vb/b7/HNopiz4606m77/YaN/F89VOxITPOPAl4jK+4jjm0mrGfNStxOx836WSB7GwbVS9/TNaonagLT66aQfmAvCunoqcEq+JcqapP+PIJl//leaMNT91+ERoGj</source>
  </file>
  <file path="app\Model\Account.php" generated-path="app.Model.Account.html" hash="b5f042c9490298bc26277ab3e3947191" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>Account</name>
      <full_name>\Account</full_name>
      <docblock line="21">
        <description>Model for all account data</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$useTable</name>
        <full_name>\Account::useTable</full_name>
        <default>"account"</default>
        <docblock line="27">
          <description>Specify the table to use</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="33" package="global">
        <name>$primaryKey</name>
        <full_name>\Account::primaryKey</full_name>
        <default>'account_id'</default>
        <docblock line="33">
          <description>Specify the primary key to use.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="39" package="global">
        <name>$hasMany</name>
        <full_name>\Account::hasMany</full_name>
        <default>array('Member' =&gt; array('className' =&gt; 'Member'))</default>
        <docblock line="39">
          <description>HasMany associations.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="global">
        <name>$validate</name>
        <full_name>\Account::validate</full_name>
        <default>array('account_id' =&gt; array('content' =&gt; array('rule' =&gt; 'numeric', 'message' =&gt; 'Only numbers are allowed'), 'length' =&gt; array('rule' =&gt; array('between', 1, 11), 'message' =&gt; 'Number must be between 1 and 11 characters long')), 'payment_ref' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 18), 'required' =&gt; true, 'message' =&gt; 'Payment Ref must be between 1 and 18 characters long')))</default>
        <docblock line="49">
          <description>Validation rules.</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="74" package="global">
        <name>generatePaymentRef</name>
        <full_name>\Account::generatePaymentRef()</full_name>
        <docblock line="74">
          <description>Generate a payment reference</description>
          <long-description></long-description>
          <tag name="return" line="74" description="A unique (at the time of function-call) payment reference." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="global">
        <name>generateUniquePaymentRef</name>
        <full_name>\Account::generateUniquePaymentRef()</full_name>
        <docblock line="99">
          <description>Generate a unique payment reference</description>
          <long-description></long-description>
          <tag name="return" line="99" description="A unique (at the time of function-call) payment reference." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="99" description="http://www.bacs.co.uk/Bacs/Businesses/BacsDirectCredit/Receiving/Pages/PaymentReferenceInformation.aspx" link="http://www.bacs.co.uk/Bacs/Businesses/BacsDirectCredit/Receiving/Pages/PaymentReferenceInformation.aspx"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>setupAccountIfNeeded</name>
        <full_name>\Account::setupAccountIfNeeded()</full_name>
        <docblock line="115">
          <description>Create and save a new account if needed or check for an existing account.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;An account id.&lt;/p&gt;" type="int" variable="$accountId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="The new or existing account id on success, or -1 on error." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$accountId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="global">
        <name>getAccountIdsForRefs</name>
        <full_name>\Account::getAccountIdsForRefs()</full_name>
        <docblock line="151">
          <description>Get a list of account ids from a list of payment refs</description>
          <long-description></long-description>
          <tag name="param" line="151" description="&lt;p&gt;An array of payment refs.&lt;/p&gt;" type="array" variable="$paymentRefs">
            <type>array</type>
          </tag>
          <tag name="return" line="151" description="An array of account ids." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paymentRefs</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJy9V1tv2zYUfrZ/xVkRQFabyHG3dV0Sd0lTtMmapF7jtRuGIaAlyiYskSpJxTEG//cdXmTTjtMMe6iRCDLP7TtXHh/9Uk2qdvfp0zY8BfM/OBvAj/hi3k9FNZdsPNHQOY3h7PIahpSUnnjBUsoVzaDmGZUwnFC4PB82x4bjI82Y0pKNas0EVyByyFlBFZS10iCpJoyDRjkyErcU0qU1LjRqSbyh4xXBfAIYcFyRdErGFNyHVFVyKTJaWFrhkHhagA06E62rg253NpslosIjUUu0J+S464VUt2R6z39JMEQxquy22ydVdXBQI70T4au1Fe1C5F7iw3YTSXsAuZBAigJImoqaa8iIJlZPWhCl4MQf0ztNeYbfvUb4Z6nnuqIpy+c2SpqMCnwKqF14j2+JBBNfPrZKW1U9QsSwg/Sh5e3DE2/6yeFWlZVkJZFzmNK5V5x8VbPnf4/sfYi87huWRYetbve7o0d1NxjOiLokfA4YBZEyYstjZZlISebrhideoO+InXarFV3SckRlBP1Xq8NWZEN7RUpqCQ3TLtJifAQp+kQKllnTIGusyq/av3XMdA1A4P8mCMExpXrjuBUZQw4Xr0sqWWqBIaGkSmEdO9oHXswBGRC4QnFqakjMaOaYY/uMCsrHevKwBXcYjaieUcqxSHv414u32buyplxXjih4EegB4RnKQDohkqTaoCkEHwcw7COqyLxEb28kzTcD8b9QvmxQSvqlZpK68GpZ023oB846Tpv8IRde3nNhzYOgKN5RTqXJMwHvFc6pnErKU9pMyGOcXLXkvkHgBAcg+1LjVCHa9SkrqZ11NU9Nee2lmL/4vr5krcSUxlpMl0Iw9ki8e+hdJ8bB0MJGg8FKFTAsEZDopiixahop1aBDHJEiOTUBUJETv9YC8wK5FCVcCJTk2JDpVOEwNVM4o8i2Y4ROjZCZIs+//+HFTy9/fn365u27s1/fXw5++zj89PmPP81YsSo/m36nObuzETC4ZkxPEJmHoScYnIJqBRUVFY6mKRczYDpSOBiMOS+NU+Xs+urDcHgdNaoHm3FTkBJuslxXZrD47Co7ZWVmrYkDCEb8iKQqSUVST7uv8bX7ulaMYwnhlDff32CJpfoU64zp7keaUnaLSroDrDDVXYXfGT/nONRLOzYSoqo7g70kd0i/sKWOHvReWOg71VIUD72Dh0gwt0Jnh+EhBgcT0fG0+BDw9AjW9JmzZ89c5tdUJqhzmaO/TAF09neXGpeUGPagF/9t7C4MKl+7gSYkLbbVv6/qb9IG5rLm02+Ws7Dv7jXc79aNe223ns4oMhHNxP289Jtr/eBgWwvb0ljAbIKLEHRgR0+Y2nuVM0xfZMVwBrqhCOYWQffM3RjMSoi8/mRz7AYoYohjeAX74Ow9knQMo005jkpFbk3uOZ0tlxaW41ea4aKHdZtOaDp1ew3HvQXXO5N7z5osS6PCaVsCQ+kdTzvP4ISvdGZJWEKG0eyPxiyq3tSL7IAJUnWKza92Dctez5xQKYVMtqdToerKh+o8v7IedFZoXFLRtw7DotIhxTeboQXoj/qw7ylmKgWNEgTLUn1OXVRNxu2h2f3C7cHcYx7e5vW45Ur1Oh+uUXcz+uWg5dLufGhkTWo7FkZTYVHOaJFdYLDDuzjYanCzDYHEGJomBCYGV2GV4Ho/dZQgaP0VcH3+ponFsh6XjO580W5v0ZyaOJqM5gR7JmsHCvZ6VnABtMCtfpmbE61pWWlzOZjGMqXaKLO3koGENXUvQq4LcybVqgu3N+Hm6hdWz3qMTnD9HwuRPeK4fyza676Fg1ljqRWYKzNTV42h3DW+IgXzVTU/oFw7WujhEFC2Je3phuBadzqOkDUw/0D3Yb6b3svUWyGNtU5oOuy/GxfUNbKPYQjhBpfwGn95rWXLuP1Ysv7DwESDcbx5STrx2OZh8S817qqv</source>
  </file>
  <file path="app\Lib\MailChimp\_MCAPI.php" generated-path="app.Lib.MailChimp._MCAPI.html" hash="e753f4c36c5e86e7f850b9bc17ebd630" package="app.Lib.MailChimp">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.MailChimp"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends/>
      <name>MCAPI</name>
      <full_name>\MCAPI</full_name>
      <docblock line="22">
        <description>Dummy class that pretends to access the MailChimp API
but actually accesses a local table.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="28" package="global">
        <name>$__useDbConfig</name>
        <full_name>\MCAPI::__useDbConfig</full_name>
        <default>'default'</default>
        <docblock line="28">
          <description>Which database config to use.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="34" package="global">
        <name>$__errorMessage</name>
        <full_name>\MCAPI::__errorMessage</full_name>
        <default>''</default>
        <docblock line="34">
          <description>The last error message.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="40" package="global">
        <name>$__errorCode</name>
        <full_name>\MCAPI::__errorCode</full_name>
        <default>0</default>
        <docblock line="40">
          <description>The last error code.</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="46" package="global">
        <name>$__dbSource</name>
        <full_name>\MCAPI::__dbSource</full_name>
        <default>null</default>
        <docblock line="46">
          <description>The datasource to query.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="\DataSource" variable="">
            <type>\DataSource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="global">
        <name>__construct</name>
        <full_name>\MCAPI::__construct()</full_name>
        <docblock line="54">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$apiKey">
            <type>string</type>
          </tag>
          <tag name="param" line="54" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$secure">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$apiKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$secure</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="global">
        <name>setConfig</name>
        <full_name>\MCAPI::setConfig()</full_name>
        <docblock line="63">
          <description>Set which database config we should use.</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;The name of the config to use.&lt;/p&gt;" type="string" variable="$configName">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$configName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="global">
        <name>lists</name>
        <full_name>\MCAPI::lists()</full_name>
        <docblock line="75">
          <description>Get data about one or more lists.</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;Only return lists that match these filters.&lt;/p&gt;" type="" variable="$filters"/>
          <tag name="param" line="75" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$start">
            <type>int</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$limit">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filters</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>25</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="global">
        <name>listSubscribe</name>
        <full_name>\MCAPI::listSubscribe()</full_name>
        <docblock line="130">
          <description>Subscribe an e-mail address to a list.</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;The id of the list to subscribe to.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;The e-mail address to subscribe.&lt;/p&gt;" type="string" variable="$emailAddress">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$mergeVars">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$emailType">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$doubleOption">
            <type>bool</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$updateExisting">
            <type>bool</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$replaceInterests">
            <type>bool</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$sendWelcome">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$emailAddress</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mergeVars</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$emailType</name>
          <default>'html'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$doubleOption</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$updateExisting</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$replaceInterests</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sendWelcome</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="global">
        <name>listUnsubscribe</name>
        <full_name>\MCAPI::listUnsubscribe()</full_name>
        <docblock line="146">
          <description>Unsubscribe an e-mail address from a list.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The id of the list to unsubscrbe from.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;The e-mail address to unsubscribe.&lt;/p&gt;" type="string" variable="$emailAddress">
            <type>string</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$deleteMember">
            <type>bool</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$sendGoodbye">
            <type>bool</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$sendNotify">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$emailAddress</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$deleteMember</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sendGoodbye</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sendNotify</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="global">
        <name>listMembers</name>
        <full_name>\MCAPI::listMembers()</full_name>
        <docblock line="161">
          <description>List details about e-mail addresses subscribed to a list.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="&lt;p&gt;The list to get subscribers from.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$status">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$since">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$start">
            <type>int</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$limit">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>'subscribed'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$since</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>100</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="169" package="global">
        <name>__initDbSource</name>
        <full_name>\MCAPI::__initDbSource()</full_name>
        <docblock line="169">
          <description>Create the DatabaseSource object.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="178" package="global">
        <name>__runQuery</name>
        <full_name>\MCAPI::__runQuery()</full_name>
        <docblock line="178">
          <description>Run an SQL query, return the results in a manner consistent with the real API.</description>
          <long-description></long-description>
          <tag name="param" line="178" description="&lt;p&gt;The query to run.&lt;/p&gt;" type="string" variable="$query">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\Controller\Component\AuthUtilComponent.php" generated-path="app.Controller.Component.AuthUtilComponent.html" hash="bfe8efad54fb1c946d6399a50547b92d" package="app.Controller.Component">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller.Component"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="app.Controller.Component">
      <extends>\Component</extends>
      <name>AuthUtilComponent</name>
      <full_name>\AuthUtilComponent</full_name>
      <docblock line="25">
        <description>AuthUtil component allows one to check to see if an action is
authorized on any controller. It is slow and it is sad about this.</description>
        <long-description>(and its days are numbered)</long-description>
        <tag name="package" line="25" description="app.Controller.Component"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="app.Controller.Component">
        <name>$components</name>
        <full_name>\AuthUtilComponent::components</full_name>
        <default>array('Auth')</default>
        <docblock line="31">
          <description>List of components used by this component.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="37" package="app.Controller.Component">
        <name>$__controllers</name>
        <full_name>\AuthUtilComponent::__controllers</full_name>
        <default>array()</default>
        <docblock line="37">
          <description>Cached list of created controllers, makes things slighlty more speedy.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="43" package="app.Controller.Component">
        <name>$__currentController</name>
        <full_name>\AuthUtilComponent::__currentController</full_name>
        <default>null</default>
        <docblock line="43">
          <description>The current controller this component is attached to.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\[type]" variable="">
            <type>\[type]</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="app.Controller.Component">
        <name>initialize</name>
        <full_name>\AuthUtilComponent::initialize()</full_name>
        <docblock line="51">
          <description>Called before the Controller::beforeFilter().</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;Controller with components to initialize&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="link" line="51" description="http://book.cakephp.org/2.0/en/controllers/components.html#Component::initialize" link="http://book.cakephp.org/2.0/en/controllers/components.html#Component::initialize"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="app.Controller.Component">
        <name>isAuthorized</name>
        <full_name>\AuthUtilComponent::isAuthorized()</full_name>
        <docblock line="64">
          <description>Check to see if the currently logged in user is authorized to perform
an action on a certain controller (with certain params).</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;The name of the controller the user wants to act on.&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;The action the user wants to perform.&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;Any parameters for the action.&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="64" description="True if user is authorized to perform the action, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="106" package="app.Controller.Component">
        <name>__getController</name>
        <full_name>\AuthUtilComponent::__getController()</full_name>
        <docblock line="106">
          <description>Given the name of a controller, return an instance of said controller
in the fastest method possible.</description>
          <long-description></long-description>
          <tag name="param" line="106" description="&lt;p&gt;The name of the controller.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="106" description="A controller instance if we can find or create one, null otherwise." type="\Controller|null">
            <type>\Controller</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\Controller\Component\NavComponent.php" generated-path="app.Controller.Component.NavComponent.html" hash="388c1b6d889fa0bbad11379feed89262" package="app.Controller.Component">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller.Component"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="global">
      <extends>\Component</extends>
      <name>NavComponent</name>
      <full_name>\NavComponent</full_name>
      <docblock line="24">
        <description>NavComponent exists to check if a navigation link is
allowed (by checking if the current user is authorized to perform it),
allowed links are added to a list which can then be rendered in the view.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="30" package="global">
        <name>$components</name>
        <full_name>\NavComponent::components</full_name>
        <default>array('AuthUtil')</default>
        <docblock line="30">
          <description>The list of components this component relies on.</description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="36" package="global">
        <name>$__allowedActions</name>
        <full_name>\NavComponent::__allowedActions</full_name>
        <default>array()</default>
        <docblock line="36">
          <description>List of allowed actions.</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="global">
        <name>addExternal</name>
        <full_name>\NavComponent::addExternal()</full_name>
        <docblock line="44">
          <description>Add a link to an external site</description>
          <long-description></long-description>
          <tag name="param" line="44" description="&lt;p&gt;The display-text for the link.&lt;/p&gt;" type="string" variable="$text">
            <type>string</type>
          </tag>
          <tag name="param" line="44" description="&lt;p&gt;The URL of the link.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="44" description="&lt;p&gt;The class the link should be rendered with.&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="global">
        <name>add</name>
        <full_name>\NavComponent::add()</full_name>
        <docblock line="57">
          <description>Attempt to add a link, will only be added if the user is authorized
to perform the action the URL is pointing at.</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;The display-text for the link.&lt;/p&gt;" type="string" variable="$text">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The name of the controller the link refers to.&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The action the link refers to.&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The params to be passed to the action.&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The class the link should be rendered with.&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="global">
        <name>getAllowedActions</name>
        <full_name>\NavComponent::getAllowedActions()</full_name>
        <docblock line="67">
          <description>Get the list of allowed actions</description>
          <long-description></long-description>
          <tag name="return" line="67" description="The list of allowed actions for the current user." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJy1Vclu2zAUPMdf8Q4GJAeyfOolbdIYQdEUSIqgdc4BLdEWEYokSMquW+Tf+7iIllM7hxY1fOAyfMvMkPrwUTVqNDs/H4H7w8PtA7yL4xupdpqtGwv5zQRu77/DgpI2bt6xigpDa+hETTUsGgr3Xxb9skN8ozUzVrNlZ5kUBuQKVoxTA21nLGhqCRNg8RxZyg2FKmUT0mKUMia63m+436AMuFakeiZrCuFHlCpvpLBack41DlslBRXWQ3koLEIHpULeWKsuZrPtdltKhUuy05he6vUsHjKzltlpnJRI2ARDzkajuVIXFx3u51lKlhWQ7YvIJu9Ho0gvfCWbBAP6A8kxYCVUDa2ega2AgCAbtiaOLuBM4KJx5wjncotM58tdADOxdnjHXdVp7cJhFRrhQDrbSM1+IhxDK6pXUrfA7KSAYSgXHcEaya/rgCW4iLpsG1Y1UBEvjYAlRaWcwgiKcm0Y3ZaegIoTY163ZRFuYL/yK/XvPOJzoBOqfh8paLDuNMd0nKFJpCi9bhuisU5Ndj7jmeqWqAOMB+cvw34O2Rybf7SMZ+Boj1nvYsa+dVJ5Ox6PrtmGWArjp6cInwd0SjIIPK9rTxrq5OgTvnctCAfDLI3+1KQFdwlQsbFFgCcB74XiZDf1CyiQp9UFKo+c6jT3hx6/3bk23oIGPRw4jHosmEZ2vD4Qc8tsUx5wuuqEb9ZZ4lNsJfdFF76Kok9wCVk2QV3PzjwnT6ozDQJRxunVa+KKJI4LlMHlFcSQGYYMcx8787HDQkgzcSqevez5tpa2ynqyE/UFNsI5uoXvXHvBzfFu/HknXJjBtfCPT+jZRoYRriQT1vFJ7DGS/07FKj0J/qwgLe3VHGwlwTRdUe1eh2OxYsmLw+pPn/MKAIz9LPgjDpGLpZsYE96APSH/117JVvvei76vIhWa7twR56HEveX6Wz+9YmaepM7fjD0JUf7NwPsE0baDhFlIGDb65FlIHhbD+LTx0fkD83+mNvJ99DXzauEntdMiyr04DU5mHX48Toi1pnZ+wEcemIu5TpAW7u3Lb8tlvAc=</source>
  </file>
  <file path="app\Model\Behavior\KrbAuthBehavior.php" generated-path="app.Model.Behavior.KrbAuthBehavior.html" hash="3dde05b6d673130a52050b03df76503d" package="app.Model.Behavior">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model.Behavior"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="global">
      <extends>\ModelBehavior</extends>
      <name>KrbAuthBehavior</name>
      <full_name>\KrbAuthBehavior</full_name>
      <docblock line="25">
        <description>Behaviour that allows a model access to the KrbAuth interface.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="31" package="global">
        <name>$__krbObj</name>
        <full_name>\KrbAuthBehavior::__krbObj</full_name>
        <default>null</default>
        <docblock line="31">
          <description>KrbAuth object.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="\KrbAuth" variable="">
            <type>\KrbAuth</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="global">
        <name>setup</name>
        <full_name>\KrbAuthBehavior::setup()</full_name>
        <docblock line="40">
          <description>Perform initial setup.</description>
          <long-description></long-description>
          <tag name="param" line="40" description="&lt;p&gt;The model we're being attached to.&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="40" description="&lt;p&gt;Any settings passed from the model.&lt;/p&gt;" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="link" line="40" description="http://book.cakephp.org/2.0/en/models/behaviors.html#creating-a-behavior-callback" link="http://book.cakephp.org/2.0/en/models/behaviors.html#creating-a-behavior-callback"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="global">
        <name>krbCheckPassword</name>
        <full_name>\KrbAuthBehavior::krbCheckPassword()</full_name>
        <docblock line="55">
          <description>Check to see if the password is correct.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;The model we're attached to.&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;The password to check.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="55" description="True if password is correct (or useDummy is true), false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="67" package="global">
        <name>krbAddUser</name>
        <full_name>\KrbAuthBehavior::krbAddUser()</full_name>
        <docblock line="67">
          <description>Add a new user to the KrbAuth system.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;The model we're attached to.&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;The username to create.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="67" description="&lt;p&gt;The password to create.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="67" description="True if creation succeeded (or useDummy is true), false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="global">
        <name>krbDeleteUser</name>
        <full_name>\KrbAuthBehavior::krbDeleteUser()</full_name>
        <docblock line="78">
          <description>Delete an existing user from the KrbAuth system.</description>
          <long-description></long-description>
          <tag name="param" line="78" description="&lt;p&gt;The model we're attached to.&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="78" description="&lt;p&gt;The username to delete.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="78" description="True if deletion succeeded (or useDummy is true), false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="global">
        <name>krbChangePassword</name>
        <full_name>\KrbAuthBehavior::krbChangePassword()</full_name>
        <docblock line="90">
          <description>Update the users password.</description>
          <long-description></long-description>
          <tag name="param" line="90" description="&lt;p&gt;The model we're attached to.&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="90" description="&lt;p&gt;The username to update.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="90" description="&lt;p&gt;The new password to use.&lt;/p&gt;" type="string" variable="$newPass">
            <type>string</type>
          </tag>
          <tag name="return" line="90" description="True if password update succeeded (or useDummy is true), false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newPass</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="global">
        <name>krbUserExists</name>
        <full_name>\KrbAuthBehavior::krbUserExists()</full_name>
        <docblock line="101">
          <description>Detect if a user exists.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;The model we're attached to.&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="101" description="True if user exists (or useDummy is true), false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzFVdtu20YQfZa+YoAIEGVYZFEgL0qTxlUKpGiMCqnzbCzJobgRuUvsxapQ5N87u1xSpCo7FweOAAHk7lzOnDkz/OXXpmymycXFFC7A/TdvN/CcHtzzWjYHxbelgWi9gLfXf8MNsjpcvuMZCo05WJGjgpsS4fqPm+7YWbzHnGujeGoNl0KDLKDgFWqorTag0DAuwJAfS+UdQtZnE9JQlDgken28cL8BDHjdsGzHtgjtjzVNfC1zrOLfsGR3XCpvVLWQgtEAJESlMc0qSfb7fSwbOpJWUWKptklw0knNzTK8xMTVgkIm0+lV06xWlu6juc/YJZxfQnswX7wYWW3K5j0yYspZrKUo+NYqdFYDo7WsGylQmGBklKwqchlb/anS51fWlM7oHU8TevfZQhcDFKuIW2aAVZXca2BQO1jAsgy1BiM98+TqIgEXBlXBWtKTaVYxsgmXXWmA/xgUuYZRwfBvn7gLJtOPmJnYc3/HVHfuI08axe+YQZjd3u5U+lf6EV6CsFV1xL8hJFLVhIkbzirQaGwTd/qklitWtxhg1tbktNc+7XGuEFLkYgvMGJaVJFAj44EnU4odYEZRDVlpuBIH6F8aqps8CiVrz4+PGgcViR0EvaRS7uKM7ZAE4dXyc/xTgiLx5jpJAzc6Lk1dPcsUMhd+yZbdzTKjtqQk3kCKTUliUFiRuVFpS46GNV4OEL9sa4gWCyJ/MunFtFpl/jGa51gwWzkVCdxDLz3yeDF2qCTLozk1wmmp83JamkxmpuR6+WrYJorVaS8aBKHy2iC3pE8lWE2yvoSzBoal994prOq5R/ip18K6xGznxKoRgRe+J65He6ly4Jp2hlKd1r5UHffowm0qUs2sq8H79S8EIXNYznn0gG6G6MYetO2sEkDCIUDK+mLOFAIRTRQlfWPr+uDODdkSYQWraF1JKl/tuQ5T+j/ZEIuesE0IfKqgrprLI+ZWQgHdScuXr7JRtLP+o3Zd5TktGqcTZ3q6ZPRBG6yfpldu5PDrmjVwOdetdordcFpaoZgTqMc2i+j6QKAf3SYW4ny+QW+wQlq+TNAyp2+zY8R3ql94P6BXucd0P/H+/vsS39LwEPcPE54f/Y8eI6I/NLn7yplQq+6l9iSUWp/9nAvNpptn7+HmdDgBVj/Qhd6wjf0dm7EumdjiF+ysgP1zK2sU7Zz/yUQYt3epQtaOgh8M/dRflHOUD+A8mmSn1d99qG9TvD36nyj+038EfQ8c</source>
  </file>
  <file path="app\Controller\AppController.php" generated-path="app.Controller.AppController.html" hash="1305efdf09f69afab4f56b52f5f23fa2" package="app.Controller">
    <docblock line="0">
      <description>Application level Controller</description>
      <long-description>Application-wide logic.

PHP 5

Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="global">
      <extends>\Controller</extends>
      <name>AppController</name>
      <full_name>\AppController</full_name>
      <docblock line="28">
        <description>Application Controller</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="plugins\MemberVoice\Model\MemberVoiceStatus.php" generated-path="plugins.MemberVoice.Model.MemberVoiceStatus.html" hash="d0f48e2070fde1a5a69540e2f1cd9581" package="plugins.MemberVoice.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppModel</extends>
      <name>MemberVoiceStatus</name>
      <full_name>\MemberVoiceStatus</full_name>
      <docblock line="19">
        <description>Model for all status data.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$useTable</name>
        <full_name>\MemberVoiceStatus::useTable</full_name>
        <default>'statuses'</default>
        <docblock line="25">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$tablePrefix</name>
        <full_name>\MemberVoiceAppModel::tablePrefix</full_name>
        <default>"mv_"</default>
        <docblock line="25">
          <description>Prefix for the MemberVoice tables.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$mvUserModel</name>
        <full_name>\MemberVoiceAppModel::mvUserModel</full_name>
        <default>'Member'</default>
        <docblock line="31">
          <description>Name of the model in the app that contains user data.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJxVUMtqwzAQPNdfMYdC0kDtUy990JRcUqghNKF32V7borIkpFXSUPrvlR9JU4HEand2ZpjHZ9vaJFssEizQ3816g7tY9PXK2KOTTcuYr26wzrfYkeim4ZssSXuqEHRFDruWkL/uTu0e8U6V9OxkEVga7WFq1FKRRxc8wxELqcFxTxRmTyjPatpwZEknoeXfoD8XNrC0ovwUDWE8VoVGap/m1BXkPkxPkpuK1IBVo7MJe+EV85bZ3mfZ4XBIjY0tE1xcNa7JpiWfdZJvp08aI7uJlFlyCm4QQW0chFLwLDh4VIJFOsBKJbzHhavtiKAvJl39m7xYO5J9n8m3lkpZH4ekWBQqvgbBD/lguRcOfci6GaSubCiiTVxHwG4AP2E2GiI/e0h+fgGAapxu</source>
  </file>
  <file path="app\index.php" generated-path="app.index.html" hash="1a7ce1bc184768c2551c5c3ae652ae5a" package="app">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="package" line="0" description="app"/>
      <tag name="since" line="0" description="CakePHP(tm) v 0.10.0.1076"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <source>eJytUU1vwjAMvfMrfONDW8oO2yQ2aSAoGhLbqsJlpym0LmRt4yxNKfv3S0rpQLvOh8h+9nt27McntVMdbzDowACC5wBureP8KU/Rxj2T92EEIVcihhnuMSOVozQw1zzHinQKvZ0xauR5kWVYMUZ6268VSH1rsd0Z6EX9Wg9WlJiKa4Q5lTLmRpC8goWM2IVI0iZPWk5uKSKUBcZgk6hhvUN4WaxPsKuYk4akzDKI2s5cxpAdK0DIhHTeNFUZcosViGCs0nIx9V9XPjMH45RCjEVhtNiUrroASiARGRaQl4UBjYYLWfP4hvZ41k+Ssd1YM/L4N+HsHxcC40zIFFr7e4KLAwaaPjGqvzZWPEr5FhsiV6pGCyEjbOXOuXsYspshc8/9XdP6uNCjnR2hHbqqKkbKQlRquw47jteQCi8X5roJmJ3V/cbraPwqhV1Dt8KNJjJdYDBbhP50/Ra+f6z8YBJOrGvRrrDnPzhm96HzAwxR308=</source>
  </file>
  <file path="app\Model\AppModel.php" generated-path="app.Model.AppModel.html" hash="ff5666f69b01f1207d7ba1b8c1f030c3" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\Model</extends>
      <name>AppModel</name>
      <full_name>\AppModel</full_name>
      <docblock line="21">
        <description>Application model for Cake.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <source>eJxNUMFugzAMvecr3q2ANnLahU1aKy6dNKRq4wdSMBAVSJSEsWnavy8ButWSJdvPz8/207PuNONJwpAg+Ol4woMPQpwr/WVk2zlEeYxj8Y6SxLCBr7Ki0VKNaazJoOwIxUt5LYeON6qldUaeJyfVaKEaNLIni2GyDoackCOc54mz+iBUf2qjcn5Kugnt/4FgN2tgr0V1ES1hNaF1Wqia+gXr10027GY3RJ1zOuN8nudUaV9Sk/F6yrR8I1k+SHe/Jal/UexHcsYOWmfZ5PFotwjt7rAF8SO7vtE3eaYIR2MIIBplkIvLchJnVS+sDV0LE/TpaKwt1uyb/bBfVC18cw==</source>
  </file>
  <file path="app\View\Helper\TinymceHelper.php" generated-path="app.View.Helper.TinymceHelper.html" hash="14a58176f3937148efab42436d17c606" package="app.View.Helper">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.View.Helper"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppHelper</extends>
      <name>TinymceHelper</name>
      <full_name>\TinymceHelper</full_name>
      <docblock line="21">
        <description>Helper to output TinyMCE TextArea and Input fields.</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$helpers</name>
        <full_name>\TinymceHelper::helpers</full_name>
        <default>array('Js', 'Html', 'Form')</default>
        <docblock line="27">
          <description>List of helpers this helper uses.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="33" package="global">
        <name>$__script</name>
        <full_name>\TinymceHelper::__script</full_name>
        <default>false</default>
        <docblock line="33">
          <description>If this is true, then the script has been loaded and we don't need to load it again.</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="42" package="global">
        <name>__build</name>
        <full_name>\TinymceHelper::__build()</full_name>
        <docblock line="42">
          <description>Adds the tiny_mce.js file and constructs the options</description>
          <long-description></long-description>
          <tag name="param" line="42" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="&lt;p&gt;Array of TinyMCE attributes for this textarea&lt;/p&gt;" type="array" variable="$tinyoptions">
            <type>array</type>
          </tag>
          <tag name="return" line="42" description="JavaScript code to initialise the TinyMCE area" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tinyoptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="global">
        <name>textarea</name>
        <full_name>\TinymceHelper::textarea()</full_name>
        <docblock line="84">
          <description>Creates a TinyMCE textarea.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="84" description="&lt;p&gt;Array of HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="84" description="&lt;p&gt;Array of TinyMCE attributes for this textarea.&lt;/p&gt;" type="array" variable="$tinyoptions">
            <type>array</type>
          </tag>
          <tag name="param" line="84" description="&lt;p&gt;The preset options to use.&lt;/p&gt;" type="string" variable="$preset">
            <type>string</type>
          </tag>
          <tag name="return" line="84" description="An HTML textarea element with TinyMCE" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tinyoptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$preset</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="108" package="global">
        <name>input</name>
        <full_name>\TinymceHelper::input()</full_name>
        <docblock line="108">
          <description>Creates a TinyMCE input.</description>
          <long-description></long-description>
          <tag name="param" line="108" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="108" description="&lt;p&gt;Array of HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="108" description="&lt;p&gt;Array of TinyMCE attributes for this input.&lt;/p&gt;" type="array" variable="$tinyoptions">
            <type>array</type>
          </tag>
          <tag name="param" line="108" description="&lt;p&gt;The preset of options to user.&lt;/p&gt;" type="string" variable="$preset">
            <type>string</type>
          </tag>
          <tag name="return" line="108" description="An HTML input element with TinyMCE" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tinyoptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$preset</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="129" package="global">
        <name>__preset</name>
        <full_name>\TinymceHelper::__preset()</full_name>
        <docblock line="129">
          <description>Creates a preset for TinyOptions</description>
          <long-description></long-description>
          <tag name="param" line="129" description="&lt;p&gt;Name of the preset to use.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="129" description="Array of preset data." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\Model\MailingList.php" generated-path="app.Model.MailingList.html" hash="2063c07aa85ca882529572a6334d2842" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="23" package="global">
      <extends>\AppModel</extends>
      <name>MailingList</name>
      <full_name>\MailingList</full_name>
      <docblock line="23">
        <description>Model for all mailing list data</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="global">
        <name>$useTable</name>
        <full_name>\MailingList::useTable</full_name>
        <default>false</default>
        <docblock line="29">
          <description>We don't use a table, we use the MCAPI wrapper to get data instead.</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="35" package="global">
        <name>$__apiKey</name>
        <full_name>\MailingList::__apiKey</full_name>
        <default>''</default>
        <docblock line="35">
          <description>The api key.</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="41" package="global">
        <name>$__api</name>
        <full_name>\MailingList::__api</full_name>
        <default>null</default>
        <docblock line="41">
          <description>The api object.</description>
          <long-description></long-description>
          <tag name="var" line="41" description="" type="\MCAPI" variable="">
            <type>\MCAPI</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="global">
        <name>__construct</name>
        <full_name>\MailingList::__construct()</full_name>
        <docblock line="50">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;The id to start the model on.&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;The table to use for this model.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;The connection name this model is connected to.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="global">
        <name>listMailinglists</name>
        <full_name>\MailingList::listMailinglists()</full_name>
        <docblock line="75">
          <description>List summary information about all mailing lists.</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;If true use the cached result if available.&lt;/p&gt;" type="bool" variable="$useCache">
            <type>bool</type>
          </tag>
          <tag name="return" line="75" description="An array of mailing list data." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$useCache</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="global">
        <name>getMailinglist</name>
        <full_name>\MailingList::getMailinglist()</full_name>
        <docblock line="96">
          <description>Get information about a specific mailing list.</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;The id of the list to get information about.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="96" description="&lt;p&gt;If true, use the cached result if available.&lt;/p&gt;" type="bool" variable="$useCache">
            <type>bool</type>
          </tag>
          <tag name="return" line="96" description="Array of data about a list." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="96" description="MailingList::listMailinglists." link="MailingList::listMailinglists."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useCache</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="global">
        <name>listSubscribers</name>
        <full_name>\MailingList::listSubscribers()</full_name>
        <docblock line="116">
          <description>Get a list of the subscribers to a mailing list.</description>
          <long-description></long-description>
          <tag name="param" line="116" description="&lt;p&gt;The id of the list to get information about.&lt;/p&gt;" type="int" variable="$listId">
            <type>int</type>
          </tag>
          <tag name="param" line="116" description="&lt;p&gt;If true, use the cached result if available.&lt;/p&gt;" type="bool" variable="$useCache">
            <type>bool</type>
          </tag>
          <tag name="return" line="116" description="List of subscriber information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$listId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useCache</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="136" package="global">
        <name>subscribe</name>
        <full_name>\MailingList::subscribe()</full_name>
        <docblock line="136">
          <description>Subscribe an e-mail to a list.</description>
          <long-description></long-description>
          <tag name="param" line="136" description="&lt;p&gt;The id of the list to subscribe to&lt;/p&gt;" type="int" variable="$listId">
            <type>int</type>
          </tag>
          <tag name="param" line="136" description="&lt;p&gt;The email address to subscribe.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="return" line="136" description="True if email was subscribed successfully." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$listId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="global">
        <name>unsubscribe</name>
        <full_name>\MailingList::unsubscribe()</full_name>
        <docblock line="150">
          <description>Unsubscribe an e-mail to a list.</description>
          <long-description></long-description>
          <tag name="param" line="150" description="&lt;p&gt;The id of the list to unsubscribe from&lt;/p&gt;" type="int" variable="$listId">
            <type>int</type>
          </tag>
          <tag name="param" line="150" description="&lt;p&gt;The email address to unsubscribe from.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="return" line="150" description="True if email was unsubscribed successfully." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$listId</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="162" package="global">
        <name>errorCode</name>
        <full_name>\MailingList::errorCode()</full_name>
        <docblock line="162">
          <description>Get the last error code that occurred.</description>
          <long-description></long-description>
          <tag name="return" line="162" description="The last error code that occurred." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="171" package="global">
        <name>errorMsg</name>
        <full_name>\MailingList::errorMsg()</full_name>
        <docblock line="171">
          <description>Get the last error message.</description>
          <long-description></long-description>
          <tag name="return" line="171" description="The last error message." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="183" package="global">
        <name>isEmailAddressSubscriber</name>
        <full_name>\MailingList::isEmailAddressSubscriber()</full_name>
        <docblock line="183">
          <description>Test to see if a certain e-mail address is subscribed to a certain list.</description>
          <long-description></long-description>
          <tag name="param" line="183" description="&lt;p&gt;The e-mail address to test.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="param" line="183" description="&lt;p&gt;The id of the list to test.&lt;/p&gt;" type="string" variable="$listId">
            <type>string</type>
          </tag>
          <tag name="param" line="183" description="&lt;p&gt;If true use the cached values from MailChimp.&lt;/p&gt;" type="bool" variable="$useCache">
            <type>bool</type>
          </tag>
          <tag name="return" line="183" description="True if email is subscribed to a list, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$listId</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useCache</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="202" package="global">
        <name>getListsAndSubscribeStatus</name>
        <full_name>\MailingList::getListsAndSubscribeStatus()</full_name>
        <docblock line="202">
          <description>Get details for all mailing lists, including if an email is subscribed to that list or not.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="&lt;p&gt;The e-mail address to check.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="param" line="202" description="&lt;p&gt;If true use the cached values from MailChimp.&lt;/p&gt;" type="bool" variable="$useCache">
            <type>bool</type>
          </tag>
          <tag name="return" line="202" description="An array of information about all lists." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$useCache</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="220" package="global">
        <name>updateSubscriptions</name>
        <full_name>\MailingList::updateSubscriptions()</full_name>
        <docblock line="220">
          <description>Make it so that an email is only subscribed to certain lists.</description>
          <long-description></long-description>
          <tag name="param" line="220" description="&lt;p&gt;The email address.&lt;/p&gt;" type="string" variable="$email">
            <type>string</type>
          </tag>
          <tag name="param" line="220" description="&lt;p&gt;A list of list ids that the email address should be subscribed to, address will be unsubscribed from any list not in $subscriptions.&lt;/p&gt;" type="" variable="$subscriptions"/>
          <tag name="return" line="220" description="Array listing the actions attempted and if they were successful or not." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$email</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subscriptions</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="258" package="global">
        <name>__getCacheName</name>
        <full_name>\MailingList::__getCacheName()</full_name>
        <docblock line="258">
          <description>Get the key for the cached value.</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;The name of the function called.&lt;/p&gt;" type="string" variable="$functionName">
            <type>string</type>
          </tag>
          <tag name="param" line="258" description="&lt;p&gt;Params passed to the function (will be part of the function name).&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="258" description="Unique string for a function and params that is used as the key for the cache dictionary." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$functionName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="272" package="global">
        <name>__cacheResult</name>
        <full_name>\MailingList::__cacheResult()</full_name>
        <docblock line="272">
          <description>Write a result to the cache.</description>
          <long-description></long-description>
          <tag name="param" line="272" description="&lt;p&gt;The key the result should be stored with.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="272" description="&lt;p&gt;The result to be stored.&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="282" package="global">
        <name>__getCachedResult</name>
        <full_name>\MailingList::__getCachedResult()</full_name>
        <docblock line="282">
          <description>Read a result from the cache.</description>
          <long-description></long-description>
          <tag name="param" line="282" description="&lt;p&gt;The key the result should be read from.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="282" description="&lt;p&gt;The stored result, or null if it doesn't exist.&lt;/p&gt;" type="mixed" variable="$data">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="291" package="global">
        <name>__clearMailchimpCache</name>
        <full_name>\MailingList::__clearMailchimpCache()</full_name>
        <docblock line="291">
          <description>Clear some data from the cache</description>
          <long-description></long-description>
          <tag name="param" line="291" description="&lt;p&gt;The key to clear&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\Controller\Component\Auth\HmsAuthorize.php" generated-path="app.Controller.Component.Auth.HmsAuthorize.html" hash="d08b0ecb5e9ae84ac513163a7dd48543" package="app.Controller.Component.Auth">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller.Component.Auth"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="app.Controller.Component.Auth">
      <extends>\BaseAuthorize</extends>
      <name>HmsAuthorize</name>
      <full_name>\HmsAuthorize</full_name>
      <docblock line="26">
        <description>HmsAuthorize is basically the same as the CakPHP ControllerAuthorize
in that it calls the 'isAuthorized' method of the controller. However
HmsAuthorize doesn't discard the CakeRequest object, as it is used in the
controller instead of $this-&gt;request.</description>
        <long-description></long-description>
        <tag name="package" line="26" description="app.Controller.Component.Auth"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="app.Controller.Component.Auth">
        <name>controller</name>
        <full_name>\HmsAuthorize::controller()</full_name>
        <docblock line="35">
          <description>Accessor to the controller object.</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;null to get, a controller to set.&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="35" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="35" description="if controller is non-null but does not have a function called 'isAuthorized'." type="\CakeException">
            <type>\CakeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default>null</default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="app.Controller.Component.Auth">
        <name>authorize</name>
        <full_name>\HmsAuthorize::authorize()</full_name>
        <docblock line="50">
          <description>Check if the user is authorized to access the URL specified in the request.</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;Array of user data.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;The request the user is attempting to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="50" description="True if user is authorized to perform the request, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
    </class>
    <source>eJyFVF1v2jAUfW5+xZ2ElFABedoL3boyNIlJrVR17BkZ50K8JrZnO4Vu6n/ftROC060aaiVzfT/OPeeYD590qZP88jIB/wf3q3t4352XSj8bsS8dZMsxrO6+wRpZ3V3eCo7SYgGNLNDAukS4+7o+hX3GAxbCOiO2jRNKWlA72IkKLdSNdWDQMSHBUR3bqicE3k+TylGXWTfo5nzhPxEMuNGMP7I9QvthWs+WSjqjqgoNHWutJEo3WzSuDPlVi67Lj/BCVjqn53l+OBxmSlNINYYwKLPPuyKb18JNuy8zYm1MLfMkWWg9nzd0n6WfmUU/SxnxC9MJpGc0eY8m9xnp+CrpWIdVbfsiEBa2zArOquo5kGNZTQzZcF6yR6/PuWtf5/sENpkD4cCXtyWpODcvUqiRzoWXwl/yM1mwUgd8QvMXoEKhlakD0pIzU5xw4AP+bJB0VNsfyN3EQ6TBBL/xpmiV9c3OMyhoHbIwfeRKYafXpm3SS33S839K5gmvmLVDpHh0KAsLAxXgd8/zgnO0Vhlw6tX23RIRDMPqiGYYRbmyqSrfYo9+67gLBS2GLnBD9m6MhFocsQgBVxp1sIG6L0eO2r8JELsBP5asL6dhAD2aQL1/DFAyeh8Mdo3koczLSyQPtZ0FXi50syWPRrl9/+yNhT6GlcbE1MUFAcqiuzYYou9a62zwSI/axkmTV0DGXdVFWBkkHoZbZ5tNkaWcQpsCn/wzidH0S4taV1iT6MCIqGhANu5sPKNRV37SS9L+d6STfFQ2n0erxztRyUtvimWJ/NHr4B1B1g0qsH6W15QF34SE7w+3YDVysRO9ySEy8ck6wIxhzzAKDRfhTKYP3wrm2CA1fkyjrlf4OT2dB8icw5pYlHuPrKbSgd22SlWwNg36jf69jUazU6aOkU9gxyr6DVQUMwdh8Q0r9Y2ysNjkn9Bb8Ts8mQc07h775uy/6fVA0K5d36JV6CX5A7EMOV8=</source>
  </file>
  <file path="app\View\Helper\CurrencyHelper.php" generated-path="app.View.Helper.CurrencyHelper.html" hash="c07645f510ada6e25ae0bceb472a9e3c" package="app.View.Helper">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.View.Helper"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppHelper</extends>
      <name>CurrencyHelper</name>
      <full_name>\CurrencyHelper</full_name>
      <docblock line="21">
        <description>A helper to display currency nicely.</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="global">
        <name>$helpers</name>
        <full_name>\CurrencyHelper::helpers</full_name>
        <default>array('Number')</default>
        <docblock line="27">
          <description>Helpers this helper uses.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="global">
        <name>output</name>
        <full_name>\CurrencyHelper::output()</full_name>
        <docblock line="34">
          <description>Given a number in pence, output the value in GBP, with special styling if the amount is negative.</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;Amount in pence.&lt;/p&gt;" type="int" variable="$pennys">
            <type>int</type>
          </tag>
          <tag name="return" line="34" description="The HTML required to render this amount." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$pennys</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
    </class>
    <source>eJxdUl2P2jAQfCa/YnSiCiBIrpX6wgG9Kw9HpaNCPdTXygRDrCaO6w9oVPHfu04cyjUSyN5dz8zO7uyTylWUjkYRRvC/zWqDj3Tw52Wlai2OucVgOcRq/YotZ2VIvoiMS8P3cHLPNbY5x/rLtgv7im98L4zVYuesqKRBdcBBFNygdMZCc8uEhKV3bFedOLIrm6wsoSSB6PFfwn83MvCoWPaTHTnajymVfBf8nKx4obhuKopWT6i4UYhBbq2apun5fE4qRaHKaWKt9DENj0xaCjsJl4SMGhJkGkVPSk2njvKDmI4tWTxG7LnTcB0+RJ2tT8ibGGwFckQVrEbmtOYyqyEJvaiTBjgrmDFYhlQLBP7bcrk3uDLhzxW5DRgyUZiOxOtKmtZPTINpzeoGvKfcjlpBPw+P5m1yEH915e6t4mdx4hIMssmAxkT+ZHyMylnlbDO0Eysc96nnz5sxzsLmMIpnghUwti6EPEIc2vGWlZMWJFHyI7OEnYThaVaCICz6hC9rajKUBsK2jjbFaQm/SgTqF221Xb/QAv1yQtMCkq1kmF/CxoeWLnnT9MHJzC9haGAQ+IbkZa/XD13NEccP/l5WktevVlOk7yEni9aiyaIbWweAFO/v72n0ZAJtQGsoYhpxxk2M+QIfKNm13QTiSTzE0POQPVecGe5bMTdqjKKG7WEQz4xiEs12zO86CT861LvFOzNLfcmCJFzFNxQX8IJW/T/ga01TEtFfsDiUUPgSXf4CtBFKUQ==</source>
  </file>
  <file path="app\Model\Transactions.php" generated-path="app.Model.Transactions.html" hash="e62533fdea6ecec9af07391b7b298798" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="app.Model">
      <extends>\AppModel</extends>
      <name>Transactions</name>
      <full_name>\Transactions</full_name>
      <docblock line="25">
        <description>Model for all transaction data</description>
        <long-description></long-description>
        <tag name="package" line="25" description="app.Model"/>
      </docblock>
      <constant namespace="" line="27" package="app.Model">
        <name>TYPE_VEND</name>
        <full_name>\Transactions::TYPE_VEND</full_name>
        <value>"VEND"</value>
        <docblock line="27">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="28" package="app.Model">
        <name>TYPE_MANUAL</name>
        <full_name>\Transactions::TYPE_MANUAL</full_name>
        <value>"MANUAL"</value>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="34" package="app.Model">
        <name>$useTable</name>
        <full_name>\Transactions::useTable</full_name>
        <default>'transactions'</default>
        <docblock line="34">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="40" package="app.Model">
        <name>$primaryKey</name>
        <full_name>\Transactions::primaryKey</full_name>
        <default>'transaction_id'</default>
        <docblock line="40">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="46" package="app.Model">
        <name>$belongsTo</name>
        <full_name>\Transactions::belongsTo</full_name>
        <default>array('Member' =&gt; array('className' =&gt; 'Member', 'foreignKey' =&gt; 'member_id', 'type' =&gt; 'inner'))</default>
        <docblock line="46">
          <description>Specify 'belongs to' associations.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="61" package="app.Model">
        <name>getTransactionList</name>
        <full_name>\Transactions::getTransactionList()</full_name>
        <docblock line="61">
          <description>Get a list of transations for a member</description>
          <long-description></long-description>
          <tag name="param" line="61" description="&lt;p&gt;If true, return a query to retrieve a page of the data, otherwise return the data.&lt;/p&gt;" type="" variable="$paginate"/>
          <tag name="param" line="61" description="&lt;p&gt;An array of conditions to decide which member records to access.&lt;/p&gt;" type="array" variable="$conditions">
            <type>array</type>
          </tag>
          <tag name="return" line="61" description="A list of transactions or query to reports a list of transactions" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$paginate</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJyFVO9v0zAQ/Zz8FSdUKe00mk982RisGhMg1jGxgsSnyU0uiUViG9tpiRD/O+cfWdOBoNI698737vnes1++Vo1K85OTFE7A/d29u4MXtHDrK6kGzevGwvxqAe/W97BB1sXkDS9QGCyhFyVq2DQI6/ebMex2fMKSG6v5trdcCgOygoq3aKDrjQWNlnEBlurYVu4QisduQlpCWcZGl4eE+0xowKVixTdWI4QPU2q5liW2PtcGJjE34Qbzxlp1luf7/X4pFYVkr6mf1HUei0zecfs8/ljSiBYEmafpSqmzs57y84yWvld2CllYLM6n+XvLbG+OsuOcfQAqqYG1LVjNhGGFmxGUzLJw7P8cL0+LlhkDm0OxAfxhUZQGRmrwM02TgjIWNl/vrh++XN++gQt45v4/O0+SJM+nACRJyyzpYyUgJ2E07AiPixo6VjRcICgaVMMKPAVHHhQbOhROywL5jrywHZx4pGhRoLJSH7Vfr24/r24cgbAiCk8IcEOgHRM9zWUAQkZNoPMdZ7DHLXAXqKj9wnWUunSWOrAgSoEf2W8c9b3CgleDt5ll2xbd4UigpZ/vjmlwDhW1H2mi+i1pDjPasPGbLyCbyGOy878CK807pgf4hsO/cePGDzg8QX7g5V+wsy22UtROkAxIbVlw5nkcujCt2XDcJBZtJPXw6XlKUmdr7LaoM7h4NY16F92yDn1i3HTqc2RQ5LUgtiHZ+aSjGvJ2ULGMC0FVLrigr4nT36IlgVp6BpxU4cDBq979ECDHt4f8rllHY2I1F+REeO9qenIbPRa9FlTwvUcaNGlIEc2Rng2nP10RB09SuAtE5nTm3XO66rFwTC0nbfwUYEYGLXngtBIxSGCTMHUrSZASYd/woomkowV92tndRFVGqh5o9eTs8aLS2ScHUVJb88eYwtYjaatehHtSo51cmxuqmz8O7fToSKMFFgt6DJJkVnFRflTHuWCExxov6QQjiE1Hje7Jpm/OcmpimjBa3iG8ub6/yqITkoRXcKAXeCRxSlM+5xT/5fbPuKiceWe24eb5K7dlDhk9CfSYHh0gwI9QroowCOJX+hv4VSl8</source>
  </file>
  <file path="app\Controller\Component\Auth\HmsAuthenticate.php" generated-path="app.Controller.Component.Auth.HmsAuthenticate.html" hash="48b4077a995ce21d2038c698bb24828e" package="app.Controller.Component.Auth">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Controller.Component.Auth"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="app.Controller.Component.Auth">
      <extends>\FormAuthenticate</extends>
      <name>HmsAuthenticate</name>
      <full_name>\HmsAuthenticate</full_name>
      <docblock line="28">
        <description>HMS Authenticate.</description>
        <long-description>A specialisation of CakePHP's FormAuthienticate conponent
that allows users to login with either a username or an e-mail
and checking those auth details against records on a KRB server.</long-description>
        <tag name="package" line="28" description="app.Controller.Component.Auth"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="app.Controller.Component.Auth">
        <name>authenticate</name>
        <full_name>\HmsAuthenticate::authenticate()</full_name>
        <docblock line="36">
          <description>Check if the details provided by a user are valid</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The information the user is submitting&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;Not-used&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
          <tag name="return" line="36" description="True if user-supplied values are valid, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>\CakeResponse</type>
        </argument>
      </method>
    </class>
    <source>eJy1VF1v2jAUfSa/4q6qllABedoLXb+GVrXa6CrGnqo+OIlDLBzbsx0Ymvrfd+3EkGqqNk0dIJT449xzzzn2+wtVqSg9OYnA/eD+5h7edc8zqXaarSoLyWwIN/OvsKSk7iY/s5wKQwtoREE1LCsK89tlGHYrFrRgxmqWNZZJYUCWUDJODdSNsaCpJUyAxX0kkxsK+b6akBZRJl2hy8OE+/RowKUi+ZqsKLQfotRkJoXVknOq8bFWUlBhJ1eNrfx63rLr1vf4QlJZq6Zput1uJ1LhkGw0cpB6lXabTFozO+5eJqjaECHTKLpSajptcD6Jr6WuXS2syXJiaTyC+EAo3RNK3aJ4eBp1wvum+htD71dgFM0Z4cwQJ6LTcEbWFF2KDYRyLGxDDUVbwW22FbFAOJdbA8hPG7ASuFyh6ltmK6D4h84RPylITUHimwA6rgnjDoGIAvKK5msmVggnUSeC9aBw3nEDZIUWei9zqQt0WCDap8UHQMANOhAcDDb90SCvaM6JMXBTm74iQH9YKopD0/uJn3sVZ44qsNKHKnBUWm5YgTnNdl2rQDSFDWpadOQ0qcHLuqDfG4r9wLHunlysmSixZqu/Q/YYzIBpMkyERW1+xzHYGKqFON3TnbRj3NiWxOw3WkAmJYelbqjj7FDHplGKMySL9LD+gekISsIRRjrLtsz4hKTRQDUZJhLKRuSeH+kpk/RbCh2NXiA4RB0HgzSFO4rlMSjIx3db0zpz2allQTkuOW4H5u4VzmDmzFrQlTvpu+mUCWaTo7lfcuQC7jGvGQbpANYOLvXukLySaWMP6LcoOYL3a43PS0RJYr8SDxbRmuwSiDHyBfMXTAxn5/vhlsIkFPBzQYPxeUEseYi/4WT8+BCHRV/0R5f8+BGG7uvZozMJM4bapEdtCG/fQp/qmzMQDeetiIPO3ufs1zrz+bxHvbZ4WpK/ZjN6kbjqsOLHIVw8IzRt83KKdJ6CCXgVjDM8ic5dZ0Z3zl9fdOp5/5Pi/1Xww/6Hjmqfy6sJPZMNL0RswWkXbtlwcYR7NiBGe/YB5yl6+gXbX4Cl</source>
  </file>
  <file path="app\Lib\MailChimp\MCAPI.php" generated-path="app.Lib.MailChimp.MCAPI.html" hash="e753f4c36c5e86e7f850b9bc17ebd630" package="app.Lib.MailChimp">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.MailChimp"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends/>
      <name>MCAPI</name>
      <full_name>\MCAPI</full_name>
      <docblock line="22">
        <description>Dummy class that pretends to access the MailChimp API
but actually accesses a local table.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="28" package="global">
        <name>$__useDbConfig</name>
        <full_name>\MCAPI::__useDbConfig</full_name>
        <default>'default'</default>
        <docblock line="28">
          <description>Which database config to use.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="34" package="global">
        <name>$__errorMessage</name>
        <full_name>\MCAPI::__errorMessage</full_name>
        <default>''</default>
        <docblock line="34">
          <description>The last error message.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="40" package="global">
        <name>$__errorCode</name>
        <full_name>\MCAPI::__errorCode</full_name>
        <default>0</default>
        <docblock line="40">
          <description>The last error code.</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="46" package="global">
        <name>$__dbSource</name>
        <full_name>\MCAPI::__dbSource</full_name>
        <default>null</default>
        <docblock line="46">
          <description>The datasource to query.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="\DataSource" variable="">
            <type>\DataSource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="global">
        <name>__construct</name>
        <full_name>\MCAPI::__construct()</full_name>
        <docblock line="54">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$apiKey">
            <type>string</type>
          </tag>
          <tag name="param" line="54" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$secure">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$apiKey</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$secure</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="global">
        <name>setConfig</name>
        <full_name>\MCAPI::setConfig()</full_name>
        <docblock line="63">
          <description>Set which database config we should use.</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;The name of the config to use.&lt;/p&gt;" type="string" variable="$configName">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$configName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="global">
        <name>lists</name>
        <full_name>\MCAPI::lists()</full_name>
        <docblock line="75">
          <description>Get data about one or more lists.</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;Only return lists that match these filters.&lt;/p&gt;" type="" variable="$filters"/>
          <tag name="param" line="75" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$start">
            <type>int</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$limit">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filters</name>
          <default>array()</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>25</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="global">
        <name>listSubscribe</name>
        <full_name>\MCAPI::listSubscribe()</full_name>
        <docblock line="130">
          <description>Subscribe an e-mail address to a list.</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;The id of the list to subscribe to.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;The e-mail address to subscribe.&lt;/p&gt;" type="string" variable="$emailAddress">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$mergeVars">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$emailType">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$doubleOption">
            <type>bool</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$updateExisting">
            <type>bool</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$replaceInterests">
            <type>bool</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$sendWelcome">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$emailAddress</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mergeVars</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$emailType</name>
          <default>'html'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$doubleOption</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$updateExisting</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$replaceInterests</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sendWelcome</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="global">
        <name>listUnsubscribe</name>
        <full_name>\MCAPI::listUnsubscribe()</full_name>
        <docblock line="146">
          <description>Unsubscribe an e-mail address from a list.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The id of the list to unsubscrbe from.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;The e-mail address to unsubscribe.&lt;/p&gt;" type="string" variable="$emailAddress">
            <type>string</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$deleteMember">
            <type>bool</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$sendGoodbye">
            <type>bool</type>
          </tag>
          <tag name="param" line="146" description="&lt;p&gt;Not used.&lt;/p&gt;" type="bool" variable="$sendNotify">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$emailAddress</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$deleteMember</name>
          <default>false</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sendGoodbye</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sendNotify</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="161" package="global">
        <name>listMembers</name>
        <full_name>\MCAPI::listMembers()</full_name>
        <docblock line="161">
          <description>List details about e-mail addresses subscribed to a list.</description>
          <long-description></long-description>
          <tag name="param" line="161" description="&lt;p&gt;The list to get subscribers from.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$status">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="string" variable="$since">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$start">
            <type>int</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;Not used.&lt;/p&gt;" type="int" variable="$limit">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>'subscribed'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$since</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default>0</default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>100</default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="169" package="global">
        <name>__initDbSource</name>
        <full_name>\MCAPI::__initDbSource()</full_name>
        <docblock line="169">
          <description>Create the DatabaseSource object.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="178" package="global">
        <name>__runQuery</name>
        <full_name>\MCAPI::__runQuery()</full_name>
        <docblock line="178">
          <description>Run an SQL query, return the results in a manner consistent with the real API.</description>
          <long-description></long-description>
          <tag name="param" line="178" description="&lt;p&gt;The query to run.&lt;/p&gt;" type="string" variable="$query">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="app\Lib\AutomationDriver\AutomationDriver.php" generated-path="app.Lib.AutomationDriver.AutomationDriver.html" hash="15c58b6ee8ced8ca7262cca49c626325" package="app.Lib.AutomationDriver">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.AutomationDriver"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="global">
      <extends/>
      <name>AutomationDriver</name>
      <full_name>\AutomationDriver</full_name>
      <docblock line="25">
        <description>A wrapper around Selenium to communicate with HMS.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="31" package="global">
        <name>$__rootUrl</name>
        <full_name>\AutomationDriver::__rootUrl</full_name>
        <default></default>
        <docblock line="31">
          <description>URL to the root of HMS.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="37" package="global">
        <name>$__webDriver</name>
        <full_name>\AutomationDriver::__webDriver</full_name>
        <default></default>
        <docblock line="37">
          <description>Selenium driver.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="\PHPWebDriver_WebDriver" variable="">
            <type>\PHPWebDriver_WebDriver</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="43" package="global">
        <name>$__session</name>
        <full_name>\AutomationDriver::__session</full_name>
        <default></default>
        <docblock line="43">
          <description>Selenium session.</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="\PHPWebDriver_WebDriverSession" variable="">
            <type>\PHPWebDriver_WebDriverSession</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="global">
        <name>__construct</name>
        <full_name>\AutomationDriver::__construct()</full_name>
        <docblock line="48">
          <description>Constructor.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="77" package="global">
        <name>connect</name>
        <full_name>\AutomationDriver::connect()</full_name>
        <docblock line="77">
          <description>Create a session and connect to it.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="global">
        <name>disconnect</name>
        <full_name>\AutomationDriver::disconnect()</full_name>
        <docblock line="84">
          <description>Disconnect and close a session.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="global">
        <name>navigateToUrl</name>
        <full_name>\AutomationDriver::navigateToUrl()</full_name>
        <docblock line="93">
          <description>Navigate to a URL.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="&lt;p&gt;The URL to navigate to.&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="93" description="True if navigation is sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="global">
        <name>navigateToHomePage</name>
        <full_name>\AutomationDriver::navigateToHomePage()</full_name>
        <docblock line="102">
          <description>Navigate to the home page.</description>
          <long-description></long-description>
          <tag name="return" line="102" description="True if navigation is sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="global">
        <name>navigateToMemberRegister</name>
        <full_name>\AutomationDriver::navigateToMemberRegister()</full_name>
        <docblock line="110">
          <description>Navigate to the member register page.</description>
          <long-description></long-description>
          <tag name="return" line="110" description="True if navigation is sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="118" package="global">
        <name>pageHasNoErrors</name>
        <full_name>\AutomationDriver::pageHasNoErrors()</full_name>
        <docblock line="118">
          <description>Check to see if the currently loaded page has no errors.</description>
          <long-description></long-description>
          <tag name="return" line="118" description="True if there are no errors, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="128" package="global">
        <name>getElementById</name>
        <full_name>\AutomationDriver::getElementById()</full_name>
        <docblock line="128">
          <description>Get an element onthe currently loaded page by its ID.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="&lt;p&gt;The name of the ID to look for.&lt;/p&gt;" type="string" variable="$id">
            <type>string</type>
          </tag>
          <tag name="return" line="128" description="The element if it can be found, null otherwise." type="\PHPWebDriver_WebDriverElement|null">
            <type>\PHPWebDriver_WebDriverElement</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="137" package="global">
        <name>getElementByClassName</name>
        <full_name>\AutomationDriver::getElementByClassName()</full_name>
        <docblock line="137">
          <description>Get an element onthe currently loaded page by its class.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="&lt;p&gt;The name of the class to look for.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="137" description="The element if it can be found, null otherwise." type="\PHPWebDriver_WebDriverElement|null">
            <type>\PHPWebDriver_WebDriverElement</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="148" package="global">
        <name>__navigteToControllerAction</name>
        <full_name>\AutomationDriver::__navigteToControllerAction()</full_name>
        <docblock line="148">
          <description>Navigate to a CakePHP controller action.</description>
          <long-description></long-description>
          <tag name="param" line="148" description="&lt;p&gt;Name of the controller.&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="148" description="&lt;p&gt;Name of the action.&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="148" description="&lt;p&gt;Parameters for the action.&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="148" description="True if navigation was sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJzNV21v2zYQ/pz8iisQVHKb2P2yL27TxXWyxUASGHa6fQgCgZZpm4gkaiQVJ9jy33dHUi+25aZDgWJGXmTyubfnjsfTp1/zVX7Ye/fuEOgHxpdj+MU/D2X+rMRyZSAcduDyegq3nKV+80rEPNN8DkU25wpuVxyuR7flMiEmfC60UWJWGCEzDXIBC5FwDWmhDShumMjAoBybyUcOcWUtkwa1dL2hs3qDPg034Cxn8QNbcnAflufdKzHrDgojU0ZGz5V45MpCE+eYhzZchXBlTN7v9dbrdVfmuCQLhealWva8kO6lwpz4L10krIMqe4eHiv9VCMUjmcWoJsCNNZ/Nrc1eFIlMmCgieND5eHg4yPN+v0BlYTBe5RPOkLbgGIKhzBZiWShOqAZoIgvjEPQksuXW/pA98Ak6wLUh0A03a6kerCmXThjAWiEnmB2mJKYJpjzhmShSMBLpTtMiEzEzHNbCrIjYrg0rTpjWsE0i/F3p/Tq5Ig2UOiWlocR6YTh7ZAoo6dnS6jrIUZhMHEURYb+qpPavcsdRVivAIvyTz5zdqHraUbgud1pUIkUafX9N59TBdlR78VoxZgnDKmIjVdejixlWBCyKLCaWIIriEhN2kK2Dgyqz/X5sH8NgzhesSChhGV9DVQdhB9O2IZBINg8DViWBUlwKW2yvt4NWVDF6C4nQIyxBJGYBpxja9GLyx8XkLkA+8Pnqt+CetB1p3B8zZTSC+FOeyDkPgx7qKoWt0SOzEvrkc5VLBAeB3chRdoSd4AmXPtiVhVDakEpcQVa4XcyKtLQSY0masDZsDaxX2CGgsXpXa76HN2gOCzqAt2+hYfETVHod8Qdi8U0dgYdZ3Jva03J5N84uSvVspAcHL/bvRnwLlmjudttE212xeKusXnz/nlZfmlRXVY52bNG0FnLYqAbFN2sncucLi9odjqhQSdBxtUEaG50kpCy81FWPqvBAsPI4AcMugrWc8dhQCxBmz2HwGH8QqlhKNUjJTniN/TBAcvlCPgWb7pwLXRq3jiRSN5zb48q8Etrjzclnq2gr9Bv2KJYUPIbJqOV1/Y2jWAq+xcERMmmvPt8Ss1rIwfGWK1QGMykRh4cAsOI8iHwTGnQRoxuLIjl2VQQS+6paC833xFPauJVYXSF5sC8suswcgIrKu+KPYnug1NJXMuWQ4636EyK4RFtjNOUz421VkVgg4bC4jZJJwtXAqsC7FqVsqyN3g/2po4hSns7w+Ci+xHkEH35ScNfW7MRb/e8hOrdtkKXrW4EOVzx+oCg1t65TsHGhFM9M8gx0KeB8RtHCimkcq4ArJZXeHzvFhicKfyvw98ZNZi6ZvpEXVqw8a9hyUnRHN498VaDlZhi4mSNjmEsMN8aGdGLNB98s3d85NQLwagAZ3EvA7BmblYbReesxFnN7isk+TTOkZnROxCZSPsBCqg3K2jvwhfPin6xIXE8o3UJehYEYHZ1x1IWDGN7+BHqN0iU3XumX59E8RC/ba2ibz7DdwS/P/f7o/Jii7fwgjTZdrUzanRvicZtQl+L/E6fD0tewdvuHGR5eDabT6GZwfXHcYONbdwtdv/TaFVcdAJh1tp3gGnXTZLdabpVyCjckWmwwpdgz2NGKpRrG9I9j29GUrh2hV5rnmn1P9/Qjd2OK3t8RG7EflyEdV96eOvdxlHadx07DGPzABnVa4j7u7N0Ftd7gnpD19za0M+yQ7tlN2YWdh91rG76k4eVsB2jqWh3owu5guIHdtOL5anY/L99y/dvaevkX/6kjdg==</source>
  </file>
  <file path="dev\Setup\Libs\Krb\Krb5Auth.real.php" generated-path="dev.Setup.Libs.Krb.Krb5Auth.real.html" hash="f6f8fb7bdb819dd9ea982a731d7bdd92" package="app.Lib.Krb">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.Krb"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends/>
      <name>Krb5Auth</name>
      <full_name>\Krb5Auth</full_name>
      <docblock line="19">
        <description>Real KrbAuth implementation for production.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="private" namespace="" line="25" package="global">
        <name>$__krbConn</name>
        <full_name>\Krb5Auth::__krbConn</full_name>
        <default></default>
        <docblock line="25">
          <description>The KADM5 connection to use.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\KADM5." variable="">
            <type>\KADM5.</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="31" package="global">
        <name>$__realm</name>
        <full_name>\Krb5Auth::__realm</full_name>
        <default></default>
        <docblock line="31">
          <description>The relm to use.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="37" package="global">
        <name>$__debug</name>
        <full_name>\Krb5Auth::__debug</full_name>
        <default></default>
        <docblock line="37">
          <description>If true, we're in debug mode and shouldn't actually take any action.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="bool" variable="">
            <type>bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="global">
        <name>__construct</name>
        <full_name>\Krb5Auth::__construct()</full_name>
        <docblock line="45">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;Username to construct the KADM5 object with.&lt;/p&gt;" type="string" variable="$krbUsername">
            <type>string</type>
          </tag>
          <tag name="param" line="45" description="&lt;p&gt;Keytam to construct the KADM5 object with.&lt;/p&gt;" type="string" variable="$keytab">
            <type>string</type>
          </tag>
          <tag name="param" line="45" description="&lt;p&gt;Relm we belong to.&lt;/p&gt;" type="string" variable="$realm">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$krbUsername</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keytab</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$realm</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="global">
        <name>addUser</name>
        <full_name>\Krb5Auth::addUser()</full_name>
        <docblock line="57">
          <description>Add a new user.</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;The username of the new user.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;The password for the user.&lt;/p&gt;" type="string" variable="$password">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="True if sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="global">
        <name>deleteUser</name>
        <full_name>\Krb5Auth::deleteUser()</full_name>
        <docblock line="84">
          <description>Remove a user.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;The username of the user to remove.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="84" description="True if sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="global">
        <name>checkPassword</name>
        <full_name>\Krb5Auth::checkPassword()</full_name>
        <docblock line="103">
          <description>Check if a username and password matches a known record.</description>
          <long-description></long-description>
          <tag name="param" line="103" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="103" description="&lt;p&gt;The password to check.&lt;/p&gt;" type="\striing" variable="$password">
            <type>\striing</type>
          </tag>
          <tag name="return" line="103" description="True if username and password match a record, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$password</name>
          <default></default>
          <type>\striing</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="global">
        <name>changePassword</name>
        <full_name>\Krb5Auth::changePassword()</full_name>
        <docblock line="122">
          <description>Change the password for a user.</description>
          <long-description></long-description>
          <tag name="param" line="122" description="&lt;p&gt;The users username.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="param" line="122" description="&lt;p&gt;The new password.&lt;/p&gt;" type="string" variable="$newpassword">
            <type>string</type>
          </tag>
          <tag name="return" line="122" description="True if sucessful, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newpassword</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="global">
        <name>userExists</name>
        <full_name>\Krb5Auth::userExists()</full_name>
        <docblock line="140">
          <description>Check if we know of a user with a certain username.</description>
          <long-description></long-description>
          <tag name="param" line="140" description="&lt;p&gt;The username to check.&lt;/p&gt;" type="string" variable="$username">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="True if user exists, false if user does not exist. Null on error." type="bool|null">
            <type>bool</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$username</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzNV11P4zgUfS6/4qqqRIsgfeJlWVjY7kgzy7BCDPO2EnKS28ZLYke2QwbN9r/vvXaSpl+A0Kx2qxISO/frnHNt9+dfyqw8mB4dHQB/4fbjLZw29zNdPhu5yByMZxP4ePMF7lEUzeRnmaCymEKlUjRwnyHcfLpvh/mNO0yldUbGlZNaWdBzmMscLRSVdWDQCanAkZ2I9RNC0kVT2pGXqAl0uZrgTy8NuCxF8igWCOEjyjL6LOPo2sR+Ng+5NLO97GCcOVf+NJ3WdR3pkoZ0ZSiiNotpY2SnhXQnzUNEGE3I5fSgQYpqEzlQnKvKZSCLMscClRNcKMy1gdLotEr4MfJ2SS6sZYNTb/G9c8S4XV/9dnNK9SuF3gSchsp6AODySZjwQnA0KI18Eg5h9PDwaOIZGZ2tOTOYF1sOmAa12HJgqIpiZf5pDs5UeAw1HhoEYifFuFpAoVMiSaVgM13lqTp0IBJXiTx/Biceee6ZR5pqQ8hY63wroPe3CkjZU2aEkzZRw6cRRZMtjKi+rxaNEgVCd0OlJa2ZV09AT8d/EXhQS5ftdIXPTsRwzf+Kd/rwaBHzdKkRYsw1jTrd8lLFpBaYVypw+PDQhRj3KzlukzluPE5IDYPByGXSnlw0EME5zEVu8aw/E+KfN2ZrU40SaFJhHarZF5QZnpzBdMoKgTB6zoMHg2VHzFWagvC+6KWd3FQtH6y57oFanOF8ybCkRqi1Sb1h98A94xpPwYrWh8ooLyO4p/RAzsFWCVo7r/LjAA9osjG1DFLfQYJIU4Zg3KV7vEog4D49gt95OZIqEeTQaqrCFsI4YeiRVhRUqYWpSAvp+5ICSgMZdUNOiA2OuEsEfZ3DonT8RowJOxFA+IO3i6LIZzegEsaMA/31UzoM7g8ncH7eEB+SGzjzHG4GI+oilfQJvuUBWYqcXTqd67pf6GRyFuw2JHJykZB8HK6sg+c+MN5yCYlwSQbjD98SLD2aozYtX8i6YtuZASaZhuEI/1TDkMHSXxs6O1WH4WaU5ceDS0Bm1XvaHyJEuFohHioKWHsFkdg0MZdGw61QXQLLvt7vsOAtSLxP7j4k5WG8lx8o3xRzdLiu4IBCJ4xOF9tEL9C9SSPBxclFiDaeBCb2s/8aMyvu9wG/wfuKh1mGySNDJVYg88bTrRMFZ0VHCOoupWtFkCc03GfsFcpYLhxky+SFxWndZhezLyRLqYYk30q6D3Xb+Hhh5RrRIekRXbsk3P16OpsJMg4ErgQSXju5kEq6zu1OOUAEw8shXde3nM2l4T/ThlB01HOb28Z20+6XgO2Y2vk+AbmmAAa2HfiBbZ34SnZS3Mvg32v0zfj9oP+H5qfTFXc3L6+BXH8ko/sEjf/R8CKJb+n7Ho1/qypfb2TAb7RD25bNdjTVtO7QT5MwHcEfbEfQoDHh+LqDaTb84L3tX8DfS+erLKF3dUPapJ9IYz5cwLBzvFHOsGVxe5/u7cntLEPWcbyL0uU/F1OLkQ==</source>
  </file>
  <file path="dev\Setup\Common\EmailGenerator.php" generated-path="dev.Setup.Common.EmailGenerator.html" hash="3aac0a892bf330d336b6fa519c4cf58e" package="dev.Setup.Common">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Common"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends/>
      <name>EmailGenerator</name>
      <full_name>\EmailGenerator</full_name>
      <docblock line="19">
        <description>Generate valid garbage email addresses.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="24" package="global">
        <name>MIN_LENGTH</name>
        <full_name>\EmailGenerator::MIN_LENGTH</full_name>
        <value>4</value>
        <docblock line="24">
          <description>Minimum length an e-mail can be.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="29" package="global">
        <name>MAX_LENGTH</name>
        <full_name>\EmailGenerator::MAX_LENGTH</full_name>
        <value>12</value>
        <docblock line="29">
          <description>Maximum length an e-mail can be.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" namespace="" line="35" package="global">
        <name>$__domains</name>
        <full_name>\EmailGenerator::__domains</full_name>
        <default>array('foo.org', 'example.com', 'bar.net', 'loa.fr', 'bmail.co.uk')</default>
        <docblock line="35">
          <description>List of domains to choose from.</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="47" package="global">
        <name>$__chars</name>
        <full_name>\EmailGenerator::__chars</full_name>
        <default>'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</default>
        <docblock line="47">
          <description>String of characters to use in the e-mail address.</description>
          <long-description></long-description>
          <tag name="var" line="47" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="global">
        <name>generate</name>
        <full_name>\EmailGenerator::generate()</full_name>
        <docblock line="53">
          <description>Generate a garbage e-mail address.</description>
          <long-description></long-description>
          <tag name="return" line="53" description="A random garbage e-mail address." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJyNU+9T00AQ/Zz+FfuhM02hpIDgDwoKVqTVFpFWRR2nc0kuyUFyF+8ubdHhf3cvuTYMOI6ZzjS3u+/t272Xw1d5kje6GxsNMD+4GFzAvn3vi/xWsjjR4PbbMBhPYEpJZpMjFlCuaAgFD6mEaUJhPJyuwqbikoZMacn8QjPBFYgIIpZSBVmhNEiqCeOgEUd8MacQrLtxoZHFs42O64R57smA45wENySmUD0hnXsTqovc64ssE7wsSStBtuSeRHATrfODbnexWHgix5AoJLYVMu5akOpmTG/Zg4eLaiNlt2HXBWeUU0k0hTlJWQgxkb4RQzPCUiBhKKlCDq/EBClRCk5NysKEhN9rqjHjLCsySCmPdQKEA90qaQJ89WnF4QS4Ro0znM9Gp+dn0wEcwV6v5iDL/+c4uao5dnZrkhFembmpUCAUL00LCBIhcF2RFJlXrnROJBApyW3FmEs2N1tozmYr1FGVdxuO04qEMDttdcyBLkmWp9QLRFYFfCI9TnV1SAXxImkTRjrWecWNCbRriRP0FI+NyCAhkgSaylJngSKto+zg9g5q1aqEPpJteIzo1snr/pvTt2eD4bv3o/H5h4uPl5Ppp89frr5+I34Q0ihO2PVNmnGR/5RKF/PF8vbX9s7uk739p8+ev2j1HluD1Lb4iyb8CArJrSw4AUk4rvAfEKO78NGREBU8MN8VxLaV20Y/OU6TF1nfzDPkpdtwLMPqKppGBwe1dzpgI2snmBUjnlpUC8dxnAht6jav8bzdA/w/hIcNTHhzs2ruNM0qh+Fy1XW7Y4ZDR7pNnTC19dIuu93uleVVM+8IVOFj4YOqDqz4OrBTIu7uSURU67gUWQfWeOvE76UPZ6WWh7n2j3JgewcVB7LdNe7+ABuliXU=</source>
  </file>
  <file path="plugins\MemberVoice\Controller\MemberVoiceIdeasController.php" generated-path="plugins.MemberVoice.Controller.MemberVoiceIdeasController.html" hash="246a37c5fbc7eb459cfc3cbc53655084" package="plugins.MemberVoice.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppController</extends>
      <name>MemberVoiceIdeasController</name>
      <full_name>\MemberVoiceIdeasController</full_name>
      <docblock line="19">
        <description>Controller for Ideas, allows a user to view, add, and vote on ideas.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$helpers</name>
        <full_name>\MemberVoiceIdeasController::helpers</full_name>
        <default>array('Html', 'Form', 'Paginator', 'Tinymce')</default>
        <docblock line="25">
          <description>Views rendered from this controller will have access to the following helpers.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$components</name>
        <full_name>\MemberVoiceIdeasController::components</full_name>
        <default>array('RequestHandler')</default>
        <docblock line="31">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="global">
        <name>$paginate</name>
        <full_name>\MemberVoiceIdeasController::paginate</full_name>
        <default>array('limit' =&gt; 5, 'order' =&gt; array('Idea.votes' =&gt; 'desc'))</default>
        <docblock line="37">
          <description>Options used when paginating ideas.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="28" package="global">
        <name>$_mvFirstName</name>
        <full_name>\MemberVoiceAppController::_mvFirstName</full_name>
        <default>'firstname'</default>
        <docblock line="28">
          <description>The key in the user data that represents the firstname.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="34" package="global">
        <name>$_mvLastName</name>
        <full_name>\MemberVoiceAppController::_mvLastName</full_name>
        <default>'surname'</default>
        <docblock line="34">
          <description>The key in the user data that represens the surname.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="global">
        <name>index</name>
        <full_name>\MemberVoiceIdeasController::index()</full_name>
        <docblock line="48">
          <description>Show a list of all ideas or all ideas in a category.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;If an integer, only show ideas in this category, if null show all ideas.&lt;/p&gt;" type="int|null" variable="$categoryId">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$categoryId</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="global">
        <name>idea</name>
        <full_name>\MemberVoiceIdeasController::idea()</full_name>
        <docblock line="92">
          <description>Show a single idea.</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;The id of the idea to show.&lt;/p&gt;" type="int|null" variable="$id">
            <type>int</type>
            <type>null</type>
          </tag>
          <tag name="throws" line="92" description="if id is null." type="\NotFoundException">
            <type>\NotFoundException</type>
          </tag>
          <tag name="throws" line="92" description="if no idea could be found with a matching id." type="\NotFoundException">
            <type>\NotFoundException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="123" package="global">
        <name>vote</name>
        <full_name>\MemberVoiceIdeasController::vote()</full_name>
        <docblock line="123">
          <description>Vote for an idea. This does not have a view, it is accessed via AJAX.</description>
          <long-description></long-description>
          <tag name="param" line="123" description="&lt;p&gt;The id of the idea to vote for.&lt;/p&gt;" type="int|null" variable="$id">
            <type>int</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>null</default>
          <type>int|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="182" package="global">
        <name>__getVoteUrl</name>
        <full_name>\MemberVoiceIdeasController::__getVoteUrl()</full_name>
        <docblock line="182">
          <description>Get the URL for voting.</description>
          <long-description></long-description>
          <tag name="return" line="182" description="The URL for voting." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="41" package="global">
        <name>_getUserID</name>
        <full_name>\MemberVoiceAppController::_getUserID()</full_name>
        <docblock line="41">
          <description>Returns the userID of the currently logged in user</description>
          <long-description></long-description>
          <tag name="return" line="41" description="The userID as defined by the containing application" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="plugins\MemberVoice\Model\MemberVoiceComment.php" generated-path="plugins.MemberVoice.Model.MemberVoiceComment.html" hash="37310de1179e42b4f648766168a32a2e" package="plugins.MemberVoice.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppModel</extends>
      <name>MemberVoiceComment</name>
      <full_name>\MemberVoiceComment</full_name>
      <docblock line="19">
        <description>Model for all comments data.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$useTable</name>
        <full_name>\MemberVoiceComment::useTable</full_name>
        <default>'comments'</default>
        <docblock line="25">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$alias</name>
        <full_name>\MemberVoiceComment::alias</full_name>
        <default>'Comment'</default>
        <docblock line="31">
          <description>Specify a nicer alias for this model.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="global">
        <name>$belongsTo</name>
        <full_name>\MemberVoiceComment::belongsTo</full_name>
        <default>array()</default>
        <docblock line="37">
          <description>Specify the 'belongs to' associations. (Populated in the ctor because we need to access parent properties).</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$tablePrefix</name>
        <full_name>\MemberVoiceAppModel::tablePrefix</full_name>
        <default>"mv_"</default>
        <docblock line="25">
          <description>Prefix for the MemberVoice tables.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$mvUserModel</name>
        <full_name>\MemberVoiceAppModel::mvUserModel</full_name>
        <default>'Member'</default>
        <docblock line="31">
          <description>Name of the model in the app that contains user data.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="global">
        <name>__construct</name>
        <full_name>\MemberVoiceComment::__construct()</full_name>
        <docblock line="45">
          <description>Constructor.</description>
          <long-description>We need to build the belongsTo array within the constructor,
because we need to access properties in the parent object.</long-description>
        </docblock>
      </method>
    </class>
    <source>eJx9Uk1v2kAQPZtfMYdIBpTYp15ok1JxSdVSoYa2hyhC6/VgtrF3V/sBRVX+e2bXxga1iiWQvfPmvTdv58NHvdOjfDodwRTCb3W/gnf0Et4XSh+NqHYOxosJ3C8fYI2s6YpfBUdpsQQvSzSw3iEsP69PxwHxHUthnRGFd0JJC2oLW1GjhcZbBwYdExIc9bFC7RF4ryaVI5asE5oPhfCc2YC5ZvyZVQjto2tfCWmzJTYFmp8qkCxViXXE1q2zDnvmFcY75/Qszw+HQ6Y0HSlvqFWZKu+abN4Id9N9ZBTZhCjz0Sm4KAJbZYDVNQ3SNCidhZI5lkUgr5m1cOZr0WIA/ziU5UXpk9Yt39+e/0EjF9tjDMuxoqZ/Bd7GiGC+ZwZCzrKKWon2BTmFKwKsI/gW0pOn9P0/pAwkqQbrgtk4hNsJuqTg4W2BtoPYu2n+Qx4cpwXWSlaWTKdAOSguWNyIDMYrpX3NHK1RtwvckYECOSP3cECQSDWalnGOFKFmJsSmDd2TcQLtZLDIjGHHS4ed8lqRy1geTwaPC7LgjA+Kp137NQgWXtRltDSQRAo4CAqocztQXIf+N4z3jk+TdqOo4jdyl1343nrJQ0Kw2fQK4wktRJLkOSzZM4L1JsrwsHFndGeOCN0ezmYXPJRAklyFS76562d7TH9YNOlTHxRhkjTu7TfWYJrc3kHX0+wDNO7odUTRzqCo5Bc8pkCwlBIwG1GmoUpqycvo5RXHc2et</source>
  </file>
  <file path="app\Lib\GoogleGeocode\GeocodeUrlBuilder.php" generated-path="app.Lib.GoogleGeocode.GeocodeUrlBuilder.html" hash="80d2dfe2f29b2b69600231024cf14483" package="app.Lib.GoogleGeocode">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.GoogleGeocode"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends/>
      <name>GeocodeUrlBuilder</name>
      <full_name>\GeocodeUrlBuilder</full_name>
      <docblock line="22">
        <description>Class to build geocode urls
https://developers.google.com/maps/documentation/geocoding</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="global">
        <name>buildAddressCheckUrl</name>
        <full_name>\GeocodeUrlBuilder::buildAddressCheckUrl()</full_name>
        <docblock line="31">
          <description>Given an array of data, return a string representing the URL to request</description>
          <long-description></long-description>
          <tag name="param" line="31" description="&lt;p&gt;An array of address data.&lt;/p&gt;" type="string[]" variable="$address">
            <type>string[]</type>
          </tag>
          <tag name="param" line="31" description="&lt;p&gt;Optional api key to use in the request.&lt;/p&gt;" type="string" variable="$apiKey">
            <type>string</type>
          </tag>
          <tag name="return" line="31" description="The URL to query." type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="31" description="If $address is invalid." type="\GeocodeException">
            <type>\GeocodeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$address</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$apiKey</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJx1k29v2jAQxl/Dp7hJqAlVl7zam3WodKhrq1Gt6qj2YpqQk1wSt4md2Q4MTf3uO/8hsFVDAWH77rlf7jl/uOjqbpyeno7BPnB/cw/vwv+F7HaKV7WBeDGFm7uvsELWhsMlz1FoLKAXBSpY1Qh3t6v9to14wIJro3jWGy6FBllCyRvU0PbagELDuABDeSyTG4R8qCakIZUkFJofDuznCAPmHcufWYXgP6zrkiXPkmspqwavUeaycCTzxlOFuCNOiGtjuvdput1uE9nRluwV1ZaqSkOSTltu3oZFQt2akmQ6Hiv82XOFaylykim4EqzFeL3+dLu8Wq+nkECUXiklVXr1K8fO9iANTMOGlYum5+NgACwapjUYCVnPmwIqHw69arQ9tqyaYAvcYEO0SieVe9ckl23ask6nhcz7FoVhrp4X4KJyyLlTDwyPqvloi5B3v4f613yDAhg9SrGddaxghp1Zs3pFu2D9FBWtO4WaytiFtfDxYWmxbU9Qm+CNYm1I+P4DJqwoKEfD5ZH6fs9WSV5lUU7HP+MOvrhmsYYc5vBMG1SqJ/PC/ISqXiCgBoXVgY1i1M7HmFrJ7dCJwQ24LQ+YnB6xYQ0vEte8UddnNARQ9iJ3wc6iSx+9qDF/po7G+/SzgX0GUTSlFo9GvIT4Dddr9/ZD5NQfjhwTCNy+woqjAcrdnAwHh+zsjEYv9J08SS5wz0NV7foIJwIfO8mYtt5brv042cEJg0TQ+jBMtAojhOmTluJC2wuiZiVrNJ4E7VnkdGlGv3FTHwCGSsnMDjAKKxP/zemRSk7eeqZ/ZOhm+L5xrdHEoaf7loXlPVPGvs4JTcYsonsX9s9dzP/FD5FWwTeSfsIADYl08DJ++QM/6a1O</source>
  </file>
  <file path="app\Lib\GoogleGeocode\Error\Exception\GeocodeException.php" generated-path="app.Lib.GoogleGeocode.Error.Exception.GeocodeException.html" hash="e5fcd44cf541eb63dea6a1f4f2e1f048" package="app.Lib.Error.Exception">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.Error.Exception"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\CakeException</extends>
      <name>GeocodeException</name>
      <full_name>\GeocodeException</full_name>
      <docblock line="19">
        <description>An exception thrown by certain Geocode methods.</description>
        <long-description></long-description>
      </docblock>
    </class>
    <source>eJxNUMFqwzAMvecrdGwLs0+7jME6QlkHLZQtP+A4amKaWMZWlpWxf5+TOl2ED9Z7kt6Tnl9c4zK52WQwPjjtT/CY/jm5qzd1w7DK17A/fkKBqkvkwWi0ASvobYUeigbh+F7M8FjxgZUJ7E3ZsyEbgM5wNi0G6PrA4JGVscCxT5X0haDvapY4ThFJaPtPjLGwAVun9EXVCLdQzomDKcXOe/Ji963RjcpTZXvzlSoXTmHVMLsnKYdhEOQiRL2P6uRrmZqC7Aw/pETEe63jSJmlq8GrBZy14j6eBgvlFTT6acM3JE0VQofcUBXE1KtbFcJM3Z3GOYy2CpCrywL9yX7/AOT+hvU=</source>
  </file>
  <file path="app\Lib\Error\Exception\InvalidStatusException.php" generated-path="app.Lib.Error.Exception.InvalidStatusException.html" hash="a0ded8c66c854b1f1ee3b4c66d4d1afb" package="app.Lib.Error.Exception">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.Error.Exception"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="global">
      <extends>\CakeException</extends>
      <name>InvalidStatusException</name>
      <full_name>\InvalidStatusException</full_name>
      <docblock line="22">
        <description>An exception thrown by certain Member methods if they are called on a member id who has the wrong status.</description>
        <long-description>This is it's own exception as such results are usually handled differently from the calling code, for example the
displaying a flash message if the Member method returned true or false but redirecting if this exception is thrown.</long-description>
      </docblock>
    </class>
    <source>eJxVks9q3DAQxu9+irk1Ca196qUUmrIEEshCaPYFZGu8EpElMTOKa0rfvSOvN7s1Otjz7zffJ3//kV1uuru7BuqBl8cX+Lq971JeyB+dwM3uFh73r3BAM23JZz9gZLRQokWCg0PYPx3O4VrxC61nId8X8SkypBFGH5BhKixAKMZHEO0zfXpHGD5oMYlOaTfQ/SVRn6s14D6b4c0cEU6Pybl99n37QJSoffg9YK7ktTKc9toqrzaFGyeSv3XdPM9tyhpKhZSe6NhtTdxNXr5sH636dasju2ZzDX5GwDNL9VCaI/QLDEirwj1OvRo0obhkGfxYNS9gSCWbENRBbTOaX8u8hdklcIZXa2ZK8QgsRgqfDTk4r2P0yCc1db6maxeXwam5XILwCilcFLPoyGgrzfpxRMIoGhspTSunbuKVNCSLn2FMpEPNlAPWbIXqVeZgllpjYAyGnW7MXM0/KfpfZ73eQlFxQgVB540mqNn6L2jKesJB6qy1V7VcJHjePGxXkwdFMTzFdxO8fV19+LhY7RKM6unOvOEl+qdp/v4DKxLzng==</source>
  </file>
  <file path="dev\Setup\Web\index.php" generated-path="dev.Setup.Web.index.html" hash="5f722b2954428a4229734d5863986860" package="dev.Setup.Web">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Web"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <source>eJy9ll9P2zAQwJ/bT3HyCxRtjcaASSwN29gQ08aEgGmPyI2vjdXE9mKnhW+/c+KkfxhSXqCq2ruzfXe/xPZdfGYyM4wODobgv3B9eQ3HQT7X5rGU88zB/vkILq9u4Q55EQZ/yhSVRQGVEljCXYZw9f2uNfsZNyikdaWcVk5qZUHPYCZztFBU1kGJjksFjtbxqV4ipF00pR15GYdAn9YD/rORBnwyPF3wOULzEbgc36KrzPgPTuvxvMkmjG/kB/uZc+Y0ilar1VgbMumqpJi6nEdhkY0K6d4GZUxPaUQuo+GwxL+VLMnD3jjKkBP8OHNFvjf6ODxLhoNBPNNlAVJMmBfuT45ODj+8Y5Dm3NoJ48Yo6UrNAAp0maZpRlvHgKf+KU2YrQEoHPPOBnGVQy0M4lzWXnN5T+4aGxn5FPPWuUCbltJ4RwwoOqUgS+sUL5AlF16EXySfQhzV61onQi6DOIilMpVr0u/Wgv/dMoSAmGOByoHDB0c8QlYFA/doaLI3MSj4Q45q7rIJOzw+ZrDkeUWDLEogxI588EahrOQT1sPerLYqG9LbRuiJ2S4LkJ36eojveyNiwWXOkm/+rydesyTABeX10I56o1UWw+v7HaSegN3CwLjWXw/zuP8bbJKhB5PQVeWkmtsnnNZw9R/QtETuUExb0LW+A5pmmC6m+qGlXOu1hCKYUDCIukBbiaeZposv5NwFSs5rCb5yx6ecrkjgSgDJdKtvM2wdMH+jucLMdE6Xpe0O2q75hSl24yV1qaBaUhi4aGzPM9CmouqCuTY+N1TLjd22O/DCHE8j+hMDGzYqpWom5/YNiK0XZcOGex6TXm++KLsd1qm9kfoAtF6TGxLgx80X+Fy5DPYXiIb6Aek7hRm1FbSpLDzqChZKr2CVcee1PSq9QhPGaOfUROtjs31GQw7UhjhqQ1g7v6FuADIpBKquzvm6LUV3EbQlPNpeWu9tvsQLms62o9w3F0vj3FZT6iTW9aXRgu/boEY7mcdRVZPFkc8mGQyHcd2pbXYfM63duvv4BzF2Adk=</source>
  </file>
  <file path="app\Lib\AutomationDriver\AutomationDriverTest.php" generated-path="app.Lib.AutomationDriver.AutomationDriverTest.html" hash="32d5ab30ac9826aafc504e8ef0b02622" package="app.Lib.AutomationDriver">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Lib.AutomationDriver"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\CakeTestCase</extends>
      <name>AutomationDriverTest</name>
      <full_name>\AutomationDriverTest</full_name>
      <docblock line="21">
        <description>A base class for CakePHP tests that use AutomationDriver.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="27" package="global">
        <name>$_automationDriver</name>
        <full_name>\AutomationDriverTest::_automationDriver</full_name>
        <default></default>
        <docblock line="27">
          <description>The AutomationDriver for this test.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="\AutomationDriver" variable="">
            <type>\AutomationDriver</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="global">
        <name>setUp</name>
        <full_name>\AutomationDriverTest::setUp()</full_name>
        <docblock line="32">
          <description>Create the AutomationDriver.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <source>eJxtkU1vwjAMhs/0V/iABEWiPe3CvkDdgUkgoa07o7Q1NAKSLHFg08R/XxI6QGVRD439vn4c++FZ1SpKB4MI/AeL6QLumv9Mqm/N1zVBP4thOn+HHNmuSc54icJgBVZUqCGvEeav+V/YK96w4oY0LyxxKQzIFaz4Fg3srCHQSIwLIOdjhdwjlGeakOSqJA1ofEn4c9UGjBUrN2yNcDpMqWTGi2RiSe6Yh75ovkcdpNtTY430qlXo10RqlKaHwyGRyoWk1Q4v9TptTCbdcRo2l8QNLHYl0yjS+Gm5xqUUpSvTa3O9shffR814YQIFc7xyy4yBldSQsQ36gRMaMm4UjMA6wU2dQDvZ2rncWQG/CEVlQj0fyDzm58z1u2n7Ap9qbgI8CSPaM32jC+iO0pKwJLft7pK1FJf3ZRoZYVjp/0/oKFu4KcLKitLnwCB9qH7seu10FNMoaDRqYvcu1PUNDp9ukPAIAg83kGA6Rsdf7h7qrg==</source>
  </file>
  <file path="app\Model\Group.php" generated-path="app.Model.Group.html" hash="b424f23952a64567c5013eaa174152cf" package="app.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="app.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="global">
      <extends>\AppModel</extends>
      <name>Group</name>
      <full_name>\Group</full_name>
      <docblock line="21">
        <description>Model for all group data</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="26" package="global">
        <name>FULL_ACCESS</name>
        <full_name>\Group::FULL_ACCESS</full_name>
        <value>1</value>
        <docblock line="26">
          <description>The id of the full access group.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>CURRENT_MEMBERS</name>
        <full_name>\Group::CURRENT_MEMBERS</full_name>
        <value>2</value>
        <docblock line="31">
          <description>The id of the current members group.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="36" package="global">
        <name>SNACKSPACE_ADMIN</name>
        <full_name>\Group::SNACKSPACE_ADMIN</full_name>
        <value>3</value>
        <docblock line="36">
          <description>The id of the snackspace admin group.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="41" package="global">
        <name>GATEKEEPER_ADMIN</name>
        <full_name>\Group::GATEKEEPER_ADMIN</full_name>
        <value>4</value>
        <docblock line="41">
          <description>The id of the gatekeeper admin group.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="46" package="global">
        <name>MEMBERSHIP_ADMIN</name>
        <full_name>\Group::MEMBERSHIP_ADMIN</full_name>
        <value>5</value>
        <docblock line="46">
          <description>The id of the membership admin group.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="51" package="global">
        <name>MEMBERSHIP_TEAM</name>
        <full_name>\Group::MEMBERSHIP_TEAM</full_name>
        <value>6</value>
        <docblock line="51">
          <description>The id of the membership team group.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="57" package="global">
        <name>$useTable</name>
        <full_name>\Group::useTable</full_name>
        <default>"grp"</default>
        <docblock line="57">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="63" package="global">
        <name>$primaryKey</name>
        <full_name>\Group::primaryKey</full_name>
        <default>'grp_id'</default>
        <docblock line="63">
          <description>Specify the primary key.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="69" package="global">
        <name>$hasAndBelongsToMany</name>
        <full_name>\Group::hasAndBelongsToMany</full_name>
        <default>array('Permission' =&gt; array('className' =&gt; 'Permission', 'joinTable' =&gt; 'group_permissions', 'foreignKey' =&gt; 'grp_id', 'associationForeignKey' =&gt; 'permission_code', 'unique' =&gt; true), 'Member' =&gt; array('className' =&gt; 'Member', 'joinTable' =&gt; 'member_group', 'foreignKey' =&gt; 'grp_id', 'associationForeignKey' =&gt; 'member_id', 'unique' =&gt; true, 'with' =&gt; 'GroupsMember'))</default>
        <docblock line="69">
          <description>Has and belongs to many (HABTM) associations</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="93" package="global">
        <name>$validate</name>
        <full_name>\Group::validate</full_name>
        <default>array('grp_description' =&gt; array('length' =&gt; array('rule' =&gt; array('between', 1, 200), 'required' =&gt; true, 'message' =&gt; 'Group description must be between 1 and 200 characters long')))</default>
        <docblock line="93">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="109" package="global">
        <name>getDescription</name>
        <full_name>\Group::getDescription()</full_name>
        <docblock line="109">
          <description>Get the Group description for a given id.</description>
          <long-description></long-description>
          <tag name="param" line="109" description="&lt;p&gt;The primary key of the Group to get the description of.&lt;/p&gt;" type="int" variable="$groupId">
            <type>int</type>
          </tag>
          <tag name="return" line="109" description="The description of the Group, or false if it can not be found." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$groupId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="global">
        <name>getGroupSummaryAll</name>
        <full_name>\Group::getGroupSummaryAll()</full_name>
        <docblock line="119">
          <description>Get a summary of the group records for all groups.</description>
          <long-description></long-description>
          <tag name="return" line="119" description="A summary of the data of all groups." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="119" description="Group::__getGroupSummary()" link="Group::__getGroupSummary()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="128" package="global">
        <name>getGroupList</name>
        <full_name>\Group::getGroupList()</full_name>
        <docblock line="128">
          <description>Get a list of groups</description>
          <long-description></long-description>
          <tag name="return" line="128" description="A list of groups." type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="138" package="global">
        <name>__getGroupSummary</name>
        <full_name>\Group::__getGroupSummary()</full_name>
        <docblock line="138">
          <description>Get a summary of the group records for all groups that match the conditions.</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;Only return a summary for groups that match these conditions.&lt;/p&gt;" type="array" variable="$conditions">
            <type>array</type>
          </tag>
          <tag name="return" line="138" description="A summary (id, name, description and member count) of the data of all groups that match the conditions." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="151" package="global">
        <name>__formatGroupInfo</name>
        <full_name>\Group::__formatGroupInfo()</full_name>
        <docblock line="151">
          <description>Format group information into a nicer arrangement.</description>
          <long-description></long-description>
          <tag name="param" line="151" description="&lt;p&gt;The info to format, usually retrieved from Group::__getGroupSummary.&lt;/p&gt;" type="" variable="$info"/>
          <tag name="return" line="151" description="An array of group information, formatted so that nothing needs to know database rows." type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="151" description="Group::__getGroupSummary" link="Group::__getGroupSummary"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$info</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <source>eJylV21v2zYQ/mz/ikMRQFbg2n1Z98Fdurqu2wSNsyB292UYDFqiLC4SqZKUXWPof9/xRZbsWFmABqhLk8eHd/fcm3/7vUiL7vD8vAvnYP7dXt7CG1yY9UQUO8nWqYbeJITL2RwWlOT+8JpFlCsaQ8ljKmGRUphdLaptI3FHY6a0ZKtSM8EViAQSllEFeak0SKoJ46DxHlmJDYVo/xoXGlEG/qH39YH5a6gB7wsS3ZM1BfdHimIwEzHN7FnmNPFnDd2gl2pdjIbD7XY7EAVuiVLie0Kuh/6SGuZMP/dfBuiiECGH3e64KEajEs97AS7tW0EfArcI33YrT9oNSIQEkmWwlqIsICaaWJQoI0rBZ7tJv2vKYwUVGvy7xzAeZbHxmvFRUiIQiSKKVy3ewGJ1IvSshk9fr6+X48lkOp/DBbx82wISlVJSriGn+YrKU0CTr3d305vFcjadfZjeGbBXbWCKo/MVMoAExjlS+RBtfjOefJnfjifT5fjj7OoG4V63wa2JpveUFhhLbXCfx4vpl+n0dnq3h/ulDc6bmLKiFc7beHl1u4d78wQ4jcH3ONpiOp4h2K812LygEUt2FkqTVYafAjCOBjZSN0SCSRS+doBFucLQgzMUWFjhC3i2lsWz03iFZDmRO7inu8fhvOAXukPAAAGXLA5qzEuigPAYVjQTfK2MhjnhO+hdjj8sZiFg0IqIEZvL+3eIlGR3+ExK1JjHHxzKQswMxoUT7HU7neCWypwphTABXLzDnc7+DE9tctyQnJpDaAr3ncA/gnHrFSdgiVgWezFVyWHyUbbmaG0laO31pw1jPh0J1ljLCFOyulFy9q10j2pZUrsbms9gZmPjCcZ4wdOGuAhbWnt+2gYPVsue0r4TbJlO3QVbjVRTwbDbaRS0P0nGYvsUyBJr+GMBsHGy9IB1o3pMVSRZoT319WknyChfe12aDjRvNTaDFdVbSjEW4GUfXr14EXpDJP1WMknjYwNzLJfYHxo2QkMJ14hWFDwsvLQJgLgQpUSSSJsiaeI4qOk2Hw3HfKbaZuFDcFv9Yc02CMziQdVgsWdJLCAMy/CZJfsqtrWmkcZV0XGYmIdr/0gTXiQu27GPlhJNYd+pAzoUqoH6gAolJMMGyBJgGiLCTas1DkgEdvHBAY1JySOLgY9/rCF7ldIhtqpOx79+plOmnr9LGI97QcKk0kiR5yxhNItVk0WrzuA4IkJspFhKY2YrzGl55hje6xAiE50fB2QQUGVuPVk1FutFSSMhsdEe9GRVs+INsS/C+BjD9G6zPrqJMwa/d94djZZL9JRdz93lXtjq0KbYOMt6p5x5Au+EsRmOWEYzp1WbOYdS7UTb565R+KRGjl6D9TR2TfmBNrZ/ljoUIDjJEB2lbrbZh85+cHSZ5nxwVp/DHzzbQeWh/ZsG/iS0OgZvjZYei/vAsd73D7LQFBVXkRGo5DpsD6vHrTKkSbYxtXXP2sMwaZpaleDQ8XnGeCJws0koBPh8TehRCjbAQjB172GYouNQYavCFcL37COH7H6yIp5Pc2y+Gu2xDArkgOOk7XoJX9McR9TjcukUtzOZWeAlh9HHKapE/S2fktENFsFEirw1KU/xVy2qBGlq2PcPaQRWwtGDRTPF6Qo4pbGdk+652FoyVwSDRYrtU8pDK5+n/Wn5G56bPvTRhI1KRZmZaQ07B4YoNwpqYYNmw+gWbcC484Zl7B7ndTGyTfEv/rcfVXDNYvOlMjv2u43gbRw3dr2cjWYrwUsb3ujB6reFmS3AhIi7jTfsLyiMwb1Dr1ww+gjFgOmYgYdg6DubceT0pd5Zj+EbozwOqulohN70veigxmDNsUids2YG/s+lg8LkblvT8J79v+ev4681MxXUEH5gqjLDDX/LolRp79BMN480RptOUPUyrBl+53g+appQyVh9qszEpdsP7XhiNP/RzNADFWxC/vgPSLrzZw==</source>
  </file>
  <file path="plugins\MemberVoice\Controller\MemberVoiceCommentsController.php" generated-path="plugins.MemberVoice.Controller.MemberVoiceCommentsController.html" hash="0b583e519c2550847a57cf20d1d3fc5c" package="plugins.MemberVoice.Controller">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Controller"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppController</extends>
      <name>MemberVoiceCommentsController</name>
      <full_name>\MemberVoiceCommentsController</full_name>
      <docblock line="19">
        <description>Controller for comments, allows addid of comments</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="" line="30" package="global">
        <name>VERSION_MAJOR</name>
        <full_name>\AppController::VERSION_MAJOR</full_name>
        <value>0</value>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="31" package="global">
        <name>VERSION_MINOR</name>
        <full_name>\AppController::VERSION_MINOR</full_name>
        <value>3</value>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="32" package="global">
        <name>VERSION_BUILD</name>
        <full_name>\AppController::VERSION_BUILD</full_name>
        <value>4</value>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="" line="28" package="global">
        <name>$_mvFirstName</name>
        <full_name>\MemberVoiceAppController::_mvFirstName</full_name>
        <default>'firstname'</default>
        <docblock line="28">
          <description>The key in the user data that represents the firstname.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="34" package="global">
        <name>$_mvLastName</name>
        <full_name>\MemberVoiceAppController::_mvLastName</full_name>
        <default>'surname'</default>
        <docblock line="34">
          <description>The key in the user data that represens the surname.</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="global">
        <name>$helpers</name>
        <full_name>\AppController::helpers</full_name>
        <default>array('Html', 'Form', 'Nav')</default>
        <docblock line="38">
          <description>List of helpers views rendered from this controller will have access to.</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="global">
        <name>$email</name>
        <full_name>\AppController::email</full_name>
        <default>null</default>
        <docblock line="44">
          <description>Email object, used for easy mocking.</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="\class" variable="">
            <type>\class</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="global">
        <name>$components</name>
        <full_name>\AppController::components</full_name>
        <default>array('Session', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'members', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; null, 'controller' =&gt; 'pages', 'action' =&gt; 'display', 'home'), 'Hms' =&gt; array('fields' =&gt; array('username' =&gt; 'email'), 'userModel' =&gt; 'Member'), 'authorize' =&gt; array('Hms')), 'Nav', 'AuthUtil')</default>
        <docblock line="50">
          <description>List of components this controller uses.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="74" package="global">
        <name>$__mainNav</name>
        <full_name>\AppController::__mainNav</full_name>
        <default>array()</default>
        <docblock line="74">
          <description>List of link information that will be used to render the main navigation element.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="25" package="global">
        <name>add</name>
        <full_name>\MemberVoiceCommentsController::add()</full_name>
        <docblock line="25">
          <description>Allow a use to add a comment.</description>
          <long-description>Expects a post request. Redirects to the idea on success.</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="41" package="global">
        <name>_getUserID</name>
        <full_name>\MemberVoiceAppController::_getUserID()</full_name>
        <docblock line="41">
          <description>Returns the userID of the currently logged in user</description>
          <long-description></long-description>
          <tag name="return" line="41" description="The userID as defined by the containing application" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="global">
        <name>isAuthorized</name>
        <full_name>\AppController::isAuthorized()</full_name>
        <docblock line="211">
          <description>Check if a user is allowed to complete a request.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;An array of data describing the user attempting to make the request.&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="param" line="211" description="&lt;p&gt;The request the user is trying to make.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="211" description="True if user is able to complete request, false otherwise." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="global">
        <name>__construct</name>
        <full_name>\AppController::__construct()</full_name>
        <docblock line="83">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="101" package="global">
        <name>__addMainNav</name>
        <full_name>\AppController::__addMainNav()</full_name>
        <docblock line="101">
          <description>Add an item to the main nav list.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Text to display with the link.&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array to pass to the HtmlHelper to construct the link when rendering.&lt;/p&gt;" type="string[]" variable="$link">
            <type>string[]</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;Array of group ids that have access to this link, if null, all groups have access to link.&lt;/p&gt;" type="int[]|null" variable="$access">
            <type>int[]</type>
            <type>null</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;A list of status ids, a member must be in one of these statuses for this link to be visible.&lt;/p&gt;" type="int[]|null" variable="$statuses">
            <type>int[]</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$link</name>
          <default></default>
          <type>string[]</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$access</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$statuses</name>
          <default></default>
          <type>int[]|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="global">
        <name>getMainNav</name>
        <full_name>\AppController::getMainNav()</full_name>
        <docblock line="115">
          <description>Return a list of navigation elements that a user is allowed to access.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Only navigation elements accessible by this user will be returned.&lt;/p&gt;" type="int" variable="$userId">
            <type>int</type>
          </tag>
          <tag name="return" line="115" description="A list of link information." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default></default>
          <type>int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="global">
        <name>beforeFilter</name>
        <full_name>\AppController::beforeFilter()</full_name>
        <docblock line="163">
          <description>Called before the controller action. Sets up the authentication.</description>
          <long-description></long-description>
          <tag name="link" line="163" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="global">
        <name>beforeRender</name>
        <full_name>\AppController::beforeRender()</full_name>
        <docblock line="174">
          <description>Called after the controller action is run, but before the view is rendered.</description>
          <long-description>Set up the common view variables, navigation links, memberId, etc.</long-description>
          <tag name="link" line="174" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="224" package="global">
        <name>getVersionString</name>
        <full_name>\AppController::getVersionString()</full_name>
        <docblock line="224">
          <description>Get a string detailing the current HMS version.</description>
          <long-description></long-description>
          <tag name="return" line="224" description="A string of the current HMS version." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="238" package="global">
        <name>_sendEmail</name>
        <full_name>\AppController::_sendEmail()</full_name>
        <docblock line="238">
          <description>Send an e-mail to one or more email addresses.</description>
          <long-description></long-description>
          <tag name="param" line="238" description="&lt;p&gt;Either an array of email address strings, or a string containing a singular e-mail address.&lt;/p&gt;" type="string[]|string" variable="$to">
            <type>string[]</type>
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;The subject of the email.&lt;/p&gt;" type="string" variable="$subject">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Which email view template to use.&lt;/p&gt;" type="string" variable="$template">
            <type>string</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;Array containing all the variables to pass to the view, Defaults to empty array.&lt;/p&gt;" type="array" variable="$viewVars">
            <type>array</type>
          </tag>
          <tag name="param" line="238" description="&lt;p&gt;If true then the sending of this e-mail we be recorded. Defaults to true.&lt;/p&gt;" type="bool" variable="$record">
            <type>bool</type>
          </tag>
          <tag name="return" line="238" description="True if e-mail was sent, false otherwise." type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string[]|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$subject</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$viewVars</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$record</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="283" package="global">
        <name>_getLoggedInMemberId</name>
        <full_name>\AppController::_getLoggedInMemberId()</full_name>
        <docblock line="283">
          <description>Get the id of the currently logged in Member.</description>
          <long-description></long-description>
          <tag name="return" line="283" description="The id of the currently logged in Member, or 0 if not found." type="int">
            <type>int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="293" package="global">
        <name>__writeEmailContents</name>
        <full_name>\AppController::__writeEmailContents()</full_name>
        <docblock line="293">
          <description>Write an e-mail to a file.</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;Aray of e-mail data.&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;The folder to save to e-mail to.&lt;/p&gt;" type="string" variable="$toFolder">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$toFolder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="308" package="global">
        <name>__splitEmailHeaders</name>
        <full_name>\AppController::__splitEmailHeaders()</full_name>
        <docblock line="308">
          <description>Given a list of headers, split them into an assoc array.</description>
          <long-description></long-description>
          <tag name="param" line="308" description="&lt;p&gt;String containing all header info.&lt;/p&gt;" type="string" variable="$headers">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="An assoc array of headers." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="323" package="global">
        <name>__countFilesInFolder</name>
        <full_name>\AppController::__countFilesInFolder()</full_name>
        <docblock line="323">
          <description>Given the path to a directory, return the number of files in said directory</description>
          <long-description></long-description>
          <tag name="param" line="323" description="&lt;p&gt;Path to folder to count files in.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="The number of files in the folder." type="int">
            <type>int</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzNVN1r2zAQf07+ihsMbIfGftrLPrKWsNLCAmUJeyllKNY5FrMlT5KTlJL/vXe2krh00KfBDAFLd/f7uLv489embMbZZDKGCfDv7uYOPtALv89N82jVpvQQzxO4WSxhhaIOwe8qR+1QQqslWliVCIvb1fGaM36gVM5btW69MtqBKaBQFTqoW+fBohdKg6c6sTZbhPzEpo0nlDQQXZ4D/AxkwGUj8t9ig9A/TdVulHbpAus12p+GQeZGe2uqCm1XUPXyQsFAMMSl983HLNvtdqlp6Mq0luqN3WShyGW18tNwSKlvCUFm42P3zkxQGEt26hq1dxcgqsrsHAgpleQmHCNddV4J52CgeB6iAzjce9TyRdZV0wwSnk4irpgLBLTkyBvmpEMg5IbCt32DuSc10JhuCn9adD7thmW7CJXxUJREAUaDa/McnUs7taOmXVMDoGh1zkNlgjgh/tFIFRC/96Vy01kAnc6UiyOmiZI+Z5RlcFt08NSiGqTwpE5oWCNsRaXoTAsltAQntijTNOWiAfLrPk1nnPqKmZGPpMy6RE+WaYaOVRfU9BJqOvHyMJ8N9jvCUUBb9ulEgf6aS+IosMKS9b2Lkk9dPu1yazWcRPRYsbBWPMYQ9XsZwZcZRHXnYMsOoguI8tMQ+zB33XFAdP09X9Ld3zzeHxVFD/dd3i8lowdIemEHwIoW4ekNU2wGrgX9N+V/72j80tXbk6KPSb9Nwdq/dkZfw30U5JLaw/jwDMwFt34=</source>
  </file>
  <file path="dev\Setup\Updates\0.3.2.php" generated-path="dev.Setup.Updates.0.3.2.html" hash="fb98889ad98d883b54cfba1189a45ba9" package="dev.Setup.Updates">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="dev.Setup.Updates"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <source>eJytVm1v2zYQ/mz/ioMRQFLh2E23fZnntKqtNMb8NlleV6yFzFi0zVZvI6mkQZH/viMlWbLbvGETDFgk756753gv+u11ukub3RcvmqB+ML+cwy/F+yBJbznb7iSYAwsuJwvwKImKwzFb01jQALI4oBy8HYXJyCu3lYRLAyYkZ1eZZEksINnAhoVUQJQJCZxKwmKQqEeukmsK6721OJGI0ikMvakO1FNzA96kZP2FbCnkT0CvOwsqs7SzTAMiqdAyYe5RIVPzEcydlOmv3e7NzU0nSXEryTjaTfi2WyiJbsTkabHoYKQshOw2myfrJI6hDydyx8Tpue9vqRxeDXCTrhVZ0wjohmShNNogeUatHuqUsmGynVAh0G/TcGmUXLN4C6uIRleU+3Gm/law4UlUboqVgQB7fZ7Ff2SU35raiza07LHnuODZb8dOpQJDdzY/hm09wZEdiYOQ/n8eFHj3m16kIZNS2Y5JRIHFMsFE4ULqJWqDyLh6Nx7wHs+190puBYiw2kOsEPKJRIw6kRqTwaU9fad2crwD8D9tF49dE85evgRLibr2QKEsHA9CgsTOYDAbj23PKZa+uFGlsfPXDKbL8RiGzoW9HHt6cT9JOwg0xSIaOcv/RMseDqGGd8REu2ZfKM064YduocyhLA6T9Rdf0q+yTKSUxc/KIi1fpFAd7ikpHFCx5ixVlViaF5LI7FkOFBqFC3XI+13QfSe/pFy7s5JMhmXQ1CaNaCwF9g7CObk1m43Wcj5UubE3qPKmUOsb7wnTgJuEY4eMJVlL7HPYOkNhwPtLx90r+ixY9V+12s9BnOSZsGMp2EGk2nECJE153o8ftfbT86yhQKxTOOFqZKTkVsXiR8A/I/BBkI+v6nPCsMn2sL3Wgmrdey9zytEB3SGE6jZqFhVlgFdUK2bVbaqDsjJ01pAwLMJVb/zf5dDCGTsDDwfPhTubVLWmcuYkIkJoaUQwjF4TfaJkvQOzDk4EnORaFnxrNmpKnT7sg72vYRXtVq/ZYBuEyXf/NvaMjE/Q70OchaEGO0arUe+rcm9X3UCvFfAd0BCHpdZWJ3PCdf7Sr2mYBBhcULfwA8vqNlCnauV9nIUsyiN1eo7UQx+riqTUV58J8dbUJeFjOm6kWdmyrBxJMVwnWXxwBufwMqfWOClcf9wOi+quHxpq1AnXMY3Xhj5tPhxGoyJstKtoGiWSoWP63b2WRVDMaywCNPltH9b9tvHprgUdwNTvNe8eKJAK/t6iGGBk8ma1i4RPI1XlOFTIVUg7OuP/KVK1NXAdlXR5YxxdwHTmgfPXaOEtDnWxmzWgtqVp4Dw3z84srZSPlKU380dTBJ04U6+d69R4HysUEiK7+oxfV+ghjoHjQ8kiio0gSvG4fK0slvN1sHRdNOl7o4mz8OzJPNeeu6OJ7X6A350PYB56b6GABc703Wjq9EdxnAzfVmg4K7H6+vlQ77UemCx5KB+b7B+NWj9W37gfDdjyJEsPb2M0XTiuB6OpN0PmOCbxC1P1P6KHU2e15RgFE9S/otDO3+oDzMJRP146CzB1eNoAx5bR4pP4/At/+PYm</source>
  </file>
  <file path="plugins\MemberVoice\Model\MemberVoiceIdea.php" generated-path="plugins.MemberVoice.Model.MemberVoiceIdea.html" hash="08bbcd5a4de4436aae4008fbb314bf7b" package="plugins.MemberVoice.Model">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>Copyright (C) HMS Team

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="HMS Team"/>
      <tag name="package" line="0" description="plugins.MemberVoice.Model"/>
      <tag name="license" line="0" description="MIT License (http://www.opensource.org/licenses/mit-license.php)"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="global">
      <extends>\MemberVoiceAppModel</extends>
      <name>MemberVoiceIdea</name>
      <full_name>\MemberVoiceIdea</full_name>
      <docblock line="19">
        <description>Model for all idea data.</description>
        <long-description></long-description>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$useTable</name>
        <full_name>\MemberVoiceIdea::useTable</full_name>
        <default>'ideas'</default>
        <docblock line="25">
          <description>Specify the table to use.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$alias</name>
        <full_name>\MemberVoiceIdea::alias</full_name>
        <default>'Idea'</default>
        <docblock line="31">
          <description>Specify a nicer alias for this model.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="37" package="global">
        <name>$hasAndBelongsToMany</name>
        <full_name>\MemberVoiceIdea::hasAndBelongsToMany</full_name>
        <default>array('Category' =&gt; array('className' =&gt; 'MemberVoice.MemberVoiceCategory', 'joinTable' =&gt; 'mv_categories_ideas'))</default>
        <docblock line="37">
          <description>Specify 'has and belongs to many (HABTM)'' associations.</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="48" package="global">
        <name>$hasMany</name>
        <full_name>\MemberVoiceIdea::hasMany</full_name>
        <default>array('Vote' =&gt; array('className' =&gt; 'MemberVoice.MemberVoiceVote'), 'Comment' =&gt; array('className' =&gt; 'MemberVoice.MemberVoiceComment'))</default>
        <docblock line="48">
          <description>Specify 'has many associations.</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="61" package="global">
        <name>$belongsTo</name>
        <full_name>\MemberVoiceIdea::belongsTo</full_name>
        <default>array('Status' =&gt; array('className' =&gt; 'MemberVoice.MemberVoiceStatus'))</default>
        <docblock line="61">
          <description>Specify 'belongs to' associations.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="25" package="global">
        <name>$tablePrefix</name>
        <full_name>\MemberVoiceAppModel::tablePrefix</full_name>
        <default>"mv_"</default>
        <docblock line="25">
          <description>Prefix for the MemberVoice tables.</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="global">
        <name>$mvUserModel</name>
        <full_name>\MemberVoiceAppModel::mvUserModel</full_name>
        <default>'Member'</default>
        <docblock line="31">
          <description>Name of the model in the app that contains user data.</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="global">
        <name>saveVote</name>
        <full_name>\MemberVoiceIdea::saveVote()</full_name>
        <docblock line="75">
          <description>Saves votes for an idea</description>
          <long-description></long-description>
          <tag name="param" line="75" description="&lt;p&gt;ID of idea to save this vote against&lt;/p&gt;" type="integer" variable="$ideaID">
            <type>integer</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;ID of currently logged in user&lt;/p&gt;" type="mixed" variable="$userID">
            <type>mixed</type>
          </tag>
          <tag name="param" line="75" description="&lt;p&gt;Number of votes to apply, one of -1, 0, 1&lt;/p&gt;" type="integer" variable="$votes">
            <type>integer</type>
          </tag>
          <tag name="return" line="75" description="either false on failure, or total sum of votes for idea on success" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ideaID</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userID</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$votes</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <source>eJydVk1v2zgQPcu/YgoElZV17Pawl+06TZoeUqDuFhujlyAIaIm22UqkQFJxhUX++84MKdlq3MU2hhNInJk3bz7pP9/W23o0Oz0dwSnQ3+frz/A7PtDzlalbqzZbD+OrDK4XN7CUoorCjyqX2skCGl1IC8uthMWHZXdMGn/LQjlv1arxymgHZg1rVUoHVeM8WOmF0uDRTqzMg4S896aNR5RpdHSxF9DngAZc1CL/JjYSwqcum43SbrqQ1UraL4ZAFqaQJeuWgVnUPeAK46339R+z2W63m5oaj0xj0dTYzSwauVml/Fl8mWLKMoScjbrEsRNYGwuiLEEVUkAhvJiyUl4K5+CA0weSy+9e6mJwflnXAeifHvimlrlat5wlL1Yl/jfQOM4NXDwIC5RgvWFHSd2skCKcoMKSleeQEhmXvnmCKECjSyKshGPqfquwNETgv9GDBUJTHEeQ0y2KhS5gJUujN44oV0K3ML6+fLdcZGkKmBCTK8FtsXcmrBXt0BdCXeriXQBamgXBzIPieJQk6ZXwcmNsmybz86Q/TlLO+SdRSRakg4bYP/fWEzb6apTmvAWj6uE+DwpKuvuQR1LMRkn2k6g5zF8J7klAX4yXzwuGLZnfhDNjqkpq/8zEROMO7li8++r+Qj1XXSUHQd944Rv3PKrR9khhxAOumgfMSmhvoXkwuz2Hq8OKCpTGCuMYnJDsw3vAL64pnmBsW4cYYS4IB8QGN5bzB+aV+o4bkAbO9sZ5Yy0mr2yhNJsNinHLkcIxr4Hep4bCIdvwjp5FXZftBIyWdHz2egKvJvCaIXBxNlZH11LharCwFiXuMaPxQZWNlWiJA228KME11R6ZEsHBoapr8lw6NyjQutE5VZEjp44ax8RMuiAnkXSGWypJWIq1PKEknZ2vlS7G6VpZh70TC5zmRheKWyOF+Xl3Sstjqgo+ij6yDMuHmFruAtt5kNyGTXN3m/JxeodFTpLZDK5x5Lg6RA03mZWiaDnS4i0B8ROicHYIGsOXIt/COOLyzNxh+4agQkyJWqMCvd+mBIyjjzrzeZeBqLWHj7qk9iZITFlww/SynjhKH0f0FyL469sEdlvhwW3p5thJKAxT7/KPEN42TL6nVRCZUPGXL7sewqNXkRnietvi3qZGyktJoxga2JOrwkinU483EN7OL+C9oZcCW063mEzc9ggRe6xP3CNIfDrCYO8Sq8ZOJvCVrncKgCSDavbPv0Xae+wex8qKfg1gCgNn7qafI51Bl23uiiR2IuXu7BzvMkk9zJyzoNAHMcgZed5hH3C6KHU/hMI3MO8PLvBBefocDQL5H3EPGuEy9w12QMvOXlAH0A+Iwy2ZhCnYjxC7SYcjNAmHod34vHPNEr4asr6ZuihiDthlPxSHrg/WMqJ3Q8H4cStEEbG4P0ZpwGlPKDAKlB47WqGCRO4y3iuyGDO5LDKN7dkH92MbPWnfEX4f/wXA8kGe</source>
  </file>
  <package name="app" full_name="app"/>
  <package name="app.Console" full_name="app.Console"/>
  <package name="app.Console.Command" full_name="app.Console.Command"/>
  <package name="app.Controller" full_name="app.Controller"/>
  <package name="app.Controller.Component" full_name="app.Controller.Component"/>
  <package name="app.Controller.Component.Auth" full_name="app.Controller.Component.Auth"/>
  <package name="app.Lib.AutomationDriver" full_name="app.Lib.AutomationDriver"/>
  <package name="app.Lib.CsvReader" full_name="app.Lib.CsvReader"/>
  <package name="app.Lib.Error.Exception" full_name="app.Lib.Error.Exception"/>
  <package name="app.Lib.GoogleGeocode" full_name="app.Lib.GoogleGeocode"/>
  <package name="app.Lib.Krb" full_name="app.Lib.Krb"/>
  <package name="app.Lib.MailChimp" full_name="app.Lib.MailChimp"/>
  <package name="app.Model" full_name="app.Model"/>
  <package name="app.Model.Behavior" full_name="app.Model.Behavior"/>
  <package name="app.View.Helper" full_name="app.View.Helper"/>
  <package name="dev.Setup.Cmd" full_name="dev.Setup.Cmd"/>
  <package name="dev.Setup.Common" full_name="dev.Setup.Common"/>
  <package name="dev.Setup.Updates" full_name="dev.Setup.Updates"/>
  <package name="dev.Setup.Web" full_name="dev.Setup.Web"/>
  <package name="global" full_name="global"/>
  <package name="plugins.MemberVoice.Controller" full_name="plugins.MemberVoice.Controller"/>
  <package name="plugins.MemberVoice.Model" full_name="plugins.MemberVoice.Model"/>
  <namespace name="global" full_name="global"/>
  <namespace name="" full_name="">
    <namespace name="" full_name="\"/>
  </namespace>
  <deprecated count="0"/>
</project>
